{"version":3,"sources":["kendo.validator.js"],"names":["f","define","$","undefined","resolveRules","element","name","resolvers","kendo","ui","validator","ruleResolvers","rules","extend","resolve","decode","value","replace","numberOfDecimalDigits","split","length","parseHtml","text","parseHTML","searchForMessageContainer","elements","fieldName","attr","idx","containers","invalidMsgRegExp","test","className","getAttribute","add","isLabelFor","label","nodeName","SUMMARYTEMPLATE","Validator","window","Widget","NS","INVALIDMSG","RegExp","INVALIDINPUT","VALIDINPUT","VALIDATIONSUMMARY","INVALIDLABEL","MESSAGEBOX","INPUTINNER","INPUTWRAPPER","ARIAINVALID","ARIADESCRIBEDBY","emailRegExp","urlRegExp","INPUTSELECTOR","CHECKBOXSELECTOR","NUMBERINPUTSELECTOR","BLUR","NAME","FORM","NOVALIDATE","VALIDATE","CHANGE","VALIDATE_INPUT","proxy","patternMatcher","pattern","matcher","input","selector","val","filter","hasAttribute","attributes","messages","allowSubmit","noop","validateOnInit","init","options","that","this","resolved","validateAttributeSelector","fn","call","_errorTemplate","template","errorTemplate","_summaryTemplate","validationSummary","is","_inputSelector","_checkboxSelector","_errors","_attachEvents","_isValidated","_validateOnInit","validate","events","required","min","max","step","email","url","date","dateCompare","captcha","noNameCheckbox","quote","indexOf","namedCheckbox","find","checkbox","radio","parseFloat","raise","decimals","Math","pow","floor","parseDate","widgetInstance","isValidated","isValid","data","getCaptchaId","_validating","done","_checkElement","fail","error","console","warn","removeData","validateOnBlur","_allowSubmit","errors","destroy","off","_submit","e","stopPropagation","stopImmediatePropagation","preventDefault","state","validateInput","trigger","on","inputs","invalid","result","eq","showValidationSummary","valid","lbl","messageText","messageLabel","wasValid","isInputInner","inputWrapper","lblId","parentElement","nextElement","prevElement","widget","inputWrap","inputLabel","errorId","_checkValidity","_findMessageContainer","next","addClass","_extractMessage","key","message","field","parent","removeAttr","_decorateMessageContainer","replaceWith","get","prev","closest","insertAfter","wrapper","removeClass","toggleClass","_inputWrapper","_inputLabel","_associateMessageContainer","hideMessages","_disassociateMessageContainers","reset","labels","hideValidationSummary","locators","messageLocators","getElementsByTagName","locate","container","decorate","ruleKey","nonDefaultMessage","customMessage","prototype","isFunction","format","rule","results","push","setOptions","deepExtend","_setEvents","_getInputNames","sorted","nextFocusable","getWidgetFocusableElement","toggleAttribute","i","addBack","_errorsByName","inputNames","_renderSummary","hasClass","insertBefore","join","_summaryClick","link","target","errorsList","summary","html","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.validator.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.validator', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'validator',\n        name: 'Validator',\n        category: 'web',\n        description: 'The Validator offers an easy way to do a client-side form validation.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, NS = '.kendoValidator', INVALIDMSG = 'k-invalid-msg', invalidMsgRegExp = new RegExp(INVALIDMSG, 'i'), INVALIDINPUT = 'k-invalid', VALIDINPUT = 'k-valid', VALIDATIONSUMMARY = 'k-validation-summary', INVALIDLABEL = 'k-text-error', MESSAGEBOX = 'k-messagebox k-messagebox-error', INPUTINNER = '.k-input-inner', INPUTWRAPPER = '.k-input', ARIAINVALID = 'aria-invalid', ARIADESCRIBEDBY = 'aria-describedby', emailRegExp = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i, urlRegExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i, INPUTSELECTOR = ':input:not(:button,[type=submit],[type=reset],[disabled],[readonly])', CHECKBOXSELECTOR = ':checkbox:not([disabled],[readonly])', NUMBERINPUTSELECTOR = '[type=number],[type=range]', BLUR = 'blur', NAME = 'name', FORM = 'form', NOVALIDATE = 'novalidate', VALIDATE = 'validate', CHANGE = 'change', VALIDATE_INPUT = 'validateInput', proxy = $.proxy, patternMatcher = function (value, pattern) {\n                if (typeof pattern === 'string') {\n                    pattern = new RegExp('^(?:' + pattern + ')$');\n                }\n                return pattern.test(value);\n            }, matcher = function (input, selector, pattern) {\n                var value = input.val();\n                if (input.filter(selector).length && value !== '') {\n                    return patternMatcher(value, pattern);\n                }\n                return true;\n            }, hasAttribute = function (input, name) {\n                if (input.length) {\n                    return input[0].attributes[name] != null;\n                }\n                return false;\n            };\n        if (!kendo.ui.validator) {\n            kendo.ui.validator = {\n                rules: {},\n                messages: {},\n                allowSubmit: $.noop,\n                validateOnInit: $.noop\n            };\n        }\n        function resolveRules(element) {\n            var resolvers = kendo.ui.validator.ruleResolvers || {}, rules = {}, name;\n            for (name in resolvers) {\n                $.extend(true, rules, resolvers[name].resolve(element));\n            }\n            return rules;\n        }\n        function decode(value) {\n            return value.replace(/&amp/g, '&amp;').replace(/&quot;/g, '\"').replace(/&#39;/g, '\\'').replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n        }\n        function numberOfDecimalDigits(value) {\n            value = (value + '').split('.');\n            if (value.length > 1) {\n                return value[1].length;\n            }\n            return 0;\n        }\n        function parseHtml(text) {\n            if ($.parseHTML) {\n                return $($.parseHTML(text));\n            }\n            return $(text);\n        }\n        function searchForMessageContainer(elements, fieldName) {\n            var containers = $(), element, attr;\n            for (var idx = 0, length = elements.length; idx < length; idx++) {\n                element = elements[idx];\n                if (invalidMsgRegExp.test(element.className)) {\n                    attr = element.getAttribute(kendo.attr('for'));\n                    if (attr === fieldName) {\n                        containers = containers.add(element);\n                    }\n                }\n            }\n            return containers;\n        }\n        function isLabelFor(label, element) {\n            if (!label) {\n                return false;\n            }\n            if (typeof label.nodeName !== 'string' || label.nodeName !== 'LABEL') {\n                return false;\n            }\n            if (typeof label.getAttribute('for') !== 'string' || typeof element.getAttribute('id') !== 'string') {\n                return false;\n            }\n            if (label.getAttribute('for') !== element.getAttribute('id')) {\n                return false;\n            }\n            return true;\n        }\n        var SUMMARYTEMPLATE = '<ul>' + '#for(var i = 0; i < errors.length; i += 1){#' + '<li><a data-field=\"#=errors[i].field#\" href=\"\\\\#\">#= errors[i].message #</a></li>' + '# } #' + '</ul>';\n        var Validator = Widget.extend({\n            init: function (element, options) {\n                var that = this, resolved = resolveRules(element), validateAttributeSelector = '[' + kendo.attr('validate') + '!=false]';\n                options = options || {};\n                options.rules = $.extend({}, kendo.ui.validator.rules, resolved.rules, options.rules);\n                options.messages = $.extend({}, kendo.ui.validator.messages, resolved.messages, options.messages);\n                Widget.fn.init.call(that, element, options);\n                that._errorTemplate = kendo.template(that.options.errorTemplate);\n                that._summaryTemplate = kendo.template(that.options.validationSummary.template || SUMMARYTEMPLATE);\n                if (that.element.is(FORM)) {\n                    that.element.attr(NOVALIDATE, NOVALIDATE);\n                }\n                that._inputSelector = INPUTSELECTOR + validateAttributeSelector;\n                that._checkboxSelector = CHECKBOXSELECTOR + validateAttributeSelector;\n                that._errors = {};\n                that._attachEvents();\n                that._isValidated = false;\n                if (that._validateOnInit()) {\n                    that.validate();\n                }\n            },\n            events: [\n                VALIDATE,\n                CHANGE,\n                VALIDATE_INPUT\n            ],\n            options: {\n                name: 'Validator',\n                errorTemplate: '<span class=\"k-form-error\">#= message #</span>',\n                messages: {\n                    required: '{0} is required',\n                    pattern: '{0} is not valid',\n                    min: '{0} should be greater than or equal to {1}',\n                    max: '{0} should be smaller than or equal to {1}',\n                    step: '{0} is not valid',\n                    email: '{0} is not valid email',\n                    url: '{0} is not valid URL',\n                    date: '{0} is not valid date',\n                    dateCompare: 'End date should be greater than or equal to the start date',\n                    captcha: 'The text you entered doesn\\'t match the image.'\n                },\n                rules: {\n                    required: function (input) {\n                        var noNameCheckbox = !input.attr('name') && !input.is(':checked'), name = input.attr('name'), quote = !!name && name.indexOf('\\'') > -1 ? '\"' : '\\'', namedCheckbox = input.attr('name') && !this.element.find('input[name=' + quote + input.attr('name') + quote + ']:checked').length, checkbox = input.filter('[type=checkbox]').length && (noNameCheckbox || namedCheckbox), radio = input.filter('[type=radio]').length && !this.element.find('input[name=' + quote + input.attr('name') + quote + ']:checked').length, value = input.val();\n                        return !(hasAttribute(input, 'required') && (!value || value === '' || value.length === 0 || checkbox || radio));\n                    },\n                    pattern: function (input) {\n                        if (input.filter('[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]').filter('[pattern]').length && input.val() !== '') {\n                            return patternMatcher(input.val(), input.attr('pattern'));\n                        }\n                        return true;\n                    },\n                    min: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[min]').length && input.val() !== '') {\n                            var min = parseFloat(input.attr('min')) || 0, val = kendo.parseFloat(input.val());\n                            return min <= val;\n                        }\n                        return true;\n                    },\n                    max: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[max]').length && input.val() !== '') {\n                            var max = parseFloat(input.attr('max')) || 0, val = kendo.parseFloat(input.val());\n                            return max >= val;\n                        }\n                        return true;\n                    },\n                    step: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[step]').length && input.val() !== '') {\n                            var min = parseFloat(input.attr('min')) || 0, step = parseFloat(input.attr('step')) || 1, val = parseFloat(input.val()), decimals = numberOfDecimalDigits(step), raise;\n                            if (decimals) {\n                                raise = Math.pow(10, decimals);\n                                return Math.floor((val - min) * raise) % (step * raise) / Math.pow(100, decimals) === 0;\n                            }\n                            return (val - min) % step === 0;\n                        }\n                        return true;\n                    },\n                    email: function (input) {\n                        return matcher(input, '[type=email],[' + kendo.attr('type') + '=email]', emailRegExp);\n                    },\n                    url: function (input) {\n                        return matcher(input, '[type=url],[' + kendo.attr('type') + '=url]', urlRegExp);\n                    },\n                    date: function (input) {\n                        if (input.filter('[type^=date],[' + kendo.attr('type') + '=date]').length && input.val() !== '') {\n                            return kendo.parseDate(input.val(), input.attr(kendo.attr('format'))) !== null;\n                        }\n                        return true;\n                    },\n                    captcha: function (input) {\n                        if (input.filter('[' + kendo.attr('role') + '=captcha]').length) {\n                            var that = this, captcha = kendo.widgetInstance(input), isValidated = function (isValid) {\n                                    return typeof isValid !== 'undefined' && isValid !== null;\n                                };\n                            if (!input.data('captcha_validating') && !isValidated(captcha.isValid()) && !!captcha.getCaptchaId()) {\n                                input.data('captcha_validating', true);\n                                that._validating = true;\n                                captcha.validate().done(function () {\n                                    that._validating = false;\n                                    that._checkElement(input);\n                                }).fail(function (data) {\n                                    that._validating = false;\n                                    if (data.error && data.error === 'handler_not_defined') {\n                                        window.console.warn('Captcha\\'s validationHandler is not defined! You should either define a proper validation endpoint or declare a callback function to ensure the required behavior.');\n                                    }\n                                });\n                            }\n                            if (isValidated(captcha.isValid())) {\n                                input.removeData('captcha_validating');\n                                return captcha.isValid();\n                            }\n                        }\n                        return true;\n                    }\n                },\n                validateOnBlur: true,\n                validationSummary: false\n            },\n            _allowSubmit: function () {\n                return kendo.ui.validator.allowSubmit(this.element, this.errors());\n            },\n            _validateOnInit: function () {\n                return kendo.ui.validator.validateOnInit(this.element);\n            },\n            destroy: function () {\n                Widget.fn.destroy.call(this);\n                this.element.off(NS);\n                if (this.validationSummary) {\n                    this.validationSummary.off(NS);\n                    this.validationSummary = null;\n                }\n            },\n            value: function () {\n                if (!this._isValidated) {\n                    return false;\n                }\n                return this.errors().length === 0;\n            },\n            _submit: function (e) {\n                if (!this.validate() && !this._allowSubmit() || this._validating) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    return false;\n                }\n                return true;\n            },\n            _checkElement: function (element) {\n                var state = this.value();\n                this.validateInput(element);\n                if (this.value() !== state) {\n                    this.trigger(CHANGE);\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                if (that.element.is(FORM)) {\n                    that.element.on('submit' + NS, proxy(that._submit, that));\n                }\n                if (that.options.validateOnBlur) {\n                    if (!that.element.is(INPUTSELECTOR)) {\n                        that.element.on(BLUR + NS, that._inputSelector, function () {\n                            that._checkElement($(this));\n                        });\n                        that.element.on('click' + NS, that._checkboxSelector, function () {\n                            that._checkElement($(this));\n                        });\n                    } else {\n                        that.element.on(BLUR + NS, function () {\n                            that._checkElement(that.element);\n                        });\n                        if (that.element.is(CHECKBOXSELECTOR)) {\n                            that.element.on('click' + NS, function () {\n                                that._checkElement(that.element);\n                            });\n                        }\n                    }\n                }\n            },\n            validate: function () {\n                var inputs;\n                var idx;\n                var result = false;\n                var length;\n                var isValid = this.value();\n                this._errors = {};\n                if (!this.element.is(INPUTSELECTOR)) {\n                    var invalid = false;\n                    inputs = this.element.find(this._inputSelector);\n                    for (idx = 0, length = inputs.length; idx < length; idx++) {\n                        if (!this.validateInput(inputs.eq(idx))) {\n                            invalid = true;\n                        }\n                    }\n                    result = !invalid;\n                } else {\n                    result = this.validateInput(this.element);\n                }\n                if (this.options.validationSummary && !isValid) {\n                    this.showValidationSummary();\n                }\n                this.trigger(VALIDATE, {\n                    valid: result,\n                    errors: this.errors()\n                });\n                if (isValid !== result) {\n                    this.trigger(CHANGE);\n                }\n                return result;\n            },\n            validateInput: function (input) {\n                input = $(input);\n                this._isValidated = true;\n                var that = this, template = that._errorTemplate, result = that._checkValidity(input), valid = result.valid, className = '.' + INVALIDMSG, fieldName = input.attr(NAME) || '', lbl = that._findMessageContainer(fieldName).add(input.next(className).filter(function () {\n                        var element = $(this);\n                        if (element.filter('[' + kendo.attr('for') + ']').length) {\n                            return element.attr(kendo.attr('for')) === fieldName;\n                        }\n                        return true;\n                    })).addClass('k-hidden'), messageText = !valid ? that._extractMessage(input, result.key) : '', messageLabel = !valid ? parseHtml(template({\n                        message: decode(messageText),\n                        field: fieldName\n                    })) : '', wasValid = !input.attr(ARIAINVALID), isInputInner = input.is(INPUTINNER), inputWrapper = input.parent(INPUTWRAPPER);\n                input.removeAttr(ARIAINVALID);\n                if (!valid && !input.data('captcha_validating')) {\n                    that._errors[fieldName] = messageText;\n                    var lblId = lbl.attr('id');\n                    that._decorateMessageContainer(messageLabel, fieldName);\n                    if (lblId) {\n                        messageLabel.attr('id', lblId);\n                    }\n                    if (lbl.length !== 0) {\n                        lbl.replaceWith(messageLabel);\n                    } else {\n                        var widgetInstance = kendo.widgetInstance(input);\n                        var parentElement = input.parent().get(0);\n                        var nextElement = input.next().get(0);\n                        var prevElement = input.prev().get(0);\n                        if (!widgetInstance && input.is('[type=radio]')) {\n                            widgetInstance = kendo.widgetInstance(input.closest('.k-radio-list'));\n                        }\n                        if (!widgetInstance && input.is('[type=checkbox]')) {\n                            widgetInstance = kendo.widgetInstance(input.closest('.k-checkbox-list'));\n                        }\n                        if (widgetInstance && widgetInstance.wrapper) {\n                            messageLabel.insertAfter(widgetInstance.wrapper);\n                        } else if (parentElement && parentElement.nodeName === 'LABEL') {\n                            messageLabel.insertAfter(parentElement);\n                        } else if (nextElement && isLabelFor(nextElement, input[0])) {\n                            messageLabel.insertAfter(nextElement);\n                        } else if (prevElement && isLabelFor(prevElement, input[0])) {\n                            messageLabel.insertAfter(input);\n                        } else if (isInputInner && inputWrapper.length) {\n                            messageLabel.insertAfter(inputWrapper);\n                        } else {\n                            messageLabel.insertAfter(input);\n                        }\n                    }\n                    messageLabel.removeClass('k-hidden');\n                    input.attr(ARIAINVALID, true);\n                } else {\n                    delete that._errors[fieldName];\n                }\n                if (wasValid !== valid) {\n                    this.trigger(VALIDATE_INPUT, {\n                        valid: valid,\n                        input: input,\n                        error: messageText,\n                        field: fieldName\n                    });\n                }\n                if (isInputInner && inputWrapper.length) {\n                    inputWrapper.toggleClass(INVALIDINPUT, !valid);\n                    inputWrapper.toggleClass(VALIDINPUT, valid);\n                }\n                input.toggleClass(INVALIDINPUT, !valid);\n                input.toggleClass(VALIDINPUT, valid);\n                if (kendo.widgetInstance(input)) {\n                    var widget = kendo.widgetInstance(input);\n                    var inputWrap = widget._inputWrapper || widget.wrapper;\n                    var inputLabel = widget._inputLabel;\n                    if (inputWrap) {\n                        inputWrap.toggleClass(INVALIDINPUT, !valid);\n                        inputWrap.toggleClass(VALIDINPUT, valid);\n                    }\n                    if (inputLabel) {\n                        inputLabel.toggleClass(INVALIDLABEL, !valid);\n                    }\n                }\n                if (wasValid !== valid) {\n                    var errorId = messageLabel ? messageLabel.attr('id') : lbl.attr('id');\n                    that._associateMessageContainer(input, errorId);\n                    if (this.options.validationSummary && this.options.validateOnBlur) {\n                        this.showValidationSummary();\n                    }\n                }\n                return valid;\n            },\n            hideMessages: function () {\n                var that = this, className = '.' + INVALIDMSG, element = that.element;\n                that._disassociateMessageContainers();\n                if (!element.is(INPUTSELECTOR)) {\n                    element.find(className).addClass('k-hidden');\n                } else {\n                    element.next(className).addClass('k-hidden');\n                }\n            },\n            reset: function () {\n                var that = this, inputs = that.element.find('.' + INVALIDINPUT), labels = that.element.find('.' + INVALIDLABEL);\n                that._errors = [];\n                that.hideMessages();\n                that.hideValidationSummary();\n                inputs.removeAttr(ARIAINVALID);\n                inputs.removeClass(INVALIDINPUT);\n                labels.removeClass(INVALIDLABEL);\n            },\n            _findMessageContainer: function (fieldName) {\n                var locators = kendo.ui.validator.messageLocators, name, containers = $();\n                for (var idx = 0, length = this.element.length; idx < length; idx++) {\n                    containers = containers.add(searchForMessageContainer(this.element[idx].getElementsByTagName('*'), fieldName));\n                }\n                for (name in locators) {\n                    containers = containers.add(locators[name].locate(this.element, fieldName));\n                }\n                return containers;\n            },\n            _decorateMessageContainer: function (container, fieldName) {\n                var locators = kendo.ui.validator.messageLocators, name;\n                container.addClass(INVALIDMSG).attr(kendo.attr('for'), fieldName || '');\n                if (!container.attr('id')) {\n                    container.attr('id', fieldName + '-error');\n                }\n                for (name in locators) {\n                    locators[name].decorate(container, fieldName);\n                }\n            },\n            _extractMessage: function (input, ruleKey) {\n                var that = this, customMessage = that.options.messages[ruleKey], fieldName = input.attr(NAME), nonDefaultMessage;\n                if (!kendo.ui.Validator.prototype.options.messages[ruleKey]) {\n                    nonDefaultMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n                }\n                customMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n                return kendo.format(input.attr(kendo.attr(ruleKey + '-msg')) || input.attr('validationMessage') || nonDefaultMessage || customMessage || input.attr('title') || '', fieldName, input.attr(ruleKey) || input.attr(kendo.attr(ruleKey)));\n            },\n            _checkValidity: function (input) {\n                var rules = this.options.rules, rule;\n                for (rule in rules) {\n                    if (!rules[rule].call(this, input)) {\n                        return {\n                            valid: false,\n                            key: rule\n                        };\n                    }\n                }\n                return { valid: true };\n            },\n            errors: function () {\n                var results = [], errors = this._errors, error;\n                for (error in errors) {\n                    results.push(errors[error]);\n                }\n                return results;\n            },\n            setOptions: function (options) {\n                if (options.validationSummary) {\n                    this.hideValidationSummary();\n                }\n                kendo.deepExtend(this.options, options);\n                this.destroy();\n                this.init(this.element, this.options);\n                this._setEvents(this.options);\n            },\n            _getInputNames: function () {\n                var that = this, inputs = that.element.find(that._inputSelector), sorted = [];\n                for (var idx = 0, length = inputs.length; idx < length; idx++) {\n                    var input = $(inputs[idx]);\n                    if (hasAttribute(input, NAME)) {\n                        if (sorted.indexOf(input.attr(NAME)) === -1 || input.closest('.k-checkbox-list').length === 0 && input.closest('.k-radio-list').length === 0) {\n                            sorted.push(input.attr(NAME));\n                        }\n                    }\n                }\n                return sorted;\n            },\n            _associateMessageContainer: function (input, errorId) {\n                var nextFocusable = kendo.getWidgetFocusableElement(input);\n                if (!nextFocusable || !errorId) {\n                    return;\n                }\n                kendo.toggleAttribute(nextFocusable, ARIADESCRIBEDBY, errorId);\n            },\n            _disassociateMessageContainers: function () {\n                var that = this, inputs = that.element.find('.' + INVALIDINPUT).addBack(), input, errorId;\n                for (var i = 0; i < inputs.length; i += 1) {\n                    input = $(inputs[i]);\n                    if (input.is('input')) {\n                        errorId = that._findMessageContainer(input.attr(NAME)).add(input.next('.' + INVALIDMSG)).attr('id');\n                        that._associateMessageContainer(input, errorId);\n                    }\n                }\n            },\n            _errorsByName: function () {\n                var that = this, inputNames = that._getInputNames(), sorted = [];\n                for (var i = 0; i < inputNames.length; i += 1) {\n                    var name = inputNames[i];\n                    if (that._errors[name]) {\n                        sorted.push({\n                            field: name,\n                            message: that._errors[name]\n                        });\n                    }\n                }\n                return sorted;\n            },\n            _renderSummary: function () {\n                var that = this, options = this.options.validationSummary, element = this.element, prevElement = element.prev(), container;\n                if (options.container) {\n                    container = $(options.container);\n                } else if (prevElement && prevElement.hasClass(VALIDATIONSUMMARY)) {\n                    container = prevElement;\n                } else {\n                    container = $('<div />').insertBefore(that.element);\n                }\n                container.addClass([\n                    VALIDATIONSUMMARY,\n                    MESSAGEBOX\n                ].join(' '));\n                container.attr('role', 'alert');\n                container.on('click' + NS, proxy(that._summaryClick, that));\n                return container;\n            },\n            _summaryClick: function (e) {\n                e.preventDefault();\n                var that = this, link = $(e.target), target = that.element.find('[name=\\'' + link.data('field') + '\\']'), nextFocusable;\n                if (!target.length) {\n                    return;\n                }\n                nextFocusable = kendo.getWidgetFocusableElement(target);\n                if (nextFocusable) {\n                    nextFocusable.trigger('focus');\n                }\n            },\n            showValidationSummary: function () {\n                var that = this, summary = that.validationSummary, errors = that._errorsByName(), errorsList;\n                if (!summary) {\n                    summary = that.validationSummary = that._renderSummary();\n                }\n                errorsList = parseHtml(that._summaryTemplate({ errors: errors }));\n                summary.html(errorsList);\n                summary.toggleClass('k-hidden', !errors.length);\n            },\n            hideValidationSummary: function () {\n                var that = this, summary = that.validationSummary;\n                if (!summary) {\n                    return;\n                }\n                summary.addClass('k-hidden');\n            }\n        });\n        kendo.ui.plugin(Validator);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}