{"version":3,"file":"kendo.data.min.js","sources":["kendo.data.js"],"sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function(f, define){\n    define('kendo.data',[ \"./kendo.core\", \"./kendo.data.odata\", \"./kendo.data.xml\" ], f);\n})(function(){\n\nvar __meta__ = { // jshint ignore:line\n    id: \"data\",\n    name: \"Data source\",\n    category: \"framework\",\n    description: \"Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.\",\n    depends: [ \"core\" ],\n    features: [ {\n        id: \"data-odata\",\n        name: \"OData\",\n        description: \"Support for accessing Open Data Protocol (OData) services.\",\n        depends: [ \"data.odata\" ]\n    }, {\n        id: \"data-signalr\",\n        name: \"SignalR\",\n        description: \"Support for binding to SignalR hubs.\",\n        depends: [ \"data.signalr\" ]\n    }, {\n        id: \"data-XML\",\n        name: \"XML\",\n        description: \"Support for binding to XML.\",\n        depends: [ \"data.xml\" ]\n    }]\n};\n\n/*jshint eqnull: true, loopfunc: true, evil: true */\n(function($, undefined) {\n    var extend = $.extend,\n        isPlainObject = $.isPlainObject,\n        isEmptyObject = $.isEmptyObject,\n        isArray = Array.isArray,\n        grep = $.grep,\n        ajax = $.ajax,\n        map,\n        each = $.each,\n        noop = $.noop,\n        kendo = window.kendo,\n        isFunction = kendo.isFunction,\n        Observable = kendo.Observable,\n        Class = kendo.Class,\n        STRING = \"string\",\n        FUNCTION = \"function\",\n        ASCENDING = \"asc\",\n        CREATE = \"create\",\n        READ = \"read\",\n        UPDATE = \"update\",\n        DESTROY = \"destroy\",\n        CHANGE = \"change\",\n        SYNC = \"sync\",\n        GET = \"get\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        crud = [CREATE, READ, UPDATE, DESTROY],\n        identity = function(o) { return o; },\n        getter = kendo.getter,\n        stringify = kendo.stringify,\n        math = Math,\n        push = [].push,\n        join = [].join,\n        pop = [].pop,\n        splice = [].splice,\n        shift = [].shift,\n        slice = [].slice,\n        unshift = [].unshift,\n        toString = {}.toString,\n        stableSort = kendo.support.stableSort,\n        dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n        objectKeys = [];\n\n    var ObservableArray = Observable.extend({\n        init: function(array, type) {\n            var that = this;\n\n            that.type = type || ObservableObject;\n\n            Observable.fn.init.call(that);\n\n            that.length = array.length;\n\n            that.wrapAll(array, that);\n        },\n\n        at: function(index) {\n            return this[index];\n        },\n\n        toJSON: function(serializeFunctions) {\n            var idx, length = this.length, value, json = new Array(length);\n\n            for (idx = 0; idx < length; idx++){\n                value = this[idx];\n\n                if (value instanceof ObservableObject) {\n                    value = value.toJSON(serializeFunctions);\n                }\n\n                json[idx] = value;\n            }\n\n            return json;\n        },\n\n        parent: noop,\n\n        wrapAll: function(source, target) {\n            var that = this,\n                idx,\n                length,\n                parent = function() {\n                    return that;\n                };\n\n            target = target || [];\n\n            for (idx = 0, length = source.length; idx < length; idx++) {\n                target[idx] = that.wrap(source[idx], parent);\n            }\n\n            return target;\n        },\n\n        wrap: function(object, parent) {\n            var that = this,\n                observable;\n\n            if (object !== null && toString.call(object) === \"[object Object]\") {\n                observable = object instanceof that.type || object instanceof Model;\n\n                if (!observable) {\n                    object = object instanceof ObservableObject ? object.toJSON() : object;\n                    object = new that.type(object);\n                }\n\n                object.parent = parent;\n\n                object.bind(CHANGE, function(e) {\n                    that.trigger(CHANGE, {\n                        field: e.field,\n                        node: e.node,\n                        index: e.index,\n                        items: e.items || [this],\n                        action: e.node ? (e.action || \"itemloaded\") : \"itemchange\"\n                    });\n                });\n            }\n\n            return object;\n        },\n\n        push: function() {\n            var index = this.length,\n                items = this.wrapAll(arguments),\n                result;\n\n            result = push.apply(this, items);\n\n            if (!this.omitChangeEvent) {\n                this.trigger(CHANGE, {\n                    action: \"add\",\n                    index: index,\n                    items: items\n                });\n            }\n\n            return result;\n        },\n\n        slice: slice,\n\n        sort: [].sort,\n\n        join: join,\n\n        pop: function() {\n            var length = this.length, result = pop.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: length - 1,\n                    items:[result]\n                });\n            }\n\n            return result;\n        },\n\n        splice: function(index, howMany, item) {\n            var items = this.wrapAll(slice.call(arguments, 2)),\n                result, i, len;\n\n            result = splice.apply(this, [index, howMany].concat(items));\n\n            if (result.length) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"remove\",\n                        index: index,\n                        items: result\n                    });\n                }\n\n                for (i = 0, len = result.length; i < len; i++) {\n                    if (result[i] && result[i].children) {\n                        result[i].unbind(CHANGE);\n                    }\n                }\n            }\n\n            if (item) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"add\",\n                        index: index,\n                        items: items\n                    });\n                }\n            }\n            return result;\n        },\n\n        shift: function() {\n            var length = this.length, result = shift.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: 0,\n                    items:[result]\n                });\n            }\n\n            return result;\n        },\n\n        unshift: function() {\n            var items = this.wrapAll(arguments),\n                result;\n\n            result = unshift.apply(this, items);\n\n            this.trigger(CHANGE, {\n                action: \"add\",\n                index: 0,\n                items: items\n            });\n\n            return result;\n        },\n\n        indexOf: function(item) {\n            var that = this,\n                idx,\n                length;\n\n            for (idx = 0, length = that.length; idx < length; idx++) {\n                if (that[idx] === item) {\n                    return idx;\n                }\n            }\n            return -1;\n        },\n\n        forEach: function(callback, thisArg) {\n            var idx = 0;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                callback.call(context, this[idx], idx, this);\n            }\n        },\n\n        map: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                result[idx] = callback.call(context, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduce: function(callback) {\n            var idx = 0,\n                result,\n                length = this.length;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx < length) {\n                result = this[idx++];\n            }\n\n            for (; idx < length; idx++) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduceRight: function(callback) {\n            var idx = this.length - 1,\n                result;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx > 0) {\n                result = this[idx--];\n            }\n\n            for (; idx >= 0; idx--) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        filter: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    result[result.length] = item;\n                }\n            }\n\n            return result;\n        },\n\n        find: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return item;\n                }\n            }\n        },\n\n        every: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (!callback.call(context, item, idx, this)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        some: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // non-standard collection methods\n        remove: function(item) {\n            var idx = this.indexOf(item);\n\n            if (idx !== -1) {\n                this.splice(idx, 1);\n            }\n        },\n\n        empty: function() {\n            this.splice(0, this.length);\n        }\n    });\n\n    // Polyfill for Symbol.iterator\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n        ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n    }\n\n    var LazyObservableArray = ObservableArray.extend({\n        init: function (data, type, events) {\n            var parentFn = function() { return this; };\n\n            Observable.fn.init.call(this);\n\n            this.type = type || ObservableObject;\n\n            if (events) {\n                this._events = events;\n            }\n\n            for (var idx = 0; idx < data.length; idx++) {\n                this[idx] = data[idx];\n            }\n\n            this.length = idx;\n            this._parent = parentFn.bind(this);\n        },\n        at: function(index) {\n            var item = this[index];\n\n            if (!(item instanceof this.type)) {\n                item = this[index] = this.wrap(item, this._parent);\n            } else {\n                item.parent = this._parent;\n            }\n\n            return item;\n        }\n    });\n\n    function eventHandler(context, type, field, prefix) {\n        return function(e) {\n            var event = {}, key;\n\n            for (key in e) {\n                event[key] = e[key];\n            }\n\n            if (prefix) {\n                event.field = field + \".\" + e.field;\n            } else {\n                event.field = field;\n            }\n\n            if (type == CHANGE && context._notifyChange) {\n                context._notifyChange(event);\n            }\n\n            context.trigger(type, event);\n        };\n    }\n\n    function ownKeys (value, ignoreObjectKeys) {\n        var props = [];\n        var keys, filteredObjectKeys;\n\n        value = value || {};\n\n        keys = Object.getOwnPropertyNames(value);\n        filteredObjectKeys = objectKeys.filter(function(key){\n            return keys.indexOf(key) < 0;\n        });\n\n        while (value) {\n            Object.getOwnPropertyNames(value).forEach(function (prop) {\n                if (props.indexOf(prop) === -1 && (!ignoreObjectKeys || filteredObjectKeys.indexOf(prop) < 0)) {\n                    props.push(prop);\n                }\n            });\n            value = Object.getPrototypeOf(value);\n        }\n\n        return props;\n    }\n\n    objectKeys = ownKeys({}, false);\n\n    var ObservableObject = Observable.extend({\n        init: function(value) {\n            var that = this,\n                member,\n                keys = ownKeys(value, true),\n                parent = function() {\n                    return that;\n                };\n\n            Observable.fn.init.call(this);\n\n            this._handlers = {};\n\n            keys.forEach(function(field){\n                member = value[field];\n\n                if (typeof member === \"object\" && member && !member.getTime && field.charAt(0) != \"_\") {\n                    member = that.wrap(member, field, parent);\n                }\n\n                that[field] = member;\n            });\n\n            that.uid = kendo.guid();\n        },\n\n        shouldSerialize: function(field, serializeFunctions) {\n            return this.hasOwnProperty(field) && field !== \"_handlers\" && field !== \"_events\" && ((serializeFunctions && serializeFunctions[field]) || typeof this[field] !== FUNCTION) && field !== \"uid\";\n        },\n\n        forEach: function(f) {\n            for (var i in this) {\n                if (this.shouldSerialize(i)) {\n                    f(this[i], i);\n                }\n            }\n        },\n\n        toJSON: function (serializeFunctions) {\n            var result = {}, value, field;\n\n            for (field in this) {\n                if (this.shouldSerialize(field, serializeFunctions)) {\n                    value = this[field];\n\n                    if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                        value = value.toJSON(serializeFunctions);\n                    }\n\n                    result[field] = value;\n                }\n            }\n\n            return result;\n        },\n\n        get: function(field) {\n            var that = this, result;\n\n            that.trigger(GET, { field: field });\n\n            if (field === \"this\") {\n                result = that;\n            } else {\n                result = kendo.getter(field, true)(that);\n            }\n\n            return result;\n        },\n\n        _set: function(field, value) {\n            var that = this;\n            var composite = field.indexOf(\".\") >= 0;\n\n            if (composite) {\n                var paths = field.split(\".\"),\n                    path = \"\";\n\n                while (paths.length > 1) {\n                    path += paths.shift();\n                    var obj = kendo.getter(path, true)(that);\n                    if (obj instanceof ObservableObject) {\n                        obj.set(paths.join(\".\"), value);\n                        return composite;\n                    }\n                    path += \".\";\n                }\n            }\n\n            kendo.setter(field)(that, value);\n\n            return composite;\n        },\n\n        set: function(field, value) {\n            var that = this,\n                isSetPrevented = false,\n                composite = field.indexOf(\".\") >= 0,\n                current = kendo.getter(field, true)(that);\n\n            if (current !== value) {\n                if (current instanceof Observable && this._handlers[field]) {\n                    if (this._handlers[field].get) {\n                       current.unbind(GET, this._handlers[field].get);\n                    }\n                    current.unbind(CHANGE, this._handlers[field].change);\n                }\n\n                isSetPrevented = that.trigger(\"set\", { field: field, value: value });\n\n                if (!isSetPrevented) {\n                    if (!composite) {\n                        value = that.wrap(value, field, function() { return that; });\n                    }\n                    if (!that._set(field, value) || field.indexOf(\"(\") >= 0 || field.indexOf(\"[\") >= 0) {\n                        that.trigger(CHANGE, { field: field });\n                    }\n                }\n            }\n\n            return isSetPrevented;\n        },\n\n        parent: noop,\n\n        wrap: function(object, field, parent) {\n            var that = this;\n            var get;\n            var change;\n            var type = toString.call(object);\n\n            if (object != null && (type === \"[object Object]\" || type === \"[object Array]\")) {\n                var isObservableArray = object instanceof ObservableArray;\n                var isDataSource = object instanceof DataSource;\n\n                if (type === \"[object Object]\" && !isDataSource && !isObservableArray) {\n                    if (!(object instanceof ObservableObject)) {\n                        object = new ObservableObject(object);\n                    }\n\n                    get = eventHandler(that, GET, field, true);\n                    object.bind(GET, get);\n                    change = eventHandler(that, CHANGE, field, true);\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { get: get, change: change };\n                } else if (type === \"[object Array]\" || isObservableArray || isDataSource) {\n                    if (!isObservableArray && !isDataSource) {\n                        object = new ObservableArray(object);\n                    }\n\n                    change = eventHandler(that, CHANGE, field, false);\n\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { change: change };\n                }\n\n                object.parent = parent;\n            }\n\n            return object;\n        }\n    });\n\n    function equal(x, y) {\n        if (x === y) {\n            return true;\n        }\n\n        var xtype = kendo.type(x), ytype = kendo.type(y), field;\n\n        if (xtype !== ytype) {\n            return false;\n        }\n\n        if (xtype === \"date\") {\n            return x.getTime() === y.getTime();\n        }\n\n        if (xtype !== \"object\" && xtype !== \"array\") {\n            return false;\n        }\n\n        for (field in x) {\n            if (!equal(x[field], y[field])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    var parsers = {\n        \"number\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseFloat(value);\n        },\n\n        \"date\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseDate(value);\n        },\n\n        \"boolean\": function(value) {\n            if (typeof value === STRING) {\n                if (value.toLowerCase() === \"null\") {\n                    return null;\n                } else {\n                    return value.toLowerCase() === \"true\";\n                }\n            }\n            return value != null ? !!value : value;\n        },\n\n        \"string\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return value != null ? (value + \"\") : value;\n        },\n\n        \"default\": function(value) {\n            return value;\n        }\n    };\n\n    var defaultValues = {\n        \"string\": \"\",\n        \"number\": 0,\n        \"date\": new Date(),\n        \"boolean\": false,\n        \"default\": \"\"\n    };\n\n    function getFieldByName(obj, name) {\n        var field,\n            fieldName;\n\n        for (fieldName in obj) {\n            field = obj[fieldName];\n            if (isPlainObject(field) && field.field && field.field === name) {\n                return field;\n            } else if (field === name) {\n                return field;\n            }\n        }\n        return null;\n    }\n\n    var Model = ObservableObject.extend({\n        init: function(data) {\n            var that = this;\n\n            if (!data || $.isEmptyObject(data)) {\n                data = $.extend({}, that.defaults, data);\n\n                if (that._initializers) {\n                    for (var idx = 0; idx < that._initializers.length; idx++) {\n                         var name = that._initializers[idx];\n                         data[name] = that.defaults[name]();\n                    }\n                }\n            }\n\n            ObservableObject.fn.init.call(that, data);\n\n            that.dirty = false;\n            that.dirtyFields = {};\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n\n                if (that.id === undefined) {\n                    that.id = that._defaultId;\n                }\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return ObservableObject.fn.shouldSerialize.call(this, field) &&\n                field !== \"uid\" && !(this.idField !== \"id\" && field === \"id\") &&\n                field !== \"dirty\" &&  field !== \"dirtyFields\" && field !== \"_accessors\";\n        },\n\n        _parse: function(field, value) {\n            var that = this,\n                fieldName = field,\n                fields = (that.fields || {}),\n                parse;\n\n            field = fields[field];\n            if (!field) {\n                field = getFieldByName(fields, fieldName);\n            }\n            if (field) {\n                parse = field.parse;\n                if (!parse && field.type) {\n                    parse = parsers[field.type.toLowerCase()];\n                }\n            }\n\n            return parse ? parse(value) : value;\n        },\n\n        _notifyChange: function(e) {\n            var action = e.action;\n\n            if (action == \"add\" || action == \"remove\") {\n                this.dirty = true;\n                this.dirtyFields[e.field] = true;\n            }\n        },\n\n        editable: function(field) {\n            field = (this.fields || {})[field];\n            return field ? field.editable !== false : true;\n        },\n\n        set: function(field, value) {\n            var that = this;\n            var dirty = that.dirty;\n\n            if (that.editable(field)) {\n                value = that._parse(field, value);\n\n                if (!equal(value, that.get(field))) {\n                    that.dirty = true;\n                    that.dirtyFields[field] = true;\n\n                    if (ObservableObject.fn.set.call(that, field, value) && !dirty) {\n                        that.dirty = dirty;\n\n                        if (!that.dirty) {\n                            that.dirtyFields[field] = false;\n                        }\n                    }\n                } else {\n                    that.trigger(\"equalSet\", { field: field, value: value });\n                }\n            }\n        },\n\n        accept: function(data) {\n            var that = this,\n                parent = function() { return that; },\n                field;\n\n            for (field in data) {\n                var value = data[field];\n\n                if (field.charAt(0) != \"_\") {\n                    value = that.wrap(data[field], field, parent);\n                }\n\n                that._set(field, value);\n            }\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n            }\n\n            that.dirty = false;\n            that.dirtyFields = {};\n        },\n\n        isNew: function() {\n            return this.id === this._defaultId;\n        }\n    });\n\n    Model.define = function(base, options) {\n        if (options === undefined) {\n            options = base;\n            base = Model;\n        }\n\n        var model,\n            proto = extend({ defaults: {} }, options),\n            name,\n            field,\n            type,\n            value,\n            idx,\n            length,\n            fields = {},\n            originalName,\n            id = proto.id,\n            functionFields = [];\n\n        if (id) {\n            proto.idField = id;\n        }\n\n        if (proto.id) {\n            delete proto.id;\n        }\n\n        if (id) {\n            proto.defaults[id] = proto._defaultId = \"\";\n        }\n\n        if (toString.call(proto.fields) === \"[object Array]\") {\n            for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                field = proto.fields[idx];\n                if (typeof field === STRING) {\n                    fields[field] = {};\n                } else if (field.field) {\n                    fields[field.field] = field;\n                }\n            }\n            proto.fields = fields;\n        }\n\n        for (name in proto.fields) {\n            field = proto.fields[name];\n            type = field.type || \"default\";\n            value = null;\n            originalName = name;\n\n            name = typeof (field.field) === STRING ? field.field : name;\n\n            if (!field.nullable) {\n                value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined ? field.defaultValue : defaultValues[type.toLowerCase()];\n\n                if (typeof value === \"function\") {\n                    functionFields.push(name);\n                }\n            }\n\n            if (options.id === name) {\n                proto._defaultId = value;\n            }\n\n            proto.defaults[originalName !== name ? originalName : name] = value;\n\n            field.parse = field.parse || parsers[type];\n        }\n\n        if (functionFields.length > 0) {\n            proto._initializers = functionFields;\n        }\n\n        model = base.extend(proto);\n        model.define = function(options) {\n            return Model.define(model, options);\n        };\n\n        if (proto.fields) {\n            model.fields = proto.fields;\n            model.idField = proto.idField;\n        }\n\n        return model;\n    };\n\n    var Comparer = {\n        selector: function(field) {\n            return isFunction(field) ? field : getter(field);\n        },\n\n        compare: function(field) {\n            var selector = this.selector(field);\n            return function (a, b) {\n                a = selector(a);\n                b = selector(b);\n\n                if (a == null && b == null) {\n                    return 0;\n                }\n\n                if (a == null) {\n                    return -1;\n                }\n\n                if (b == null) {\n                    return 1;\n                }\n\n                if (a.localeCompare) {\n                    return a.localeCompare(b);\n                }\n\n                return a > b ? 1 : (a < b ? -1 : 0);\n            };\n        },\n\n        create: function(sort) {\n            var compare = sort.compare || this.compare(sort.field);\n\n            if (sort.dir == \"desc\") {\n                return function(a, b) {\n                    return compare(b, a, true);\n                };\n            }\n\n            return compare;\n        },\n\n        combine: function(comparers) {\n            return function(a, b) {\n                var result = comparers[0](a, b),\n                    idx,\n                    length;\n\n                for (idx = 1, length = comparers.length; idx < length; idx ++) {\n                    result = result || comparers[idx](a, b);\n                }\n\n                return result;\n            };\n        }\n    };\n\n    var StableComparer = extend({}, Comparer, {\n        asc: function(field) {\n            var selector = this.selector(field);\n            return function (a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return -1;\n                }\n\n                if (valueB == null) {\n                    return 1;\n                }\n\n                if (valueA.localeCompare) {\n                    return valueA.localeCompare(valueB);\n                }\n\n                return valueA > valueB ? 1 : -1;\n            };\n        },\n\n        desc: function(field) {\n            var selector = this.selector(field);\n            return function (a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return 1;\n                }\n\n                if (valueB == null) {\n                    return -1;\n                }\n\n                if (valueB.localeCompare) {\n                    return valueB.localeCompare(valueA);\n                }\n\n                return valueA < valueB ? 1 : -1;\n            };\n        },\n        create: function(sort) {\n           return this[sort.dir](sort.field);\n        }\n    });\n\n    map = function (array, callback) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = callback(array[idx], idx, array);\n        }\n\n        return result;\n    };\n\n    var operators = (function(){\n\n        function quote(str) {\n            if (typeof str == \"string\") {\n                str = str.replace(/[\\r\\n]+/g, \"\");\n            }\n            return JSON.stringify(str);\n        }\n\n        function textOp(impl) {\n            return function(a, b, ignore, accentFoldingFiltering) {\n                b += \"\";\n                if (ignore) {\n                    a = \"(\" + a + \" + '').toString()\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering  +\"')\" : \".toLowerCase()\");\n                    b = ((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase());\n                }\n                return impl(a, quote(b), ignore);\n            };\n        }\n\n        function operator(op, a, b, ignore, accentFoldingFiltering) {\n            if (b != null) {\n                if (typeof b === STRING) {\n                    var date = dateRegExp.exec(b);\n                    if (date) {\n                        b = new Date(+date[1]);\n                    } else if (ignore) {\n                        b = quote(((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase()));\n                        a = \"((\" + a + \" || '')+'')\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering  +\"')\" : \".toLowerCase()\");\n                    } else {\n                        b = quote(b);\n                    }\n                }\n\n                if (b.getTime) {\n                    //b looks like a Date\n                    a = \"(\" + a + \"&&\" + a + \".getTime?\" + a + \".getTime():\" + a + \")\";\n                    b = b.getTime();\n                }\n            }\n\n            return a + \" \" + op + \" \" + b;\n        }\n\n        function getMatchRegexp(pattern) {\n            // take a pattern, as supported by Excel match filter, and\n            // convert it to the equivalent JS regular expression.\n            // Excel patterns support:\n            //\n            //   * - match any sequence of characters\n            //   ? - match a single character\n            //\n            // to match a literal * or ?, they must be prefixed by a tilde (~)\n            for (var rx = \"/^\", esc = false, i = 0; i < pattern.length; ++i) {\n                var ch = pattern.charAt(i);\n                if (esc) {\n                    rx += \"\\\\\" + ch;\n                } else if (ch == \"~\") {\n                    esc = true;\n                    continue;\n                } else if (ch == \"*\") {\n                    rx += \".*\";\n                } else if (ch == \"?\") {\n                    rx += \".\";\n                } else if (\".+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0\".indexOf(ch) >= 0) {\n                    rx += \"\\\\\" + ch;\n                } else {\n                    rx += ch;\n                }\n                esc = false;\n            }\n            return rx + \"$/\";\n        }\n\n        return {\n            quote: function(value) {\n                if (value && value.getTime) {\n                    return \"new Date(\" + value.getTime() + \")\";\n                }\n                return quote(value);\n            },\n            eq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"==\", a, b, ignore, accentFoldingFiltering);\n            },\n            neq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"!=\", a, b, ignore, accentFoldingFiltering);\n            },\n            gt: function(a, b, ignore) {\n                return operator(\">\", a, b, ignore);\n            },\n            gte: function(a, b, ignore) {\n                return operator(\">=\", a, b, ignore);\n            },\n            lt: function(a, b, ignore) {\n                return operator(\"<\", a, b, ignore);\n            },\n            lte: function(a, b, ignore) {\n                return operator(\"<=\", a, b, ignore);\n            },\n            startswith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == 0\";\n            }),\n            doesnotstartwith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == -1\";\n            }),\n            endswith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") >= 0\";\n            }),\n            doesnotendwith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") < 0\";\n            }),\n            contains: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") >= 0\";\n            }),\n            doesnotcontain: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") == -1\";\n            }),\n            matches: textOp(function(a, b){\n                b = b.substring(1, b.length - 1);\n                return getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            doesnotmatch: textOp(function(a, b){\n                b = b.substring(1, b.length - 1);\n                return \"!\" + getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            isempty: function(a) {\n                return a + \" === ''\";\n            },\n            isnotempty: function(a) {\n                return a + \" !== ''\";\n            },\n            isnull: function(a) {\n                return \"(\" + a + \" == null)\";\n            },\n            isnotnull: function(a) {\n                return \"(\" + a + \" != null)\";\n            },\n            isnullorempty: function(a) {\n                return \"(\" + a + \" === null) || (\" + a + \" === '')\";\n            },\n            isnotnullorempty: function(a) {\n                return \"(\" + a + \" !== null) && (\" + a + \" !== '')\";\n            }\n        };\n    })();\n\n    function Query(data) {\n        this.data = data || [];\n    }\n\n    Query.filterExpr = function(expression) {\n        var expressions = [],\n            logic = { and: \" && \", or: \" || \" },\n            idx,\n            length,\n            filter,\n            expr,\n            fieldFunctions = [],\n            operatorFunctions = [],\n            field,\n            operator,\n            filters = expression.filters;\n\n        for (idx = 0, length = filters.length; idx < length; idx++) {\n            filter = filters[idx];\n            field = filter.field;\n            operator = filter.operator;\n\n            if (filter.filters) {\n                expr = Query.filterExpr(filter);\n                //Nested function fields or operators - update their index e.g. __o[0] -> __o[1]\n                filter = expr.expression\n                .replace(/__o\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__o[\" + (operatorFunctions.length + index) + \"]\";\n                })\n                .replace(/__f\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__f[\" + (fieldFunctions.length + index) + \"]\";\n                });\n\n                operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                fieldFunctions.push.apply(fieldFunctions, expr.fields);\n            } else {\n                if (typeof field === FUNCTION) {\n                    expr = \"__f[\" + fieldFunctions.length +\"](d)\";\n                    fieldFunctions.push(field);\n                } else {\n                    expr = kendo.expr(field);\n                }\n\n                if (typeof operator === FUNCTION) {\n                    filter = \"__o[\" + operatorFunctions.length + \"](\" + expr + \", \" + operators.quote(filter.value) + \")\";\n                    operatorFunctions.push(operator);\n                } else {\n                    filter = operators[(operator || \"eq\").toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined? filter.ignoreCase : true, expression.accentFoldingFiltering);\n                }\n            }\n\n            expressions.push(filter);\n        }\n\n        return  { expression: \"(\" + expressions.join(logic[expression.logic]) + \")\", fields: fieldFunctions, operators: operatorFunctions };\n    };\n\n    function normalizeSort(field, dir) {\n        if (field) {\n            var descriptor = typeof field === STRING ? { field: field, dir: dir } : field,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined ? [descriptor] : []);\n\n            return grep(descriptors, function(d) { return !!d.dir; });\n        }\n    }\n\n    function sortFields(sorts, dir) {\n        var sortObject = {};\n\n        if (sorts) {\n            var descriptor = typeof sorts === STRING ? { field: sorts, dir: dir } : sorts,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined ? [descriptor] : []);\n\n            for (var i = 0; i < descriptors.length; i++) {\n                sortObject[descriptors[i].field] = { dir: descriptors[i].dir, index: i + 1 };\n            }\n        }\n\n        return sortObject;\n    }\n\n    var operatorMap = {\n        \"==\": \"eq\",\n        equals: \"eq\",\n        isequalto: \"eq\",\n        equalto: \"eq\",\n        equal: \"eq\",\n        \"!=\": \"neq\",\n        ne: \"neq\",\n        notequals: \"neq\",\n        isnotequalto: \"neq\",\n        notequalto: \"neq\",\n        notequal: \"neq\",\n        \"<\": \"lt\",\n        islessthan: \"lt\",\n        lessthan: \"lt\",\n        less: \"lt\",\n        \"<=\": \"lte\",\n        le: \"lte\",\n        islessthanorequalto: \"lte\",\n        lessthanequal: \"lte\",\n        \">\": \"gt\",\n        isgreaterthan: \"gt\",\n        greaterthan: \"gt\",\n        greater: \"gt\",\n        \">=\": \"gte\",\n        isgreaterthanorequalto: \"gte\",\n        greaterthanequal: \"gte\",\n        ge: \"gte\",\n        notsubstringof: \"doesnotcontain\",\n        isnull: \"isnull\",\n        isempty: \"isempty\",\n        isnotempty: \"isnotempty\"\n    };\n\n    function normalizeOperator(expression) {\n        var idx,\n        length,\n        filter,\n        operator,\n        filters = expression.filters;\n\n        if (filters) {\n            for (idx = 0, length = filters.length; idx < length; idx++) {\n                filter = filters[idx];\n                operator = filter.operator;\n\n                if (operator && typeof operator === STRING) {\n                    filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                }\n\n                normalizeOperator(filter);\n            }\n        }\n    }\n\n    function normalizeFilter(expression) {\n        if (expression && !isEmptyObject(expression)) {\n            if (isArray(expression) || !expression.filters) {\n                expression = {\n                    logic: \"and\",\n                    filters: isArray(expression) ? expression : [expression]\n                };\n            }\n\n            normalizeOperator(expression);\n\n            return expression;\n        }\n    }\n\n    Query.normalizeFilter = normalizeFilter;\n\n    function compareDescriptor(f1, f2) {\n        if (f1.logic || f2.logic) {\n            return false;\n        }\n\n        return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n    }\n\n    function normalizeDescriptor(filter) {\n        filter = filter || {};\n\n        if (isEmptyObject(filter)) {\n            return { logic: \"and\", filters: [] };\n        }\n\n        return normalizeFilter(filter);\n    }\n\n    function fieldComparer(a, b) {\n        if (b.logic || (a.field > b.field)) {\n            return 1;\n        } else if (a.field < b.field) {\n            return -1;\n        } else {\n            return 0;\n        }\n    }\n\n    function compareFilters(expr1, expr2) {\n        expr1 = normalizeDescriptor(expr1);\n        expr2 = normalizeDescriptor(expr2);\n\n        if (expr1.logic !== expr2.logic) {\n            return false;\n        }\n\n        var f1, f2;\n        var filters1 = (expr1.filters || []).slice();\n        var filters2 = (expr2.filters || []).slice();\n\n        if (filters1.length !== filters2.length) {\n            return false;\n        }\n\n        filters1 = filters1.sort(fieldComparer);\n        filters2 = filters2.sort(fieldComparer);\n\n        for (var idx = 0; idx < filters1.length; idx++) {\n            f1 = filters1[idx];\n            f2 = filters2[idx];\n\n            if (f1.logic && f2.logic) {\n                if (!compareFilters(f1, f2)) {\n                    return false;\n                }\n            } else if (!compareDescriptor(f1, f2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    Query.compareFilters = compareFilters;\n\n    function normalizeAggregate(expressions) {\n        return isArray(expressions) ? expressions : [expressions];\n    }\n\n    function normalizeGroup(field, dir, compare, skipItemSorting) {\n        var descriptor = typeof field === STRING ? { field: field, dir: dir, compare: compare, skipItemSorting : skipItemSorting } : field,\n        descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            return {\n                field: d.field,\n                dir: d.dir || \"asc\",\n                aggregates: d.aggregates,\n                compare: d.compare,\n                skipItemSorting: d.skipItemSorting\n            };\n        });\n    }\n\n    function normalizeGroupWithoutCompare(field, dir, compare) {\n        var descriptors = normalizeGroup(field, dir, compare);\n\n        for (var i = 0; i < descriptors.length; i++) {\n            delete descriptors[i].compare;\n        }\n\n        return descriptors;\n    }\n\n    function anyGroupDescriptorHasCompare(groupDescriptors) {\n        var descriptors = isArray(groupDescriptors) ? groupDescriptors : [groupDescriptors];\n\n        for (var i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] && isFunction(descriptors[i].compare)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    Query.prototype = {\n        toArray: function () {\n            return this.data;\n        },\n        range: function(index, count) {\n            return new Query(this.data.slice(index, index + count));\n        },\n        skip: function (count) {\n            return new Query(this.data.slice(count));\n        },\n        take: function (count) {\n            return new Query(this.data.slice(0, count));\n        },\n        select: function (selector) {\n            return new Query(map(this.data, selector));\n        },\n        order: function(selector, dir, inPlace) {\n            var sort = { dir: dir };\n\n            if (selector) {\n                if (selector.compare) {\n                    sort.compare = selector.compare;\n                } else {\n                    sort.field = selector;\n                }\n            }\n\n            if (inPlace) {\n                return new Query(this.data.sort(Comparer.create(sort)));\n            }\n\n            return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n        },\n        orderBy: function(selector, inPlace) {\n            return this.order(selector, \"asc\", inPlace);\n        },\n        orderByDescending: function(selector, inPlace) {\n            return this.order(selector, \"desc\", inPlace);\n        },\n        sort: function(field, dir, comparer, inPlace) {\n            var idx,\n            length,\n            descriptors = normalizeSort(field, dir),\n            comparers = [];\n\n            comparer = comparer || Comparer;\n\n            if (descriptors.length) {\n                for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                    comparers.push(comparer.create(descriptors[idx]));\n                }\n\n                return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n            }\n\n            return this;\n        },\n\n        filter: function(expressions) {\n            var idx,\n            current,\n            length,\n            compiled,\n            predicate,\n            data = this.data,\n            fields,\n            operators,\n            result = [],\n            filter;\n\n            expressions = normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                return this;\n            }\n\n            compiled = Query.filterExpr(expressions);\n            fields = compiled.fields;\n            operators = compiled.operators;\n\n            predicate = filter = new Function(\"d, __f, __o\", \"return \" + compiled.expression);\n\n            if (fields.length || operators.length) {\n                filter = function(d) {\n                    return predicate(d, fields, operators);\n                };\n            }\n\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                current = data[idx];\n\n                if (filter(current)) {\n                    result.push(current);\n                }\n            }\n\n            return new Query(result);\n        },\n\n        group: function(descriptors, allData, options) {\n            descriptors =  normalizeGroup(descriptors || []);\n            allData = allData || this.data;\n\n            var that = this,\n            result = new Query(that.data),\n            descriptor;\n\n            if (descriptors.length > 0) {\n                descriptor = descriptors[0];\n\n                if (options && options.groupPaging) {\n                    result = new Query(allData).groupAllData(descriptor, allData).select(function (group) {\n                        var data = new Query(allData).filter([{\n                            field: group.field,\n                            operator: \"eq\",\n                            value: group.value,\n                            ignoreCase: false\n                        }]);\n                        var items = descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray(), options).toArray() : group.items;\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            hasSubgroups: descriptors.length > 1,\n                            items: items,\n                            aggregates: data.aggregate(descriptor.aggregates),\n                            uid: kendo.guid(),\n                            itemCount: items.length,\n                            subgroupCount: items.length\n                        };\n                    });\n\n                } else {\n                    result = result.groupBy(descriptor).select(function(group) {\n                        var data = new Query(allData).filter([ { field: group.field, operator: \"eq\", value: group.value, ignoreCase: false } ]);\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray()).toArray() : group.items,\n                            hasSubgroups: descriptors.length > 1,\n                            aggregates: data.aggregate(descriptor.aggregates)\n                        };\n                    });\n                }\n            }\n            return result;\n        },\n\n        groupBy: function(descriptor) {\n            var that = this;\n\n            if (isEmptyObject(descriptor) || !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? this.data : this._sortForGrouping(field, descriptor.dir || \"asc\"),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for(idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if(!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = that._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        groupAllData: function (descriptor, allData) {\n            if (isEmptyObject(descriptor) || this.data && !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? allData : new Query(allData).sort(field, descriptor.dir || \"asc\", StableComparer).toArray(),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = this._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        _sortForGrouping: function(field, dir) {\n            var idx, length,\n                data = this.data;\n\n            if (!stableSort) {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    data[idx].__position = idx;\n                }\n\n                data = new Query(data).sort(field, dir, StableComparer).toArray();\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    delete data[idx].__position;\n                }\n                return data;\n            }\n\n            return this.sort(field, dir).toArray();\n        },\n\n        _sortGroups: function(groups, descriptor) {\n            var result = groups;\n\n            if (descriptor && isFunction(descriptor.compare)) {\n                result = new Query(result).order({ compare: descriptor.compare }, descriptor.dir || ASCENDING).toArray();\n            }\n\n            return result;\n        },\n\n        aggregate: function (aggregates) {\n            var idx,\n                len,\n                result = {},\n                state = {};\n\n            if (aggregates && aggregates.length) {\n                for(idx = 0, len = this.data.length; idx < len; idx++) {\n                    calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                }\n            }\n            return result;\n        }\n    };\n\n    function groupValueComparer(a, b) {\n        if (a && a.getTime && b && b.getTime) {\n            return a.getTime() === b.getTime();\n        }\n        return a === b;\n    }\n\n    function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n        aggregates = aggregates || [];\n        var idx,\n            aggr,\n            functionName,\n            len = aggregates.length;\n\n        for (idx = 0; idx < len; idx++) {\n            aggr = aggregates[idx];\n            functionName = aggr.aggregate;\n            var field = aggr.field;\n            accumulator[field] = accumulator[field] || {};\n            state[field] = state[field] || {};\n            state[field][functionName] = state[field][functionName] || {};\n            accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n        }\n    }\n\n    var functions = {\n        sum: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(accumulator) {\n            return (accumulator || 0) + 1;\n        },\n        average: function(accumulator, item, accessor, index, length, state) {\n            var value = accessor.get(item);\n\n            if (state.count === undefined) {\n                state.count = 0;\n            }\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            if (isNumber(value)) {\n                state.count++;\n            }\n\n            if(index == length - 1 && isNumber(accumulator)) {\n                accumulator = accumulator / state.count;\n            }\n            return accumulator;\n        },\n        max: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if(accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if(accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function toJSON(array) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = array[idx].toJSON();\n        }\n\n        return result;\n    }\n\n    Query.normalizeGroup = normalizeGroup;\n    Query.normalizeSort = normalizeSort;\n\n    Query.process = function(data, options, inPlace) {\n        options = options || {};\n\n        var group = options.group;\n        var customGroupSort = anyGroupDescriptorHasCompare(normalizeGroup(group || []));\n        var query = new Query(data),\n            groupDescriptorsWithoutCompare = normalizeGroupWithoutCompare(group || []),\n            normalizedSort = normalizeSort(options.sort || []),\n            sort = customGroupSort ? normalizedSort : groupDescriptorsWithoutCompare.concat(normalizedSort),\n            groupDescriptorsWithoutSort,\n            total,\n            filterCallback = options.filterCallback,\n            filter = options.filter,\n            skip = options.skip,\n            take = options.take;\n\n        if (sort && inPlace) {\n            query = query.sort(sort, undefined, undefined, inPlace);\n        }\n\n        if (filter) {\n            query = query.filter(filter);\n\n            if (filterCallback) {\n                query = filterCallback(query);\n            }\n\n            total = query.toArray().length;\n        }\n\n        if (sort) {\n            if (!inPlace) {\n                query = query.sort(sort);\n            }\n\n            if (group) {\n                data = query.toArray();\n            }\n        }\n\n        if (customGroupSort) {\n            query = query.group(group, data, options);\n\n            if (skip !== undefined && take !== undefined && !options.groupPaging) {\n                query = new Query(flatGroups(query.toArray())).range(skip, take);\n\n                groupDescriptorsWithoutSort = map(groupDescriptorsWithoutCompare, function(groupDescriptor) {\n                    return extend({}, groupDescriptor, {\n                        skipItemSorting: true\n                    });\n                });\n\n                query = query.group(groupDescriptorsWithoutSort, data, options);\n            }\n        } else {\n            if (skip !== undefined && take !== undefined) {\n                query = query.range(skip, take);\n            }\n\n            if (group && (!isEmptyObject(group) || group.length !== 0)) {\n                query = query.group(group, data, options);\n            }\n        }\n\n        return {\n            total: total,\n            data: query.toArray()\n        };\n    };\n\n    var LocalTransport = Class.extend({\n        init: function(options) {\n            this.data = options.data;\n        },\n\n        read: function(options) {\n            options.success(this.data);\n        },\n        update: function(options) {\n            options.success(options.data);\n        },\n        create: function(options) {\n            options.success(options.data);\n        },\n        destroy: function(options) {\n            options.success(options.data);\n        }\n    });\n\n    var RemoteTransport = Class.extend( {\n        init: function(options) {\n            var that = this, parameterMap;\n\n            options = that.options = extend({}, that.options, options);\n\n            each(crud, function(index, type) {\n                if (typeof options[type] === STRING) {\n                    options[type] = {\n                        url: options[type]\n                    };\n                }\n            });\n\n            that.cache = options.cache? Cache.create(options.cache) : {\n                find: noop,\n                add: noop\n            };\n\n            parameterMap = options.parameterMap;\n\n            if (options.submit) {\n                that.submit = options.submit;\n            }\n\n            if (isFunction(options.push)) {\n                that.push = options.push;\n            }\n\n            if (!that.push) {\n                that.push = identity;\n            }\n\n            that.parameterMap = isFunction(parameterMap) ? parameterMap : function(options) {\n                var result = {};\n\n                each(options, function(option, value) {\n                    if (option in parameterMap) {\n                        option = parameterMap[option];\n                        if (isPlainObject(option)) {\n                            value = option.value(value);\n                            option = option.key;\n                        }\n                    }\n\n                    result[option] = value;\n                });\n\n                return result;\n            };\n        },\n\n        options: {\n            parameterMap: identity\n        },\n\n        create: function(options) {\n            return ajax(this.setup(options, CREATE));\n        },\n\n        read: function(options) {\n            var that = this,\n                success,\n                error,\n                result,\n                cache = that.cache;\n\n            options = that.setup(options, READ);\n\n            success = options.success || noop;\n            error = options.error || noop;\n\n            result = cache.find(options.data);\n\n            if(result !== undefined) {\n                success(result);\n            } else {\n                options.success = function(result) {\n                    cache.add(options.data, result);\n\n                    success(result);\n                };\n\n                $.ajax(options);\n            }\n        },\n\n        update: function(options) {\n            return ajax(this.setup(options, UPDATE));\n        },\n\n        destroy: function(options) {\n            return ajax(this.setup(options, DESTROY));\n        },\n\n        setup: function(options, type) {\n            options = options || {};\n\n            var that = this,\n                parameters,\n                operation = that.options[type],\n                data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n\n            options = extend(true, {}, operation, options);\n            parameters = extend(true, {}, data, options.data);\n\n            options.data = that.parameterMap(parameters, type);\n\n            if (isFunction(options.url)) {\n                options.url = options.url(parameters);\n            }\n\n            return options;\n        }\n    });\n\n    var Cache = Class.extend({\n        init: function() {\n            this._store = {};\n        },\n        add: function(key, data) {\n            if(key !== undefined) {\n                this._store[stringify(key)] = data;\n            }\n        },\n        find: function(key) {\n            return this._store[stringify(key)];\n        },\n        clear: function() {\n            this._store = {};\n        },\n        remove: function(key) {\n            delete this._store[stringify(key)];\n        }\n    });\n\n    Cache.create = function(options) {\n        var store = {\n            \"inmemory\": function() { return new Cache(); }\n        };\n\n        if (isPlainObject(options) && isFunction(options.find)) {\n            return options;\n        }\n\n        if (options === true) {\n            return new Cache();\n        }\n\n        return store[options]();\n    };\n\n    function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            setters = {},\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                originalName = fieldNames[getter];\n\n                if (originalName && originalName !== getter) {\n                    if (!setters[originalName]) {\n                        setters[originalName] = kendo.setter(originalName);\n                    }\n                    setters[originalName](record, getters[getter](record));\n                    delete record[getter];\n                }\n            }\n        }\n    }\n\n    function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                record[getter] = modelInstance._parse(getter, getters[getter](record));\n\n                originalName = fieldNames[getter];\n                if (originalName && originalName !== getter) {\n                    delete record[originalName];\n                }\n            }\n        }\n    }\n\n    function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            idx,\n            fieldName,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n\n            fieldName = originalFieldNames[record.field];\n            if (fieldName && fieldName != record.field) {\n                record.field = fieldName;\n            }\n\n            record.value = modelInstance._parse(record.field, record.value);\n\n            if (record.items) {\n                if (record.hasSubgroups) {\n                    convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                } else {\n                    convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                }\n            }\n        }\n    }\n\n    function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n            data = originalFunction(data);\n\n            return wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames)(data);\n        };\n    }\n\n    function wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n\n            if (data && !isEmptyObject(getters)) {\n                if (toString.call(data) !== \"[object Array]\" && !(data instanceof ObservableArray)) {\n                    data = [data];\n                }\n\n                converter(data, getters, new model(), originalFieldNames, fieldNames);\n            }\n\n            return data || [];\n        };\n    }\n\n    var DataReader = Class.extend({\n        init: function(schema) {\n            var that = this, member, get, model, base;\n\n            schema = schema || {};\n\n            for (member in schema) {\n                get = schema[member];\n\n                that[member] = typeof get === STRING ? getter(get) : get;\n            }\n\n            base = schema.modelBase || Model;\n\n            if (isPlainObject(that.model)) {\n                that.model = model = base.define(that.model);\n            }\n\n            var dataFunction = that.data.bind(that);\n\n            that._dataAccessFunction = dataFunction;\n\n            if (that.model) {\n                var groupsFunction = that.groups.bind(that),\n                    serializeFunction = that.serialize.bind(that),\n                    originalFieldNames = {},\n                    getters = {},\n                    serializeGetters = {},\n                    fieldNames = {},\n                    shouldSerialize = false,\n                    fieldName,\n                    name;\n\n                model = that.model;\n\n                if (model.fields) {\n                    each(model.fields, function(field, value) {\n                        var fromName;\n\n                        fieldName = field;\n\n                        if (isPlainObject(value) && value.field) {\n                            fieldName = value.field;\n                        } else if (typeof value === STRING) {\n                            fieldName = value;\n                        }\n\n                        if (isPlainObject(value) && value.from) {\n                            fromName = value.from;\n                        }\n\n                        shouldSerialize = shouldSerialize || (fromName && fromName !== field) || fieldName !== field;\n                        name = fromName || fieldName;\n                        getters[field] = name.indexOf(\".\") !== -1 ? getter(name, true) : getter(name);\n                        serializeGetters[field] = getter(field);\n                        originalFieldNames[fromName || fieldName] = field;\n                        fieldNames[field] = fromName || fieldName;\n                    });\n\n                    if (!schema.serialize && shouldSerialize) {\n                        that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                    }\n                }\n\n                that._dataAccessFunction = dataFunction;\n                that._wrapDataAccessBase = wrapDataAccessBase(model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n            }\n        },\n        errors: function(data) {\n            return data ? data.errors : null;\n        },\n        parse: identity,\n        data: identity,\n        total: function(data) {\n            return data.length;\n        },\n        groups: identity,\n        aggregates: function() {\n            return {};\n        },\n        serialize: function(data) {\n            return data;\n        }\n    });\n\n    function fillLastGroup(originalGroup, newGroup) {\n        var currOriginal;\n        var currentNew;\n\n        if (newGroup.items && newGroup.items.length) {\n            for (var i = 0; i < newGroup.items.length; i++) {\n                currOriginal = originalGroup.items[originalGroup.items.length - 1];\n                currentNew = newGroup.items[i];\n                if (currOriginal && currentNew) {\n                    if (currOriginal.hasSubgroups && currOriginal.value == currentNew.value) {\n                        fillLastGroup(currOriginal, currentNew);\n                    } else if (currOriginal.field && currOriginal.value == currentNew.value) {\n                        currOriginal.items.push.apply(currOriginal.items, currentNew.items);\n                    } else {\n                        originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                    }\n                } else if (currentNew) {\n                    originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                }\n            }\n        }\n    }\n    function mergeGroups(target, dest, skip, take) {\n        var group,\n            idx = 0,\n            items;\n\n        while (dest.length && take) {\n            group = dest[idx];\n            items = group.items;\n\n            var length = items.length;\n\n            if (target && target.field === group.field && target.value === group.value) {\n                if (target.hasSubgroups && target.items.length) {\n                    mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                } else {\n                    items = items.slice(skip, skip + take);\n                    target.items = target.items.concat(items);\n                }\n                dest.splice(idx--, 1);\n            } else if (group.hasSubgroups && items.length) {\n                mergeGroups(group, items, skip, take);\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            } else {\n                items = items.slice(skip, skip + take);\n                group.items = items;\n\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            }\n\n            if (items.length === 0) {\n                skip -= length;\n            } else {\n                skip = 0;\n                take -= items.length;\n            }\n\n            if (++idx >= dest.length) {\n                break;\n            }\n        }\n\n        if (idx < dest.length) {\n            dest.splice(idx, dest.length - idx);\n        }\n    }\n\n    function flatGroups(groups, indexFunction) {\n        var result = [];\n        var groupsLength = (groups || []).length;\n        var group;\n        var items;\n        var indexFn = isFunction(indexFunction) ? indexFunction : function(array, index) {\n            return array[index];\n        };\n\n        for (var groupIndex = 0; groupIndex < groupsLength; groupIndex++) {\n            group = indexFn(groups, groupIndex);\n\n            if (group.hasSubgroups) {\n                result = result.concat(flatGroups(group.items));\n            } else {\n                items = group.items;\n\n                for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                    result.push(indexFn(items, itemIndex));\n                }\n            }\n        }\n        return result;\n    }\n\n    function flattenGroups(data) {\n        var idx,\n            result = [],\n            length,\n            items,\n            itemIndex;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            var group = data.at(idx);\n            if (group.items) {\n                if (group.hasSubgroups) {\n                    result = result.concat(flattenGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(items.at(itemIndex));\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function wrapGroupItems(data, model) {\n        var idx, length, group;\n        if (model) {\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                group = data.at(idx);\n                if (group.items) {\n                    if (group.hasSubgroups) {\n                        wrapGroupItems(group.items, model);\n                    } else {\n                        group.items = new LazyObservableArray(group.items, model, group.items._events);\n                    }\n                }\n            }\n        }\n    }\n\n    function eachGroupItems(data, func) {\n        for (var idx = 0; idx < data.length; idx++) {\n            if (data[idx].hasSubgroups) {\n                if (eachGroupItems(data[idx].items, func)) {\n                    return true;\n                }\n            } else if (func(data[idx].items, data[idx])) {\n                return true;\n            }\n        }\n    }\n\n    function replaceInRanges(ranges, data, item, observable) {\n        for (var idx = 0; idx < ranges.length; idx++) {\n            if (ranges[idx].data === data) {\n                break;\n            }\n            if (replaceInRange(ranges[idx].data, item, observable)) {\n                break;\n            }\n        }\n    }\n\n    function replaceInRange(items, item, observable) {\n        for (var idx = 0, length = items.length; idx < length; idx++) {\n            if (items[idx] && items[idx].hasSubgroups) {\n                return replaceInRange(items[idx].items, item, observable);\n            } else if (items[idx] === item || items[idx] === observable) {\n               items[idx] = observable;\n               return true;\n            }\n        }\n    }\n\n    function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n        for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n            var item = view[viewIndex];\n\n            if (!item || item instanceof type) {\n                continue;\n            }\n\n            if (item.hasSubgroups !== undefined && !serverGrouping) {\n                replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n            } else {\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (data[idx] === item) {\n                        view[viewIndex] = data.at(idx);\n                        replaceInRanges(ranges, data, item, view[viewIndex]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function removeModel(data, model) {\n        if (!data) {\n            return;\n        }\n        var length = data.length;\n        var dataItem;\n        var idx;\n\n        for (idx = 0; idx < length; idx++) {\n            dataItem = data[idx];\n\n            if (dataItem.uid && dataItem.uid == model.uid) {\n                data.splice(idx, 1);\n                return dataItem;\n            }\n        }\n    }\n\n    function indexOfPristineModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return (item.uid && item.uid == model.uid) || (item[model.idField] === model.id && model.id !== model._defaultId);\n            });\n        }\n        return -1;\n    }\n\n    function indexOfModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return item.uid == model.uid;\n            });\n        }\n        return -1;\n    }\n\n    function indexOf(data, comparer) {\n        var idx, length;\n        if (!data) {\n            return;\n        }\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            if (comparer(data[idx])) {\n                return idx;\n            }\n        }\n\n        return -1;\n    }\n\n    function fieldNameFromModel(fields, name) {\n        if (fields && !isEmptyObject(fields)) {\n            var descriptor = fields[name];\n            var fieldName;\n            if (isPlainObject(descriptor)) {\n                fieldName = descriptor.from || descriptor.field || name;\n            } else {\n                fieldName = fields[name] || name;\n            }\n\n            if (isFunction(fieldName)) {\n                return name;\n            }\n\n            return fieldName;\n        }\n        return name;\n    }\n\n    function convertFilterDescriptorsField(descriptor, model) {\n        var idx,\n            length,\n            target = {};\n\n        for (var field in descriptor) {\n            if (field !== \"filters\") {\n                target[field] = descriptor[field];\n            }\n        }\n\n        if (descriptor.filters) {\n            target.filters = [];\n            for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n            }\n        } else {\n            target.field = fieldNameFromModel(model.fields, target.field);\n        }\n        return target;\n    }\n\n    function convertDescriptorsField(descriptors, model) {\n        var idx,\n            length,\n            result = [],\n            target,\n            descriptor;\n\n        for (idx = 0, length = descriptors.length; idx < length; idx ++) {\n            target = {};\n\n            descriptor = descriptors[idx];\n\n            for (var field in descriptor) {\n                target[field] = descriptor[field];\n            }\n\n            target.field = fieldNameFromModel(model.fields, target.field);\n\n            if (target.aggregates && isArray(target.aggregates)) {\n                target.aggregates = convertDescriptorsField(target.aggregates, model);\n            }\n            result.push(target);\n        }\n        return result;\n    }\n\n    var DataSource = Observable.extend({\n        init: function(options) {\n            var that = this, model, data;\n\n            if (options) {\n                data = options.data;\n            }\n\n            options = that.options = extend({}, that.options, options);\n\n            that._map = {};\n            that._prefetch = {};\n            that._data = [];\n            that._pristineData = [];\n            that._ranges = [];\n            that._view = [];\n            that._pristineTotal = 0;\n            that._destroyed = [];\n            that._pageSize = options.pageSize;\n            that._page = options.page  || (options.pageSize ? 1 : undefined);\n            that._sort = normalizeSort(options.sort);\n            that._sortFields = sortFields(options.sort);\n            that._filter = normalizeFilter(options.filter);\n            that._group = normalizeGroup(options.group);\n            that._aggregate = options.aggregate;\n            that._total = options.total;\n            that._groupPaging = options.groupPaging;\n\n            if (that._groupPaging) {\n                that._groupsState = {};\n            }\n            that._shouldDetachObservableParents = true;\n\n            Observable.fn.init.call(that);\n\n            that.transport = Transport.create(options, data, that);\n\n            if (isFunction(that.transport.push)) {\n                that.transport.push({\n                    pushCreate: that._pushCreate.bind(that),\n                    pushUpdate: that._pushUpdate.bind(that),\n                    pushDestroy: that._pushDestroy.bind(that)\n                });\n            }\n\n            if (options.offlineStorage != null) {\n                if (typeof options.offlineStorage == \"string\") {\n                    var key = options.offlineStorage;\n\n                    that._storage = {\n                        getItem: function() {\n                            return JSON.parse(localStorage.getItem(key));\n                        },\n                        setItem: function(item) {\n                            localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                        }\n                    };\n                } else {\n                    that._storage = options.offlineStorage;\n                }\n            }\n\n            that.reader = new kendo.data.readers[options.schema.type || \"json\" ](options.schema);\n\n            model = that.reader.model || {};\n\n            that._detachObservableParents();\n\n            that._data = that._observe(that._data);\n            that._online = true;\n\n            that.bind([\"push\", ERROR, CHANGE, REQUESTSTART, SYNC, REQUESTEND, PROGRESS], options);\n        },\n\n        options: {\n            data: null,\n            schema: {\n               modelBase: Model\n            },\n            offlineStorage: null,\n            serverSorting: false,\n            serverPaging: false,\n            serverFiltering: false,\n            serverGrouping: false,\n            serverAggregates: false,\n            batch: false,\n            inPlaceSort: false\n        },\n\n        clone: function() {\n            return this;\n        },\n\n        online: function(value) {\n            if (value !== undefined) {\n                if (this._online != value) {\n                    this._online = value;\n\n                    if (value) {\n                        return this.sync();\n                    }\n                }\n\n                return $.Deferred().resolve().promise();\n            } else {\n                return this._online;\n            }\n        },\n\n        offlineData: function(state) {\n            if (this.options.offlineStorage == null) {\n                return null;\n            }\n\n            if (state !== undefined) {\n                return this._storage.setItem(state);\n            }\n\n            return this._storage.getItem() || [];\n        },\n\n        _isServerGrouped: function() {\n            var group = this.group() || [];\n\n            return this.options.serverGrouping && group.length;\n        },\n\n        _isServerGroupPaged: function(){\n            return this._isServerGrouped() && this._groupPaging;\n        },\n\n        _isGroupPaged: function(){\n            var group = this._group || [];\n\n            return this._groupPaging && group.length;\n        },\n\n        _pushCreate: function(result) {\n            this._push(result, \"pushCreate\");\n        },\n\n        _pushUpdate: function(result) {\n            this._push(result, \"pushUpdate\");\n        },\n\n        _pushDestroy: function(result) {\n            this._push(result, \"pushDestroy\");\n        },\n\n        _push: function(result, operation) {\n            var data = this._readData(result);\n\n            if (!data) {\n                data = result;\n            }\n\n            this[operation](data);\n        },\n\n        _flatData: function(data, skip) {\n            if (data) {\n                if (this._isServerGrouped()) {\n                    return flattenGroups(data);\n                }\n\n                if (!skip) {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        data.at(idx);\n                    }\n                }\n            }\n\n            return data;\n        },\n\n        parent: noop,\n\n        get: function(id) {\n            var idx, length, data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].id == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        getByUid: function(id) {\n            return this._getByUid(id, this._data);\n        },\n\n        _getByUid: function(id, dataItems) {\n            var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n\n            if (!data) {\n                return;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].uid == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        indexOf: function(model) {\n            return indexOfModel(this._data, model);\n        },\n\n        at: function(index) {\n            return this._data.at(index);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined) {\n                that._detachObservableParents();\n                that._data = this._observe(value);\n\n                that._pristineData = value.slice(0);\n\n                that._storeData();\n\n                that._ranges = [];\n                that.trigger(\"reset\");\n                that._addRange(that._data);\n\n                that._total = that._data.length;\n                that._pristineTotal = that._total;\n\n                that._process(that._data);\n            } else {\n                if (that._data) {\n                    for (var idx = 0; idx < that._data.length; idx++) {\n                        that._data.at(idx);\n                    }\n                }\n\n                return that._data;\n            }\n        },\n\n        view: function(value) {\n            if (value === undefined) {\n                return this._view;\n            } else {\n                this._view = this._observeView(value);\n            }\n        },\n\n        _observeView: function(data) {\n            var that = this;\n            replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n\n            var view = new LazyObservableArray(data, that.reader.model);\n            view.parent = function() { return that.parent(); };\n            return view;\n        },\n\n        flatView: function() {\n            var groups = this.group() || [];\n\n            if (groups.length) {\n                return flattenGroups(this._view);\n            } else {\n                return this._view;\n            }\n        },\n\n        add: function(model) {\n            return this.insert(this._data.length, model);\n        },\n\n        _createNewModel: function(model) {\n            if (this.reader.model) {\n                return new this.reader.model(model);\n            }\n\n            if (model instanceof ObservableObject) {\n                return model;\n            }\n\n            return new ObservableObject(model);\n        },\n\n        insert: function(index, model) {\n            if (!model) {\n                model = index;\n                index = 0;\n            }\n\n            if (!(model instanceof Model)) {\n                model = this._createNewModel(model);\n            }\n\n            if (this._isServerGrouped()) {\n                this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n            } else {\n                this._data.splice(index, 0, model);\n            }\n\n            this._insertModelInRange(index, model);\n\n            return model;\n        },\n\n        pushInsert: function(index, items) {\n            var that = this;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            if (!items) {\n                items = index;\n                index = 0;\n            }\n\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var idx = 0; idx < items.length; idx ++) {\n                    var item = items[idx];\n\n                    var result = this.insert(index, item);\n\n                    pushed.push(result);\n\n                    var pristine = result.toJSON();\n\n                    if (this._isServerGrouped()) {\n                        pristine = this._wrapInEmptyGroup(pristine);\n                    }\n\n                    this._pristineData.push(pristine);\n\n                    if (rangeSpan && rangeSpan.length) {\n                        $(rangeSpan).last()[0].pristineData.push(pristine);\n                    }\n\n                    index++;\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"create\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushCreate: function(items) {\n            this.pushInsert(this._data.length, items);\n        },\n\n        pushUpdate: function(items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n\n            for (var idx = 0; idx < items.length; idx ++) {\n                var item = items[idx];\n                var model = this._createNewModel(item);\n\n                var target = this.get(model.id);\n\n                if (target) {\n                    pushed.push(target);\n\n                    target.accept(item);\n\n                    target.trigger(CHANGE);\n\n                    this._updatePristineForModel(target, item);\n                } else {\n                    this.pushCreate(item);\n                }\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushDestroy: function(items) {\n            var pushed = this._removeItems(items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"destroy\",\n                    items: pushed\n                });\n            }\n        },\n\n        _removeItems: function(items, removePristine) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var shouldRemovePristine = typeof removePristine !== \"undefined\" ? removePristine : true;\n\n            var destroyed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n            try {\n                for (var idx = 0; idx < items.length; idx ++) {\n                    var item = items[idx];\n                    var model = this._createNewModel(item);\n                    var found = false;\n\n                    this._eachItem(this._data, function(items){\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items.at(idx);\n                            if (item.id === model.id) {\n                                destroyed.push(item);\n                                items.splice(idx, 1);\n                                found = true;\n                                break;\n                            }\n                        }\n                    });\n\n                    if (found && shouldRemovePristine) {\n                        this._removePristineForModel(model);\n                        this._destroyed.pop();\n                    }\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return destroyed;\n        },\n\n        pushMove: function(index, items) {\n            var pushed = this._moveItems(index, items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        _moveItems: function (index, items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var moved = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var i = 0; i < items.length; i ++) {\n                    var item = items[i];\n                    var model = this._createNewModel(item);\n\n                    this._eachItem(this._data, function(dataItems){\n                        for (var idx = 0; idx < dataItems.length; idx++) {\n                            var dataItem = dataItems.at(idx);\n                            if (dataItem.id === model.id) {\n                                moved.push(dataItem);\n                                dataItems.splice(index >= idx ? --index : index, 0, dataItems.splice(idx, 1)[0]);\n                                index++;\n                                break;\n                            }\n                        }\n                    });\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return moved;\n        },\n\n        remove: function(model) {\n            var result,\n                that = this,\n                hasGroups = that._isServerGrouped();\n\n            if (hasGroups && model.uid && (!model.isNew || !model.isNew())) {\n                that._destroyed.push(model);\n            }\n\n            this._eachItem(that._data, function(items) {\n                result = removeModel(items, model);\n\n                if (result && hasGroups) {\n                    return true;\n                }\n            });\n\n            this._removeModelFromRanges(model);\n\n            return model;\n        },\n\n        destroyed: function() {\n            return this._destroyed;\n        },\n\n        created: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].isNew && data[idx].isNew()) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        updated: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && !data[idx].isNew()) && data[idx].dirty) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        sync: function() {\n            var that = this,\n                created = [],\n                updated = [],\n                destroyed = that._destroyed;\n\n            var promise = $.Deferred().resolve().promise();\n\n            if (that.online()) {\n\n                if (!that.reader.model) {\n                    return promise;\n                }\n\n                created = that.created();\n                updated = that.updated();\n\n                var promises = [];\n\n                if (that.options.batch && that.transport.submit) {\n                    promises = that._sendSubmit(created, updated, destroyed);\n                } else {\n                    promises.push.apply(promises, that._send(\"create\", created));\n                    promises.push.apply(promises, that._send(\"update\", updated));\n                    promises.push.apply(promises, that._send(\"destroy\", destroyed));\n                }\n\n                promise = $.when\n                 .apply(null, promises)\n                 .then(function() {\n                    var idx, length;\n\n                    for (idx = 0, length = arguments.length; idx < length; idx++){\n                        if (arguments[idx]) {\n                            that._accept(arguments[idx]);\n                        }\n                    }\n\n                    that._storeData(true);\n\n                    that._syncEnd();\n\n                    that._change({ action: \"sync\" });\n\n                    that.trigger(SYNC);\n\n                    if (that._isServerGroupPaged()) {\n                        that.read();\n                    }\n                });\n            } else {\n                that._storeData(true);\n\n                that._syncEnd();\n\n                that._change({ action: \"sync\" });\n            }\n\n            return promise;\n        },\n\n        _syncEnd: noop,\n\n        cancelChanges: function(model) {\n            var that = this;\n\n            if (model instanceof kendo.data.Model) {\n                that._cancelModel(model);\n            } else {\n                that._destroyed = [];\n                that._detachObservableParents();\n                that._data = that._observe(that._pristineData);\n                if (that.options.serverPaging) {\n                    that._total = that._pristineTotal;\n                }\n\n                that._ranges = [];\n                that._addRange(that._data, 0);\n\n                that._changesCanceled();\n\n                that._change();\n\n                that._markOfflineUpdatesAsDirty();\n\n                if (that._isServerGrouped()) {\n                    that.read();\n                }\n            }\n        },\n\n        _changesCanceled: noop,\n\n        _markOfflineUpdatesAsDirty: function() {\n            var that = this;\n\n            if (that.options.offlineStorage != null) {\n                that._eachItem(that._data, function(items) {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items.at(idx);\n                        if (item.__state__ == \"update\" || item.__state__ == \"create\") {\n                            item.dirty = true;\n                        }\n                    }\n                });\n            }\n        },\n\n        hasChanges: function() {\n            var idx,\n                length,\n                data = this._flatData(this._data, this.options.useRanges);\n\n            if (this._destroyed.length) {\n                return true;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && data[idx].isNew()) || data[idx].dirty) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _accept: function(result) {\n            var that = this,\n                models = result.models,\n                response = result.response,\n                idx = 0,\n                serverGroup = that._isServerGrouped(),\n                pristine = that._pristineData,\n                type = result.type,\n                length;\n\n            that.trigger(REQUESTEND, { response: response, type: type });\n\n            if (response && !isEmptyObject(response)) {\n                response = that.reader.parse(response);\n\n                if (that._handleCustomErrors(response)) {\n                    return;\n                }\n\n                response = that.reader.data(response);\n\n                if (!isArray(response)) {\n                    response = [response];\n                }\n            } else {\n                response = $.map(models, function(model) { return model.toJSON(); } );\n            }\n\n            if (type === \"destroy\") {\n                that._destroyed = [];\n            }\n\n            for (idx = 0, length = models.length; idx < length; idx++) {\n                if (type !== \"destroy\") {\n                    models[idx].accept(response[idx]);\n\n                    if (type === \"create\") {\n                        pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx].toJSON()) : response[idx]);\n                    } else if (type === \"update\") {\n                        that._updatePristineForModel(models[idx], response[idx]);\n                    }\n                } else {\n                    that._removePristineForModel(models[idx]);\n                }\n            }\n        },\n\n        _updatePristineForModel: function(model, values) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                kendo.deepExtend(items[index], values);\n            });\n        },\n\n        _executeOnPristineForModel: function(model, callback) {\n            this._eachPristineItem(\n                function(items) {\n                    var index = indexOfPristineModel(items, model);\n                    if (index > -1) {\n                        callback(index, items);\n                        return true;\n                    }\n                });\n        },\n\n        _removePristineForModel: function(model) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                items.splice(index, 1);\n            });\n        },\n\n        _readData: function(data) {\n            var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n            return read.call(this.reader, data);\n        },\n\n        _eachPristineItem: function(callback) {\n            var that = this;\n            var options = that.options;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            that._eachItem(that._pristineData, callback);\n\n            if (options.serverPaging && options.useRanges) {\n                each(rangeSpan, function(i, range) {\n                    that._eachItem(range.pristineData, callback);\n                });\n            }\n        },\n\n       _eachItem: function(data, callback) {\n            if (data && data.length) {\n                if (this._isServerGrouped()) {\n                    eachGroupItems(data, callback);\n                } else {\n                    callback(data);\n                }\n            }\n        },\n\n        _pristineForModel: function(model) {\n            var pristine,\n                idx,\n                callback = function(items) {\n                    idx = indexOfPristineModel(items, model);\n                    if (idx > -1) {\n                        pristine = items[idx];\n                        return true;\n                    }\n                };\n\n            this._eachPristineItem(callback);\n\n            return pristine;\n        },\n\n        _cancelModel: function(model) {\n            var that = this;\n            var pristine = this._pristineForModel(model);\n\n            this._eachItem(this._data, function(items) {\n                var idx = indexOfModel(items, model);\n                if (idx >= 0) {\n                    if (pristine && (!model.isNew() || pristine.__state__)) {\n                        items[idx].accept(pristine);\n\n                        if (pristine.__state__ == \"update\") {\n                            items[idx].dirty = true;\n                        }\n\n                    } else {\n                        that._modelCanceled(model);\n\n                        items.splice(idx, 1);\n\n                        that._removeModelFromRanges(model);\n                    }\n                }\n            });\n        },\n\n        _modelCanceled: noop,\n\n        _submit: function(promises, data) {\n            var that = this;\n\n            that.trigger(REQUESTSTART, { type: \"submit\" });\n\n            that.trigger(PROGRESS);\n\n            that.transport.submit(extend({\n                success: function(response, type) {\n                    var promise = $.grep(promises, function(x) {\n                        return x.type == type;\n                    })[0];\n\n                    if (promise) {\n                        promise.resolve({\n                            response: response,\n                            models: promise.models,\n                            type: type\n                        });\n                    }\n                },\n                error: function(response, status, error) {\n                    for (var idx = 0; idx < promises.length; idx++) {\n                        promises[idx].reject(response);\n                    }\n\n                    that.error(response, status, error);\n                }\n            }, data));\n        },\n\n        _sendSubmit: function(created, updated, destroyed) {\n            var that = this,\n                promises = [];\n\n            if (that.options.batch) {\n                if (created.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"create\";\n                        deferred.models = created;\n                    }));\n                }\n\n                if (updated.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"update\";\n                        deferred.models = updated;\n                    }));\n                }\n\n                if (destroyed.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"destroy\";\n                        deferred.models = destroyed;\n                    }));\n                }\n\n                that._submit(promises, {\n                    data: {\n                        created: that.reader.serialize(toJSON(created)),\n                        updated: that.reader.serialize(toJSON(updated)),\n                        destroyed: that.reader.serialize(toJSON(destroyed))\n                    }\n                });\n            }\n\n            return promises;\n        },\n\n        _promise: function(data, models, type) {\n            var that = this;\n\n            return $.Deferred(function(deferred) {\n                that.trigger(REQUESTSTART, { type: type });\n\n                that.trigger(PROGRESS);\n\n                that.transport[type].call(that.transport, extend({\n                    success: function(response) {\n                        deferred.resolve({\n                            response: response,\n                            models: models,\n                            type: type\n                        });\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, data));\n            }).promise();\n        },\n\n        _send: function(method, data) {\n            var that = this,\n                idx,\n                length,\n                promises = [],\n                converted = that.reader.serialize(toJSON(data));\n\n            if (that.options.batch) {\n                if (data.length) {\n                    promises.push(that._promise( { data: { models: converted } }, data , method));\n                }\n            } else {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    promises.push(that._promise( { data: converted[idx] }, [ data[idx] ], method));\n                }\n            }\n\n            return promises;\n        },\n\n        read: function(data) {\n            var that = this, params = that._params(data);\n            var deferred = $.Deferred();\n\n            that._queueRequest(params, function() {\n                var isPrevented = that.trigger(REQUESTSTART, { type: \"read\" });\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    that._ranges = [];\n                    that.trigger(\"reset\");\n                    if (that.online()) {\n                        that.transport.read({\n                            data: params,\n                            success: function(data) {\n                                that._ranges = [];\n                                that.success(data, params);\n\n                                deferred.resolve();\n                            },\n                            error: function() {\n                                var args = slice.call(arguments);\n\n                                that.error.apply(that, args);\n\n                                deferred.reject.apply(deferred, args);\n                            }\n                        });\n                    } else if (that.options.offlineStorage != null){\n                        that.success(that.offlineData(), params);\n\n                        deferred.resolve();\n                    }\n                } else {\n                    that._dequeueRequest();\n\n                    deferred.resolve(isPrevented);\n                }\n            });\n\n            return deferred.promise();\n        },\n\n        _readAggregates: function(data) {\n            return this.reader.aggregates(data);\n        },\n\n        success: function(data) {\n            var that = this,\n                options = that.options,\n                items,\n                replaceSubset;\n\n            that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n            if (that.online()) {\n                data = that.reader.parse(data);\n\n                if (that._handleCustomErrors(data)) {\n                    that._dequeueRequest();\n                    return;\n                }\n\n                that._total = that.reader.total(data);\n\n                if (that._isServerGroupPaged()) {\n                    that._serverGroupsTotal = that._total;\n                }\n\n                if (that._pageSize > that._total) {\n                    that._pageSize = that._total;\n                    if (that.options.pageSize && that.options.pageSize > that._pageSize) {\n                        that._pageSize = that.options.pageSize;\n                    }\n                }\n\n                if (that._aggregate && options.serverAggregates) {\n                    that._aggregateResult = that._readAggregates(data);\n                }\n\n                data = that._readData(data);\n\n                that._destroyed = [];\n            } else {\n                data = that._readData(data);\n\n                items = [];\n                var itemIds = {};\n                var model = that.reader.model;\n                var idField = model ? model.idField : \"id\";\n                var idx;\n\n                for (idx = 0; idx < this._destroyed.length; idx++) {\n                    var id = this._destroyed[idx][idField];\n                    itemIds[id] = id;\n                }\n\n                for (idx = 0; idx < data.length; idx++) {\n                    var item = data[idx];\n                    var state = item.__state__;\n                    if (state == \"destroy\") {\n                        if (!itemIds[item[idField]]) {\n                            this._destroyed.push(this._createNewModel(item));\n                        }\n                    } else {\n                        items.push(item);\n                    }\n                }\n\n                data = items;\n\n                that._total = data.length;\n            }\n\n            that._pristineTotal = that._total;\n            replaceSubset = that._skip && that._data.length && that._skip < that._data.length;\n\n            if (that.options.endless) {\n                if (replaceSubset) {\n                    that._pristineData.splice(that._skip, that._pristineData.length);\n                }\n                items = data.slice(0);\n                for (var j = 0; j < items.length; j++) {\n                    that._pristineData.push(items[j]);\n                }\n            } else {\n                that._pristineData = data.slice(0);\n            }\n\n            that._detachObservableParents();\n\n            if (that.options.endless) {\n                that._data.unbind(CHANGE, that._changeHandler);\n\n                if (that._isServerGrouped() && that._data[that._data.length - 1].value === data[0].value) {\n                    fillLastGroup(that._data[that._data.length - 1], data[0]);\n                    data.shift();\n                }\n\n                data = that._observe(data);\n                if (replaceSubset) {\n                    that._data.splice(that._skip, that._data.length);\n                }\n                for (var i = 0; i < data.length; i++) {\n                    that._data.push(data[i]);\n                }\n                that._data.bind(CHANGE, that._changeHandler);\n            } else {\n                that._data = that._observe(data);\n            }\n\n            that._markOfflineUpdatesAsDirty();\n\n            that._storeData();\n\n            that._addRange(that._data);\n\n            that._process(that._data);\n\n            that._dequeueRequest();\n        },\n\n        _detachObservableParents: function() {\n            if (this._data && this._shouldDetachObservableParents) {\n                for (var idx = 0; idx < this._data.length; idx++) {\n                    if (this._data[idx].parent) {\n                        this._data[idx].parent = noop;\n                    }\n                }\n            }\n        },\n\n        _storeData: function(updatePristine) {\n            var serverGrouping = this._isServerGrouped();\n            var model = this.reader.model;\n\n            function items(data) {\n                var state = [];\n\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data.at(idx);\n                    var item = dataItem.toJSON();\n\n                    if (serverGrouping && dataItem.items) {\n                        item.items = items(dataItem.items);\n                    } else {\n                        item.uid = dataItem.uid;\n\n                        if (model) {\n                            if (dataItem.isNew()) {\n                                item.__state__ = \"create\";\n                            } else if (dataItem.dirty) {\n                                item.__state__ = \"update\";\n                            }\n                        }\n                    }\n                    state.push(item);\n                }\n\n                return state;\n            }\n\n            if (this.options.offlineStorage != null) {\n                var state = items(this._data);\n\n                var destroyed = [];\n\n                for (var idx = 0; idx < this._destroyed.length; idx++) {\n                    var item = this._destroyed[idx].toJSON();\n                    item.__state__ = \"destroy\";\n                    destroyed.push(item);\n                }\n\n                this.offlineData(state.concat(destroyed));\n\n                if (updatePristine) {\n                    this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(state) : this.reader._wrapDataAccessBase(state);\n                }\n            }\n        },\n\n        _addRange: function (data, skip) {\n            var that = this,\n                start = typeof (skip) !== \"undefined\" ? skip : (that._skip || 0),\n                end,\n                range = {\n                    data: data,\n                    pristineData: data.toJSON(),\n                    timestamp: that._timeStamp()\n                };\n\n            if (this._isGroupPaged()) {\n                end = start + data.length;\n                range.outerStart = start;\n                range.outerEnd = end;\n            } else {\n                end = start + that._flatData(data, true).length;\n            }\n\n            range.start = start;\n            range.end = end;\n            that._ranges.push(range);\n            that._sortRanges();\n\n            if (that._isGroupPaged()) {\n                if (!that._groupsFlat) {\n                    that._groupsFlat = [];\n                }\n                that._appendToGroupsFlat(range.data);\n                that._updateOuterRangesLength();\n            }\n        },\n\n        _appendToGroupsFlat: function (data) {\n            var length = data.length;\n\n            for (var i = 0; i < length; i++) {\n                this._groupsFlat.push(data[i]);\n            }\n        },\n\n        _getGroupByUid: function(uid){\n            var length = this._groupsFlat.length;\n            var group;\n\n            for (var i = 0; i < length; i++) {\n                group = this._groupsFlat[i];\n                if (group.uid === uid) {\n                    return group;\n                }\n            }\n        },\n\n        _sortRanges: function() {\n            this._ranges.sort(function(x, y) {\n                return x.start - y.start;\n            });\n        },\n\n        error: function(xhr, status, errorThrown) {\n            this._dequeueRequest();\n            this.trigger(REQUESTEND, { });\n            this.trigger(ERROR, { xhr: xhr, status: status, errorThrown: errorThrown });\n        },\n\n        _params: function(data) {\n            var that = this,\n                options =  extend({\n                    take: that.take(),\n                    skip: that.skip(),\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate,\n                    groupPaging: !!that._groupPaging\n                }, data);\n\n            if (!that.options.serverPaging) {\n                delete options.take;\n                delete options.skip;\n                delete options.page;\n                delete options.pageSize;\n            }\n\n            if (!that.options.serverGrouping) {\n                delete options.group;\n            } else if (that.reader.model && options.group) {\n                options.group = convertDescriptorsField(options.group, that.reader.model);\n            }\n\n            if (!that.options.serverFiltering) {\n                delete options.filter;\n            } else if (that.reader.model && options.filter) {\n               options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n            }\n\n            if (!that.options.serverSorting) {\n                delete options.sort;\n            } else if (that.reader.model && options.sort) {\n                options.sort = convertDescriptorsField(options.sort, that.reader.model);\n            }\n\n            if (!that.options.serverAggregates) {\n                delete options.aggregate;\n            } else if (that.reader.model && options.aggregate) {\n                options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n            }\n\n            if (!that.options.groupPaging) {\n                delete options.groupPaging;\n            }\n\n            return options;\n        },\n\n        _queueRequest: function(options, callback) {\n            var that = this;\n            if (!that._requestInProgress) {\n                that._requestInProgress = true;\n                that._pending = undefined;\n                callback();\n            } else {\n                that._pending = { callback: callback.bind(that), options: options };\n            }\n        },\n\n        _dequeueRequest: function() {\n            var that = this;\n            that._requestInProgress = false;\n            if (that._pending) {\n                that._queueRequest(that._pending.options, that._pending.callback);\n            }\n        },\n\n        _handleCustomErrors: function(response) {\n            if (this.reader.errors) {\n                var errors = this.reader.errors(response);\n                if (errors) {\n                    this.trigger(ERROR, { xhr: null, status: \"customerror\", errorThrown: \"custom error\", errors: errors });\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _shouldWrap: function(data) {\n            var model = this.reader.model;\n\n            if (model && data.length) {\n                return !(data[0] instanceof model);\n            }\n\n            return false;\n        },\n\n        _observe: function(data) {\n            var that = this,\n                model = that.reader.model;\n\n            that._shouldDetachObservableParents = true;\n\n            if (data instanceof ObservableArray) {\n                that._shouldDetachObservableParents = false;\n                if (that._shouldWrap(data)) {\n                    data.type = that.reader.model;\n                    data.wrapAll(data, data);\n                }\n            } else {\n                var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                data = new arrayType(data, that.reader.model);\n                data.parent = function() { return that.parent(); };\n            }\n\n            if (that._isServerGrouped()) {\n                wrapGroupItems(data, model);\n            }\n\n            if (that._changeHandler && that._data && that._data instanceof ObservableArray &&\n                !(that.options.useRanges && that.options.serverPaging)) {\n                that._data.unbind(CHANGE, that._changeHandler);\n            } else {\n                that._changeHandler = that._change.bind(that);\n            }\n\n            return data.bind(CHANGE, that._changeHandler);\n        },\n\n        _updateTotalForAction: function(action, items) {\n            var that = this;\n\n            var total = parseInt(that._total, 10);\n\n            if (!isNumber(that._total)) {\n                total = parseInt(that._pristineTotal, 10);\n            }\n            if (action === \"add\") {\n                total += items.length;\n            } else if (action === \"remove\") {\n                total -= items.length;\n            } else if (action !== \"itemchange\" && action !== \"sync\" && !that.options.serverPaging) {\n                total = that._pristineTotal;\n            } else if (action === \"sync\") {\n                total = that._pristineTotal = parseInt(that._total, 10);\n            }\n\n            that._total = total;\n        },\n\n        _change: function(e) {\n            var that = this, idx, length, action = e ? e.action : \"\";\n\n            if (action === \"remove\") {\n                for (idx = 0, length = e.items.length; idx < length; idx++) {\n                    if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                        that._destroyed.push(e.items[idx]);\n                    }\n                }\n            }\n\n            if (that.options.autoSync && (action === \"add\" || action === \"remove\" || action === \"itemchange\")) {\n\n                var handler = function(args) {\n                    if (args.action === \"sync\") {\n                        that.unbind(\"change\", handler);\n                        that._updateTotalForAction(action, e.items);\n                    }\n                };\n\n                that.first(\"change\", handler);\n\n                that.sync();\n\n            } else {\n                that._updateTotalForAction(action, e ? e.items : []);\n\n                that._process(that._data, e);\n            }\n        },\n\n        _calculateAggregates: function (data, options) {\n            options = options || {};\n\n            var query = new Query(data),\n                aggregates = options.aggregate,\n                filter = options.filter;\n\n            if (filter) {\n                query = query.filter(filter);\n            }\n\n            return query.aggregate(aggregates);\n        },\n\n        _process: function (data, e) {\n            var that = this,\n                options = {},\n                result;\n\n            if (that.options.serverPaging !== true) {\n                options.skip = that._skip;\n                options.take = that._take || that._pageSize;\n\n                if(options.skip === undefined && that._page !== undefined && that._pageSize !== undefined) {\n                    options.skip = (that._page - 1) * that._pageSize;\n                }\n\n                if (that.options.useRanges) {\n                    options.skip = that.currentRangeStart();\n                }\n            }\n\n            if (that.options.serverSorting !== true) {\n                options.sort = that._sort;\n            }\n\n            if (that.options.serverFiltering !== true) {\n                options.filter = that._filter;\n            }\n\n            if (that.options.serverGrouping !== true) {\n                options.group = that._group;\n            }\n\n            if (that.options.serverAggregates !== true) {\n                options.aggregate = that._aggregate;\n            }\n\n            if (that.options.serverGrouping) {\n                that._clearEmptyGroups(data);\n            }\n\n            options.groupPaging = that._groupPaging;\n\n            if (that._isGroupPaged() && e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                result = that._queryProcess(data, {\n                    aggregate: that._aggregate\n                });\n            } else {\n                result = that._queryProcess(data, options);\n            }\n\n            if (that.options.serverAggregates !== true) {\n                // for performance reasons, calculate aggregates for part of the data only after query process\n                // this is necessary in the TreeList when paging\n                that._aggregateResult = that._calculateAggregates(result.dataToAggregate || data, options);\n            }\n\n            that._setView(result, options, e);\n\n            that._setFilterTotal(result.total, false);\n\n            e = e || {};\n\n            e.items = e.items || that._view;\n\n            that.trigger(CHANGE, e);\n        },\n\n        _setView: function (result, options, e) {\n            var that = this;\n\n            if (that._isGroupPaged() && !that._isServerGrouped()) {\n                if (e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                    that.view(result.data);\n                    that._updateOuterRangesLength();\n                } else {\n                    that._ranges = [];\n                    var query = new Query(result.data);\n                    that._addRange(that._observe(result.data));\n\n                    if (options.skip + options.take > result.data.length) {\n                        options.skip = result.data.length - options.take;\n                    }\n\n                    that.view(query.range(options.skip, options.take).toArray());\n                }\n\n            } else {\n                that.view(result.data);\n            }\n        },\n\n        _clearEmptyGroups: function(data) {\n            for (var idx = data.length - 1; idx >=0; idx--) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    this._clearEmptyGroups(group.items);\n                } else {\n                    if (group.items && !group.items.length) {\n                        splice.apply(group.parent(), [idx, 1]);\n                    }\n                }\n            }\n        },\n\n        _queryProcess: function(data, options) {\n            if (this.options.inPlaceSort) {\n                return Query.process(data, options, this.options.inPlaceSort);\n            }\n            else {\n                return Query.process(data, options);\n            }\n        },\n\n        _mergeState: function(options) {\n            var that = this;\n\n            if (options !== undefined) {\n                that._pageSize = options.pageSize;\n                that._page = options.page;\n                that._sort = options.sort;\n                that._filter = options.filter;\n                that._group = options.group;\n                that._aggregate = options.aggregate;\n                that._skip = that._currentRangeStart = options.skip;\n                that._take = options.take;\n\n                if(that._skip === undefined) {\n                    that._skip = that._currentRangeStart = that.skip();\n                    options.skip = that.skip();\n                }\n\n                if(that._take === undefined && that._pageSize !== undefined) {\n                    that._take = that._pageSize;\n                    options.take = that._take;\n                }\n\n                if (options.sort) {\n                    that._sort = options.sort = normalizeSort(options.sort);\n                    that._sortFields = sortFields(options.sort);\n                }\n\n                if (options.filter) {\n                    that._filter = options.filter = (that.options.accentFoldingFiltering && !$.isEmptyObject(options.filter)) ? $.extend({}, normalizeFilter(options.filter), { accentFoldingFiltering: that.options.accentFoldingFiltering}) : normalizeFilter(options.filter);\n                }\n\n                if (options.group) {\n                    that._group = options.group = normalizeGroup(options.group);\n                }\n                if (options.aggregate) {\n                    that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                }\n            }\n            return options;\n        },\n\n        query: function(options) {\n            var result;\n            var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n\n            if (remote || ((this._data === undefined || this._data.length === 0) && !this._destroyed.length)) {\n                if (this.options.endless) {\n                    var moreItemsCount = options.pageSize - this.pageSize();\n                    if (moreItemsCount > 0) {\n                        moreItemsCount = this.pageSize();\n                        options.page = options.pageSize / moreItemsCount;\n                        options.pageSize = moreItemsCount;\n                    } else {\n                        options.page = 1;\n                        this.options.endless = false;\n                    }\n                }\n                return this.read(this._mergeState(options));\n            }\n\n            var isPrevented = this.trigger(REQUESTSTART, { type: \"read\" });\n            if (!isPrevented) {\n                this.trigger(PROGRESS);\n                if (options) {\n                    options.groupPaging = this._groupPaging;\n                }\n                result = this._queryProcess(this._data, this._mergeState(options));\n\n                this._setFilterTotal(result.total, true);\n\n                this._aggregateResult = this._calculateAggregates(result.dataToAggregate || this._data, options);\n                this._setView(result, options);\n                this.trigger(REQUESTEND, { type: \"read\" });\n                this.trigger(CHANGE, { items: result.data, action: options ? options.action : \"\" });\n            }\n\n            return $.Deferred().resolve(isPrevented).promise();\n        },\n\n        _hasExpandedSubGroups: function (group) {\n            var result = false;\n            var length = group.items ? group.items.length : 0;\n\n            if (!group.hasSubgroups) {\n                return false;\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (this._groupsState[group.items[i].uid]) {\n                    result = true;\n                    break;\n                }\n            }\n            return result;\n        },\n\n        _findGroupedRange: function (data, result, options, parents, callback) {\n            var that = this;\n            var length = data.length;\n            var group;\n            var current;\n            var itemsLength;\n            var groupCount;\n            var itemsToSkip;\n\n            for (var i = 0; i < length; i++) {\n                group = data[i];\n\n                if (options.taken >= options.take) {\n                    break;\n                }\n\n                if (!that._getGroupByUid(group.uid)) {\n                    that._groupsFlat.push(group);\n                }\n\n                if (that._groupsState[group.uid]) {\n                    if (that._isServerGroupPaged()) {\n                       if (that._fetchGroupItems(group, options, parents, callback)) {\n                            that._fetchingGroupItems = true;\n                            return;\n                       }\n                       groupCount = (group.subgroupCount || group.itemCount) + 1;\n                       itemsToSkip = options.skip - options.skipped;\n                       if (!that._hasExpandedSubGroups(group) && itemsToSkip > groupCount) {\n                           options.skipped += groupCount;\n                           continue;\n                       }\n                    }\n\n                    if (options.includeParents && options.skipped < options.skip) {\n                        options.skipped++;\n                        group.excludeHeader = true;\n                    } else if (options.includeParents) {\n                        options.taken++;\n                        group.excludeHeader = false;\n                    }\n\n                    if (group.hasSubgroups && group.items && group.items.length) {\n                        group.currentItems = [];\n\n                        if (!parents) {\n                            parents = [];\n                        }\n                        parents.push(group);\n\n                        that._findGroupedRange(group.items, group.currentItems, options, parents, callback);\n                        parents.pop();\n\n                        if (group.currentItems.length || options.taken > 0) {\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    } else {\n                        current = [];\n                        itemsLength = group.items.length;\n\n                        for (var j = 0; j < itemsLength; j++) {\n                            if (options.skipped < options.skip) {\n                                options.skipped++;\n                                continue;\n                            }\n\n                            if (options.taken >= options.take) {\n                                break;\n                            }\n                            current.push(group.items[j]);\n                            options.taken++;\n                        }\n\n                        if (current.length || options.taken > 0) {\n                            group.currentItems = current;\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    }\n                } else {\n                    if (options.skipped < options.skip) {\n                        options.skipped++;\n                        continue;\n                    }\n                    result.push(group);\n                    options.taken++;\n                }\n            }\n        },\n\n        _expandedSubGroupItemsCount: function (group, end, includeCurrentItems) {\n            var that = this;\n            var result = 0;\n            var subGroup;\n            var endSpecified = typeof end === \"number\";\n            var length = endSpecified ? end : group.subgroupCount;\n            var temp;\n\n            if (!group.hasSubgroups) {\n                return result;\n            }\n\n            for (var i = 0; i < length; i++) {\n                subGroup = group.items[i];\n\n                if (!subGroup) {\n                    break;\n                }\n\n                if (subGroup.hasSubgroups && that._groupsState[group.uid]) {\n                    temp = that._expandedSubGroupItemsCount(subGroup, length, true);\n                    result += temp;\n\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                } else if (!subGroup.hasSubgroups && that._groupsState[subGroup.uid]) {\n                    temp = subGroup.items ? subGroup.items.length : 0;\n                    result += temp;\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                }\n\n                if (includeCurrentItems) {\n                    result += 1;\n                    if (endSpecified) {\n                        length -= 1;\n                    }\n                }\n\n                if (endSpecified && result > length) {\n                    return result;\n                }\n            }\n\n            return result;\n        },\n\n        _fetchGroupItems: function(group, options, parents, callback) {\n            var that = this;\n            var groupItemsSkip;\n            var firstItem;\n            var lastItem;\n            var groupItemCount = group.hasSubgroups ? group.subgroupCount : group.itemCount;\n            var take = options.take;\n            var skipped = options.skipped;\n            var pageSize = that.take();\n            var expandedSubGroupItemsCount;\n\n            if (options.includeParents) {\n                if (skipped < options.skip) {\n                    skipped += 1;\n                } else {\n                    take -= 1;\n                }\n            }\n\n            if (!group.items || (group.items && !group.items.length)) {\n                that.getGroupItems(group, options, parents, callback, 0);\n                return true;\n            } else {\n                expandedSubGroupItemsCount = this._expandedSubGroupItemsCount(group, options.skip - skipped);\n                groupItemsSkip = Math.max(options.skip - (skipped + expandedSubGroupItemsCount), 0);\n\n                if (groupItemsSkip >= groupItemCount) {\n                    return false;\n                }\n\n                firstItem = group.items[groupItemsSkip];\n                lastItem = group.items[Math.min(groupItemsSkip + take, groupItemCount - 1)];\n\n                if (firstItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor(groupItemsSkip / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n\n                if (lastItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor((groupItemsSkip + pageSize) / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n            }\n        },\n\n        getGroupItems: function(group, options, parents, callback, groupItemsSkip, page) {\n            var that = this;\n            var take;\n            var filter;\n            var data;\n            var subgroups;\n\n            if (!group.items) {\n                group.items = [];\n            }\n\n            take = that.take();\n            filter = this._composeItemsFilter(group, parents);\n            data = {\n                page: page || 1,\n                pageSize: take,\n                skip: groupItemsSkip,\n                take: take,\n                filter: filter,\n                aggregate: that._aggregate,\n                sort: that._sort\n            };\n            subgroups = that.findSubgroups(group);\n\n            if (subgroups && subgroups.length) {\n                data.group = subgroups;\n                data.groupPaging = true;\n            }\n\n            clearTimeout(that._timeout);\n            that._timeout = setTimeout(function () {\n                that._queueRequest(data, function () {\n                    if (!that.trigger(REQUESTSTART, {\n                            type: \"read\"\n                        })) {\n                        that.transport.read({\n                            data: data,\n                            success: that._groupItemsSuccessHandler(group, options.skip, that.take(), callback, groupItemsSkip),\n                            error: function () {\n                                var args = slice.call(arguments);\n                                that.error.apply(that, args);\n                            }\n                        });\n                    } else {\n                        that._dequeueRequest();\n                    }\n                });\n            }, 100);\n        },\n\n        _groupItemsSuccessHandler: function(group, skip, take, callback, groupItemsSkip) {\n            var that = this;\n            var timestamp = that._timeStamp();\n            callback = isFunction(callback) ? callback : noop;\n            var totalField = that.options.schema && that.options.schema.total ? that.options.schema.total : \"Total\";\n\n            return function (data) {\n                var temp;\n                var model = Model.define(that.options.schema.model);\n                var totalCount;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, {\n                    response: data,\n                    type: \"read\"\n                });\n\n                if (isFunction(totalField)) {\n                    totalCount = totalField(data);\n                } else {\n                    totalCount = data[totalField];\n                }\n\n                data = that.reader.parse(data);\n\n                if (group.hasSubgroups) {\n                    temp = that.reader.groups(data);\n                    group.subgroupCount = totalCount;\n                } else {\n                    temp = that.reader.data(data);\n                    temp = temp.map(function (item) {\n                        return new model(item);\n                    });\n                }\n\n                group.items.omitChangeEvent = true;\n                for (var i = 0; i < totalCount; i++) {\n                    if (i >= groupItemsSkip && i < (groupItemsSkip + take) ) {\n                        group.items.splice(i, 1, temp[i - groupItemsSkip]);\n                    } else {\n                        if (!group.items[i]) {\n                            group.items.splice(i, 0, { notFetched: true });\n                        }\n                    }\n                }\n                group.items.omitChangeEvent = false;\n\n                that._updateRangePristineData(group);\n                that._fetchingGroupItems = false;\n\n                if (!group.countAdded) {\n                    that._serverGroupsTotal += totalCount;\n                    group.countAdded = true;\n                }\n\n                that.range(skip, take, callback, \"expandGroup\");\n\n                if (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress) {\n                    that.trigger(CHANGE, {});\n                }\n            };\n        },\n\n        findSubgroups: function(group) {\n            var indexOfCurrentGroup = this._group.map(function (g) {\n                return g.field;\n            }).indexOf(group.field);\n\n            return this._group.slice(indexOfCurrentGroup + 1, this._group.length);\n        },\n\n        _composeItemsFilter: function(group, parents) {\n            var filter = this.filter() || {\n                logic: \"and\",\n                filters: []\n            };\n\n            filter = extend(true, {}, filter);\n            filter.filters.push({\n                field: group.field,\n                operator: \"eq\",\n                value: group.value\n            });\n\n            if (parents) {\n                for (var i = 0; i < parents.length; i++) {\n                    filter.filters.push({\n                        field: parents[i].field,\n                        operator: \"eq\",\n                        value: parents[i].value\n                    });\n                }\n            }\n\n            return filter;\n        },\n\n        _updateRangePristineData: function(group) {\n            var that = this;\n            var ranges = that._ranges;\n            var rangesLength = ranges.length;\n            var temp;\n            var currentGroup;\n            var range;\n            var dataLength;\n            var indexes;\n            var currIdx;\n\n            for (var i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                dataLength = range.data.length;\n                indexes = [];\n                temp = null;\n\n                for (var j = 0; j < dataLength; j++) {\n                    currentGroup = range.data[j];\n                    indexes.push(j);\n\n                    if ((currentGroup.uid === group.uid) || (currentGroup.hasSubgroups && currentGroup.items.length && that._containsSubGroup(currentGroup, group, indexes))) {\n                        break;\n                    }\n                    indexes.pop();\n                }\n\n                if (indexes.length) {\n                    temp = ranges[i].pristineData;\n\n                    while (indexes.length > 1) {\n                        currIdx = indexes.splice(0, 1)[0];\n                        temp = temp[currIdx].items;\n                    }\n                    temp[indexes[0]] = that._cloneGroup(group);\n                    break;\n                }\n            }\n        },\n\n        _containsSubGroup: function(group, subgroup, indexes) {\n            var that = this;\n            var length = group.items.length;\n            var currentSubGroup;\n\n            if (group.hasSubgroups && length) {\n                for (var i = 0; i < length; i++) {\n                    currentSubGroup = group.items[i];\n                    indexes.push(i);\n                    if (currentSubGroup.uid === subgroup.uid) {\n                        return true;\n                    } else if (currentSubGroup.hasSubgroups && currentSubGroup.items.length) {\n                        return that._containsSubGroup(currentSubGroup, subgroup, indexes);\n                    }\n                    indexes.pop();\n                }\n            }\n\n        },\n\n        _cloneGroup: function(group) {\n            var that = this;\n            group = typeof group.toJSON == \"function\" ? group.toJSON() : group;\n\n            if (group.items && group.items.length) {\n                group.items = group.items.map(function (item) {\n                    return that._cloneGroup(item);\n                });\n            }\n\n            return group;\n        },\n\n        _setFilterTotal: function(filterTotal, setDefaultValue) {\n            var that = this;\n\n            if (!that.options.serverFiltering) {\n                if (filterTotal !== undefined) {\n                    that._total = filterTotal;\n                } else if (setDefaultValue) {\n                    that._total = that._data.length;\n                }\n            }\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            var fn = function(isPrevented) {\n                if (isPrevented !== true && isFunction(callback)) {\n                    callback.call(that);\n                }\n            };\n\n            return this._query().done(fn);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate()\n            }, options));\n        },\n\n        next: function(options) {\n            var that = this,\n                page = that.page(),\n                total = that.total();\n\n            options = options || {};\n\n            if (!page || (total && page + 1 > that.totalPages())) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = page * that.take();\n\n            page += 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        prev: function(options) {\n            var that = this,\n                page = that.page();\n\n            options = options || {};\n\n            if (!page || page === 1) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = that._skip - that.take();\n\n            page -= 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        page: function(val) {\n            var that = this,\n            skip;\n\n            if(val !== undefined) {\n                val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                var take = that.take();\n\n                if (that._isGroupPaged()) {\n                    val -= 1;\n                    that.range(val * take, take, null, \"page\");\n                    return;\n                }\n                that._query(that._pageableQueryOptions({ page: val }));\n                return;\n            }\n            skip = that.skip();\n\n            return skip !== undefined ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined;\n        },\n\n        pageSize: function(val) {\n            var that = this;\n\n            if (val !== undefined) {\n                that._query(that._pageableQueryOptions({ pageSize: val, page: 1 }));\n                return;\n            }\n\n            return that.take();\n        },\n\n        sort: function(val) {\n            var that = this;\n\n            if(val !== undefined) {\n                that.trigger(\"sort\");\n                that._query({ sort: val });\n                return;\n            }\n\n            return that._sort;\n        },\n\n        filter: function(val) {\n            var that = this;\n\n            if (val === undefined) {\n                return that._filter;\n            }\n\n            that.trigger(\"reset\");\n            that._query({ filter: val, page: 1 });\n        },\n\n        group: function(val) {\n            var that = this;\n            var options = { group: val };\n\n            if (that._groupPaging) {\n                // clear ranges if ungrouping is performed\n                if (val!== undefined && (!val || !val.length) ) {\n                    that._ranges = [];\n                }\n                options.page = 1;\n            }\n\n            if(val !== undefined) {\n                that._query(options);\n                return;\n            }\n\n            return that._group;\n        },\n\n        getGroupsFlat: function (data) {\n            var idx,\n                result = [],\n                length;\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    result = result.concat(this.getGroupsFlat(group.items));\n                }\n\n                result.push(group);\n            }\n\n            return result;\n        },\n\n        total: function() {\n            return parseInt(this._total || 0, 10);\n        },\n\n        groupsTotal: function (includeExpanded) {\n            var that = this;\n\n            if (!that._group.length) {\n                return that.total();\n            }\n\n            if (that._isServerGrouped()) {\n                if (that._serverGroupsTotal) {\n                    return that._serverGroupsTotal;\n                }\n                that._serverGroupsTotal = that.total();\n\n                return that._serverGroupsTotal;\n            }\n\n            return that._calculateGroupsTotal(that._ranges.length ? that._ranges[0].data : [], includeExpanded);\n        },\n\n        _calculateGroupsTotal: function (groups, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            itemsField = itemsField || \"items\";\n            var total;\n            var length;\n\n            if (that._group.length && groups) {\n                total = 0;\n                length = groups.length;\n\n                for (var i = 0; i < length; i++) {\n                    total += that.groupCount(groups[i], includeExpanded, itemsField, ignoreState);\n                }\n                that._groupsTotal = total;\n                return total;\n            }\n\n            that._groupsTotal = that._data.length;\n            return that._groupsTotal;\n        },\n\n        groupCount: function (group, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            var total = 0;\n\n            if (group.hasSubgroups && that._groupsState[group.uid]) {\n                if (includeExpanded && !group.excludeHeader || ignoreState) {\n                    total += 1;\n                }\n\n                group[itemsField].forEach(function (subgroup) {\n                    total += that.groupCount(subgroup, includeExpanded, itemsField, ignoreState);\n                });\n            } else {\n                if (that._groupsState[group.uid]) {\n                    if (includeExpanded && !group.excludeHeader || ignoreState) {\n                        total++;\n                    }\n                    total += group[itemsField] ? group[itemsField].length : 0;\n                } else {\n                    total++;\n                }\n            }\n            return total;\n        },\n\n        countGroupRange: function (range) {\n            var total = 0;\n            var length = range.length;\n\n            for (var i = 0; i < length; i++) {\n                total += this.groupCount(range[i], true);\n            }\n\n            return total;\n        },\n\n        aggregate: function(val) {\n            var that = this;\n\n            if(val !== undefined) {\n                that._query({ aggregate: val });\n                return;\n            }\n\n            return that._aggregate;\n        },\n\n        aggregates: function() {\n            var result = this._aggregateResult;\n\n            if (isEmptyObject(result)) {\n                result = this._emptyAggregates(this.aggregate());\n            }\n\n            return result;\n        },\n\n        _emptyAggregates: function(aggregates) {\n            var result = {};\n\n            if (!isEmptyObject(aggregates)) {\n                var aggregate = {};\n\n                if (!isArray(aggregates)){\n                    aggregates = [aggregates];\n                }\n\n                for (var idx = 0; idx <aggregates.length; idx++) {\n                    aggregate[aggregates[idx].aggregate] = 0;\n                    result[aggregates[idx].field] = aggregate;\n                }\n            }\n\n            return result;\n        },\n\n        _pageableQueryOptions: function(options) {\n            return options;\n        },\n\n        _wrapInEmptyGroup: function(model) {\n            var groups = this.group(),\n                parent,\n                group,\n                idx,\n                length;\n\n            for (idx = groups.length-1, length = 0; idx >= length; idx--) {\n                group = groups[idx];\n                parent = {\n                    value: model.get ? model.get(group.field) : model[group.field],\n                    field: group.field,\n                    items: parent ? [parent] : [model],\n                    hasSubgroups: !!parent,\n                    aggregates: this._emptyAggregates(group.aggregates)\n                };\n            }\n\n            return parent;\n        },\n\n        totalPages: function() {\n            var that = this,\n                pageSize = that.pageSize() || that.total(),\n                total = that._isGroupPaged() ? that.groupsTotal(true) : that.total();\n\n            return math.ceil((total || 0) / pageSize);\n        },\n\n        inRange: function(skip, take) {\n            var that = this,\n                end = math.min(skip + take, that.total());\n\n            if (!that.options.serverPaging && that._data.length > 0) {\n                return true;\n            }\n\n            return that._findRange(skip, end).length > 0;\n        },\n\n        lastRange: function() {\n            var ranges = this._ranges;\n            return ranges[ranges.length - 1] || { start: 0, end: 0, data: [] };\n        },\n\n        firstItemUid: function() {\n            var ranges = this._ranges;\n            return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n        },\n\n        enableRequestsInProgress: function() {\n            this._skipRequestsInProgress = false;\n        },\n\n        _timeStamp: function() {\n            return new Date().getTime();\n        },\n\n        range: function(skip, take, callback, action) {\n            this._currentRequestTimeStamp = this._timeStamp();\n            this._skipRequestsInProgress = true;\n            var total = this._isGroupPaged() ? this.groupsTotal(true) : this.total();\n\n            if (action === \"expandGroup\" || action === \"collapseGroup\") {\n                this._updateOuterRangesLength();\n            }\n\n            skip = math.min(skip || 0, total);\n            callback = isFunction(callback) ? callback : noop;\n\n            var that = this,\n                pageSkip = math.max(math.floor(skip / take), 0) * take,\n                size = math.min(pageSkip + take, total),\n                data;\n\n            data = that._findRange(skip, math.min(skip + take, total), callback);\n\n            if ((data.length || total === 0) && !that._fetchingGroupItems) {\n                that._processRangeData(data, skip, take, that._originalPageSkip || pageSkip, that._originalSize || size, {\n                    action: action\n                });\n                that._originalPageSkip = null;\n                that._originalSize = null;\n                callback();\n                return;\n            }\n\n            if (that._isGroupPaged()) {\n                that._originalPageSkip = pageSkip;\n                that._originalSize = size;\n\n                pageSkip = math.max(math.floor(that._adjustPageSkip(skip, take) / take), 0) * take;\n                size = math.min(pageSkip + take, total);\n            }\n\n            if (take !== undefined && !that._fetchingGroupItems) {\n                if ((that._isGroupPaged() && !that._groupRangeExists(pageSkip, take)) || !that._rangeExists(pageSkip, size)) {\n                    that.prefetch(pageSkip, take, function() {\n                        if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                            that.prefetch(size, take, function() {\n                                that.range(skip, take, callback );\n                            });\n                        } else {\n                            that.range(skip, take, callback);\n                        }\n                    });\n                } else if (pageSkip < skip) {\n                    that.prefetch(size, take, function() {\n                        that.range(skip, take, callback );\n                    });\n                }\n            }\n        },\n\n        _findRange: function(start, end, callback) {\n            var that = this,\n                ranges = that._ranges,\n                range,\n                data = [],\n                skipIdx,\n                takeIdx,\n                startIndex,\n                endIndex,\n                rangeData,\n                rangeEnd,\n                processed,\n                options = that.options,\n                remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates,\n                flatData,\n                count,\n                length,\n                groupMapOptions = {\n                        take: end - start,\n                        skip: start,\n                        skipped: 0,\n                        taken: 0,\n                        includeParents: true\n                    },\n                prevRangeEnd,\n                isGroupPaged = that._isGroupPaged(),\n                startField = isGroupPaged ? \"outerStart\" : \"start\",\n                endField = isGroupPaged ? \"outerEnd\" : \"end\",\n                currentDataLength;\n\n            for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                range = ranges[skipIdx];\n\n                if (isGroupPaged) {\n                    if (range.outerStart >= end) {\n                        return [];\n                    }\n\n                    if (start > range.outerEnd) {\n                        groupMapOptions.skipped += range.outerEnd - (prevRangeEnd || 0);\n                        prevRangeEnd = range.outerEnd;\n                        continue;\n                    }\n\n                    if (typeof prevRangeEnd !== \"undefined\" && prevRangeEnd != range.outerStart) {\n                        groupMapOptions.skipped += range.outerStart - prevRangeEnd;\n                    }\n\n                    if (groupMapOptions.skipped > groupMapOptions.skip) {\n                        return [];\n                    }\n\n                    if (typeof prevRangeEnd === \"undefined\" && start > 0 && range.start > 0) {\n                        groupMapOptions.skipped = range.outerStart;\n                    }\n\n                    takeIdx = skipIdx;\n                    while (true) {\n                        this._findGroupedRange(range.data, data, groupMapOptions, null, callback);\n                        currentDataLength = that._calculateGroupsTotal(data, true, \"currentItems\");\n\n                        if (currentDataLength >= groupMapOptions.take) {\n                            return data;\n                        }\n\n                        if (that._fetchingGroupItems) {\n                            return [];\n                        }\n                        takeIdx++;\n\n                        if (ranges[takeIdx] && ranges[takeIdx].outerStart === range.outerEnd) {\n                            range = ranges[takeIdx];\n                        } else {\n                            break;\n                        }\n                    }\n                } else if (start >= range[startField] && start <= range[endField]) {\n                    count = 0;\n\n                    for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                        range = ranges[takeIdx];\n                        flatData = that._flatData(range.data, true);\n\n                        if (flatData.length && start + count >= range.start) {\n                            rangeData = range.data;\n                            rangeEnd = range.end;\n\n                            if (!remote) {\n                                if (options.inPlaceSort) {\n                                    processed = that._queryProcess(range.data, { filter: that.filter() });\n                                } else {\n                                    var sort = normalizeGroupWithoutCompare(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                    processed = that._queryProcess(range.data, { sort: sort, filter: that.filter() });\n                                }\n                                flatData = rangeData = processed.data;\n\n                                if (processed.total !== undefined) {\n                                    rangeEnd = processed.total;\n                                }\n                            }\n\n                            startIndex = 0;\n                            if (start + count > range.start) {\n                                startIndex = (start + count) - range.start;\n                            }\n                            endIndex = flatData.length;\n                            if (rangeEnd > end) {\n                                endIndex = endIndex - (rangeEnd - end);\n                            }\n                            count += endIndex - startIndex;\n                            data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n\n                            if (end <= range.end && count == end - start) {\n                                return data;\n                            }\n                        }\n                    }\n                    break;\n                }\n                prevRangeEnd = range.outerEnd;\n            }\n            return [];\n        },\n\n        _getRangesMismatch: function (pageSkip) {\n            var that = this;\n            var ranges = that._ranges;\n            var mismatch = 0;\n            var i = 0;\n\n            while (true) {\n                var range = ranges[i];\n                if (!range || range.outerStart > pageSkip) {\n                    break;\n                }\n\n                if (range.outerEnd != range.end) {\n                    mismatch = range.outerEnd - range.end;\n                }\n                i++;\n            }\n\n            return mismatch;\n        },\n\n        _mergeGroups: function(data, range, skip, take) {\n            if (this._isServerGrouped()) {\n                var temp = range.toJSON(),\n                    prevGroup;\n\n                if (data.length) {\n                    prevGroup = data[data.length - 1];\n                }\n\n                mergeGroups(prevGroup, temp, skip, take);\n\n                return data.concat(temp);\n            }\n            return data.concat(range.slice(skip, take));\n        },\n\n        _processRangeData: function(data, skip, take, pageSkip, size, eventData) {\n            var that = this;\n\n            that._pending = undefined;\n\n            that._skip = skip > that.skip() && !that._omitPrefetch ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n\n            that._currentRangeStart = skip;\n\n            that._take = take;\n\n            var paging = that.options.serverPaging;\n            var sorting = that.options.serverSorting;\n            var filtering = that.options.serverFiltering;\n            var aggregates = that.options.serverAggregates;\n            try {\n                that.options.serverPaging = true;\n                if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                    that.options.serverSorting = true;\n                }\n                that.options.serverFiltering = true;\n                that.options.serverPaging = true;\n                that.options.serverAggregates = true;\n\n                if (paging) {\n                    that._detachObservableParents();\n                    that._data = data = that._observe(data);\n                }\n                that._process(data, eventData);\n            } finally {\n                that.options.serverPaging = paging;\n                that.options.serverSorting = sorting;\n                that.options.serverFiltering = filtering;\n                that.options.serverAggregates = aggregates;\n            }\n        },\n\n        skip: function() {\n            var that = this;\n\n            if (that._skip === undefined) {\n                return (that._page !== undefined ? (that._page  - 1) * (that.take() || 1) : undefined);\n            }\n            return that._skip;\n        },\n\n        currentRangeStart: function() {\n            return this._currentRangeStart || 0;\n        },\n\n        take: function() {\n            return this._take || this._pageSize;\n        },\n\n        _prefetchSuccessHandler: function (skip, size, callback, force) {\n            var that = this;\n            var timestamp = that._timeStamp();\n\n            return function(data) {\n                var found = false,\n                    range = { start: skip, end: size, data: [], timestamp: that._timeStamp() },\n                    idx,\n                    length,\n                    temp;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n                data = that.reader.parse(data);\n\n                temp = that._readData(data);\n\n                if (temp.length) {\n                    for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                        if (that._ranges[idx].start === skip) {\n                            found = true;\n                            range = that._ranges[idx];\n\n                            if (!that._isGroupPaged()) {\n                                range.pristineData = temp;\n                                range.data = that._observe(temp);\n                                range.end = range.start + that._flatData(range.data, true).length;\n                                that._sortRanges();\n                            }\n\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        that._addRange(that._observe(temp), skip);\n                    }\n                }\n\n                that._total = that.reader.total(data);\n\n                if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                    if (callback && temp.length) {\n                        callback();\n                    } else {\n                        that.trigger(CHANGE, {});\n                    }\n                }\n            };\n        },\n\n        prefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n\n            if ((that._isGroupPaged() && !that._isServerGrouped() && that._groupRangeExists(skip, size))) {\n                if (callback) {\n                    callback();\n                }\n                return;\n            }\n\n            if ((that._isServerGroupPaged() && !that._groupRangeExists(skip, size)) || !that._rangeExists(skip, size)) {\n                clearTimeout(that._timeout);\n\n                that._timeout = setTimeout(function() {\n                    that._queueRequest(options, function() {\n                        if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                            if (that._omitPrefetch) {\n                                that.trigger(PROGRESS);\n                            }\n                            that.transport.read({\n                                data: that._params(options),\n                                success: that._prefetchSuccessHandler(skip, size, callback),\n                                error: function() {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                }\n                            });\n                        } else {\n                            that._dequeueRequest();\n                        }\n                    });\n                }, 100);\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _multiplePrefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n            if (!that._rangeExists(skip, size)) {\n                if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                    that.transport.read({\n                        data: that._params(options),\n                        success: that._prefetchSuccessHandler(skip, size, callback, true)\n                    });\n                }\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _adjustPageSkip: function (start, take) {\n            var that = this;\n            var prevRange = that._getPrevRange(start);\n            var result;\n            var total = that.total();\n            var mismatch;\n\n            if (prevRange) {\n                mismatch = that._getRangesMismatch(start);\n\n                if (!mismatch) {\n                    return start;\n                }\n                start -= mismatch;\n            }\n            result = math.max(math.floor(start / take), 0) * take;\n\n            if (result > total) {\n                while (true) {\n                    result -= take;\n                    if (result < total) {\n                        break;\n                    }\n                }\n            }\n            return result;\n        },\n\n        _getNextRange: function (end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= end && ranges[idx].end >= end) {\n                    return ranges[idx];\n                }\n            }\n        },\n\n        _getPrevRange: function (start) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                range,\n                length = ranges.length;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n                if (ranges[idx].outerStart <= start) {\n                    range = ranges[idx];\n                    break;\n                }\n\n            }\n\n            return range;\n        },\n\n        _rangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _groupRangeExists: function (start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length,\n                availableItemsCount = 0,\n                total = that.groupsTotal(true);\n\n            if (end > total && !that._isServerGrouped()) {\n                end = total;\n            }\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                var range = ranges[idx];\n                if (range.outerStart <= start && range.outerEnd >= start) {\n                    availableItemsCount += range.outerEnd - start;\n                } else if (range.outerStart <= end && range.outerEnd >= end) {\n                    availableItemsCount += end - range.outerStart;\n                }\n            }\n\n            return availableItemsCount >= end - start;\n        },\n\n        _getCurrentRangeSpan: function() {\n            var that = this;\n            var ranges = that._ranges;\n            var start = that.currentRangeStart();\n            var end = start + (that.take() || 0);\n            var rangeSpan = [];\n            var range;\n            var idx;\n            var length = ranges.length;\n\n            for (idx = 0; idx < length; idx++) {\n                range = ranges[idx];\n\n                if ((range.start <= start && range.end >= start) || (range.start >= start && range.start <= end)) {\n                    rangeSpan.push(range);\n                }\n            }\n\n            return rangeSpan;\n        },\n\n        _removeModelFromRanges: function(model) {\n            var that = this;\n            var range;\n\n            for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                range = this._ranges[idx];\n\n                that._removeModelFromRange(range, model);\n            }\n\n            that._updateRangesLength();\n        },\n\n        _removeModelFromRange: function(range, model) {\n            this._eachItem(range.data, function(data) {\n                if (!data) {\n                    return;\n                }\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data[idx];\n\n                    if (dataItem.uid && dataItem.uid == model.uid) {\n                        [].splice.call(data, idx, 1);\n                        break;\n                    }\n                }\n            });\n        },\n\n        _insertModelInRange: function(index, model) {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n\n                if (range.start <= index && range.end >= index) {\n                    if (!that._getByUid(model.uid, range.data)) {\n                        if (that._isServerGrouped()) {\n                            range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                        } else {\n                            range.data.splice(index, 0, model);\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            that._updateRangesLength();\n        },\n\n        _updateRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchFound = false;\n            var mismatchLength = 0;\n            var lengthDifference = 0;\n            var rangeLength;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? range.data.length : that._flatData(range.data, true).length;\n                lengthDifference = rangeLength - math.abs(range.end - range.start);\n\n                if (!mismatchFound && lengthDifference !== 0) {\n                    mismatchFound = true;\n                    mismatchLength = lengthDifference;\n                    range.end += mismatchLength;\n                    continue;\n                }\n\n                if (mismatchFound) {\n                    range.start += mismatchLength;\n                    range.end += mismatchLength;\n                }\n            }\n        },\n\n        _updateOuterRangesLength: function () {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchLength = 0;\n            var range;\n            var i;\n            var prevRange;\n            var rangeLength;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? that._calculateGroupsTotal(range.data, true, \"items\", true) : that._flatData(range.data, true).length;\n\n                if (prevRange) {\n                    if (prevRange.end != range.start) {\n                        mismatchLength = range.start - prevRange.end;\n                    }\n                    range.outerStart = prevRange.outerEnd + mismatchLength;\n                    mismatchLength = 0;\n                } else {\n                    range.outerStart = range.start;\n                }\n\n                range.outerEnd = range.outerStart + rangeLength;\n                prevRange = range;\n            }\n        }\n    });\n\n    var Transport = {};\n\n    Transport.create = function(options, data, dataSource) {\n        var transport,\n            transportOptions = options.transport ? $.extend({}, options.transport) : null;\n\n        if (transportOptions) {\n            transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n\n            if (options.type === \"jsdo\") {\n                transportOptions.dataSource = dataSource;\n            }\n\n            if (options.type) {\n                kendo.data.transports = kendo.data.transports || {};\n                kendo.data.schemas = kendo.data.schemas || {};\n\n                if (!kendo.data.transports[options.type]) {\n                    kendo.logToConsole(\"Unknown DataSource transport type '\" + options.type + \"'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.\", \"warn\");\n                } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                    transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                } else {\n                    transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                }\n\n                options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n            }\n\n            if (!transport) {\n                transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n            }\n        } else {\n            transport = new LocalTransport({ data: options.data || [] });\n        }\n        return transport;\n    };\n\n    DataSource.create = function(options) {\n        if (isArray(options) || options instanceof ObservableArray) {\n           options = { data: options };\n        }\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            table = dataSource.table,\n            select = dataSource.select,\n            idx,\n            length,\n            model = {},\n            field;\n\n        if (!data && fields && !dataSource.transport) {\n            if (table) {\n                data = inferTable(table, fields);\n            } else if (select) {\n                data = inferSelect(select, fields);\n\n                if (dataSource.group === undefined && data[0] && data[0].optgroup !== undefined) {\n                    dataSource.group = \"optgroup\";\n                }\n            }\n        }\n\n        if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n            for (idx = 0, length = fields.length; idx < length; idx++) {\n                field = fields[idx];\n                if (field.type) {\n                    model[field.field] = field;\n                }\n            }\n\n            if (!isEmptyObject(model)) {\n                dataSource.schema = extend(true, dataSource.schema, { model:  { fields: model } });\n            }\n        }\n\n        dataSource.data = data;\n\n        select = null;\n        dataSource.select = null;\n        table = null;\n        dataSource.table = null;\n\n        return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n    };\n\n    function inferSelect(select, fields) {\n        select = $(select)[0];\n        var options = select.options;\n        var firstField = fields[0];\n        var secondField = fields[1];\n\n        var data = [];\n        var idx, length;\n        var optgroup;\n        var option;\n        var record;\n        var value;\n\n        for (idx = 0, length = options.length; idx < length; idx++) {\n            record = {};\n            option = options[idx];\n            optgroup = option.parentNode;\n\n            if (optgroup === select) {\n                optgroup = null;\n            }\n\n            if (option.disabled || (optgroup && optgroup.disabled)) {\n                continue;\n            }\n\n            if (optgroup) {\n                record.optgroup = optgroup.label;\n            }\n\n            record[firstField.field] = option.text;\n\n            value = option.attributes.value;\n\n            if (value && value.specified) {\n                value = option.value;\n            } else {\n                value = option.text;\n            }\n\n            record[secondField.field] = value;\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    function inferTable(table, fields) {\n        var tbody = $(table)[0].tBodies[0],\n        rows = tbody ? tbody.rows : [],\n        idx,\n        length,\n        fieldIndex,\n        fieldCount = fields.length,\n        data = [],\n        cells,\n        record,\n        cell,\n        empty;\n\n        for (idx = 0, length = rows.length; idx < length; idx++) {\n            record = {};\n            empty = true;\n            cells = rows[idx].cells;\n\n            for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                cell = cells[fieldIndex];\n                if(cell.nodeName.toLowerCase() !== \"th\") {\n                    empty = false;\n                    record[fields[fieldIndex].field] = cell.innerHTML;\n                }\n            }\n            if(!empty) {\n                data.push(record);\n            }\n        }\n\n        return data;\n    }\n\n    var Node = Model.define({\n        idField: \"id\",\n\n        init: function(value) {\n            var that = this,\n                hasChildren = that.hasChildren || value && value.hasChildren,\n                childrenField = \"items\",\n                childrenOptions = {};\n\n            kendo.data.Model.fn.init.call(that, value);\n\n            if (typeof that.children === STRING) {\n                childrenField = that.children;\n            }\n\n            childrenOptions = {\n                schema: {\n                    data: childrenField,\n                    model: {\n                        hasChildren: hasChildren,\n                        id: that.idField,\n                        fields: that.fields\n                    }\n                }\n            };\n\n            if (typeof that.children !== STRING) {\n                extend(childrenOptions, that.children);\n            }\n\n            childrenOptions.data = value;\n\n            if (!hasChildren) {\n                hasChildren = childrenOptions.schema.data;\n            }\n\n            if (typeof hasChildren === STRING) {\n                hasChildren = kendo.getter(hasChildren);\n            }\n\n            if (isFunction(hasChildren)) {\n                var hasChildrenObject = hasChildren.call(that, that);\n\n                if(hasChildrenObject && hasChildrenObject.length === 0){\n                    that.hasChildren = false;\n                } else{\n                    that.hasChildren = !!hasChildrenObject;\n                }\n            }\n\n            that._childrenOptions = childrenOptions;\n\n            if (that.hasChildren) {\n                that._initChildren();\n            }\n\n            that._loaded = !!(value && value._loaded);\n        },\n\n        _initChildren: function() {\n            var that = this;\n            var children, transport, parameterMap;\n\n            if (!(that.children instanceof HierarchicalDataSource)) {\n                children = that.children = new HierarchicalDataSource(that._childrenOptions);\n\n                transport = children.transport;\n                parameterMap = transport.parameterMap;\n\n                transport.parameterMap = function(data, type) {\n                    data[that.idField || \"id\"] = that.id;\n\n                    if (parameterMap) {\n                        data = parameterMap.call(that, data, type);\n                    }\n\n                    return data;\n                };\n\n                children.parent = function(){\n                    return that;\n                };\n\n                children.bind(CHANGE, function(e){\n                    e.node = e.node || that;\n                    that.trigger(CHANGE, e);\n                });\n\n                children.bind(ERROR, function(e){\n                    var collection = that.parent();\n\n                    if (collection) {\n                        e.node = e.node || that;\n                        collection.trigger(ERROR, e);\n                    }\n                });\n\n                that._updateChildrenField();\n            }\n        },\n\n        append: function(model) {\n            this._initChildren();\n            this.loaded(true);\n            this.children.add(model);\n        },\n\n        hasChildren: false,\n\n        level: function() {\n            var parentNode = this.parentNode(),\n                level = 0;\n\n            while (parentNode && parentNode.parentNode) {\n                level++;\n                parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n            }\n\n            return level;\n        },\n\n        _updateChildrenField: function() {\n            var fieldName = this._childrenOptions.schema.data;\n\n            this[fieldName || \"items\"] = this.children.data();\n        },\n\n        _childrenLoaded: function() {\n            this._loaded = true;\n\n            this._updateChildrenField();\n        },\n\n        load: function() {\n            var options = {};\n            var method = \"_query\";\n            var children, promise;\n\n            if (this.hasChildren) {\n                this._initChildren();\n\n                children = this.children;\n\n                options[this.idField || \"id\"] = this.id;\n\n                if (!this._loaded) {\n                    children._data = undefined;\n                    method = \"read\";\n                }\n\n                children.one(CHANGE, this._childrenLoaded.bind(this));\n\n                if(this._matchFilter){\n                    options.filter = { field: '_matchFilter', operator: 'eq', value: true };\n                }\n\n                promise = children[method](options);\n            } else {\n                this.loaded(true);\n            }\n\n            return promise || $.Deferred().resolve().promise();\n        },\n\n        parentNode: function() {\n            var array = this.parent();\n\n            return array.parent();\n        },\n\n        loaded: function(value) {\n            if (value !== undefined) {\n                this._loaded = value;\n            } else {\n                return this._loaded;\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return Model.fn.shouldSerialize.call(this, field) &&\n                    field !== \"children\" &&\n                    field !== \"_loaded\" &&\n                    field !== \"hasChildren\" &&\n                    field !== \"_childrenOptions\";\n        }\n    });\n\n    function dataMethod(name) {\n        return function() {\n            var data = this._data,\n                result = DataSource.fn[name].apply(this, slice.call(arguments));\n\n            if (this._data != data) {\n                this._attachBubbleHandlers();\n            }\n\n            return result;\n        };\n    }\n\n    var HierarchicalDataSource = DataSource.extend({\n        init: function(options) {\n            var node = Node.define({\n                children: options\n            });\n\n            if(options.filter && !options.serverFiltering){\n                this._hierarchicalFilter = options.filter;\n                options.filter = null;\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, { schema: { modelBase: node, model: node } }, options));\n\n            this._attachBubbleHandlers();\n        },\n\n        _attachBubbleHandlers: function() {\n            var that = this;\n\n            that._data.bind(ERROR, function(e) {\n                that.trigger(ERROR, e);\n            });\n        },\n\n        read: function(data) {\n            var result = DataSource.fn.read.call(this, data);\n\n            if(this._hierarchicalFilter){\n                if(this._data && this._data.length > 0){\n                    this.filter(this._hierarchicalFilter);\n                }else{\n                    this.options.filter = this._hierarchicalFilter;\n                    this._filter = normalizeFilter(this.options.filter);\n                    this._hierarchicalFilter = null;\n                }\n            }\n\n            return result;\n        },\n\n        remove: function(node){\n            var parentNode = node.parentNode(),\n                dataSource = this,\n                result;\n\n            if (parentNode && parentNode._initChildren) {\n                dataSource = parentNode.children;\n            }\n\n            result = DataSource.fn.remove.call(dataSource, node);\n\n            if (parentNode && !dataSource.data().length) {\n                parentNode.hasChildren = false;\n            }\n\n            return result;\n        },\n\n        success: dataMethod(\"success\"),\n\n        data: dataMethod(\"data\"),\n\n        insert: function(index, model) {\n            var parentNode = this.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            return DataSource.fn.insert.call(this, index, model);\n        },\n\n        filter: function(val) {\n            if (val === undefined) {\n                 return this._filter;\n            }\n\n            if(!this.options.serverFiltering && this._markHierarchicalQuery(val)){\n                val = { logic: \"or\", filters: [val, {field:'_matchFilter', operator: 'equals', value: true }]};\n            }\n\n            this.trigger(\"reset\");\n            this._query({ filter: val, page: 1 });\n        },\n\n        _markHierarchicalQuery: function(expressions){\n            var compiled;\n            var predicate;\n            var fields;\n            var operators;\n            var filter;\n            var accentFoldingFiltering = this.options.accentFoldingFiltering;\n\n            expressions = accentFoldingFiltering ? $.extend({}, normalizeFilter(expressions), { accentFoldingFiltering: accentFoldingFiltering}) : normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                this._updateHierarchicalFilter(function(){return true;});\n                return false;\n            }\n\n            compiled = Query.filterExpr(expressions);\n            fields = compiled.fields;\n            operators = compiled.operators;\n\n            predicate = filter = new Function(\"d, __f, __o\", \"return \" + compiled.expression);\n\n            if (fields.length || operators.length) {\n                filter = function(d) {\n                    return predicate(d, fields, operators);\n                };\n            }\n\n            this._updateHierarchicalFilter(filter);\n            return true;\n        },\n\n         _updateHierarchicalFilter: function(filter){\n            var current;\n            var data = this._data;\n            var result = false;\n\n            for (var idx = 0; idx < data.length; idx++) {\n                 current = data[idx];\n\n                 if(current.hasChildren){\n                     current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                    if(!current._matchFilter){\n                        current._matchFilter = filter(current);\n                    }\n                }else{\n                    current._matchFilter = filter(current);\n                }\n\n                if(current._matchFilter){\n                    result = true;\n                }\n            }\n            return result;\n        },\n\n        _find: function(method, value) {\n            var idx, length, node, children;\n            var data = this._data;\n\n            if (!data) {\n                return;\n            }\n\n            node = DataSource.fn[method].call(this, value);\n\n            if (node) {\n                return node;\n            }\n\n            data = this._flatData(this._data);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                children = data[idx].children;\n\n                if (!(children instanceof HierarchicalDataSource)) {\n                    continue;\n                }\n\n                node = children[method](value);\n\n                if (node) {\n                    return node;\n                }\n            }\n        },\n\n        get: function(id) {\n            return this._find(\"get\", id);\n        },\n\n        getByUid: function(uid) {\n            return this._find(\"getByUid\", uid);\n        }\n    });\n\n    function inferList(list, fields) {\n        var items = $(list).children(),\n            idx,\n            length,\n            data = [],\n            record,\n            textField = fields[0].field,\n            urlField = fields[1] && fields[1].field,\n            spriteCssClassField = fields[2] && fields[2].field,\n            imageUrlField = fields[3] && fields[3].field,\n            item,\n            id,\n            textChild,\n            className,\n            children;\n\n        function elements(collection, tagName) {\n            return collection.filter(tagName).add(collection.find(tagName));\n        }\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            record = { _loaded: true };\n            item = items.eq(idx);\n\n            textChild = item[0].firstChild;\n            children = item.children();\n            list = children.filter(\"ul\");\n            children = children.filter(\":not(ul)\");\n\n            id = item.attr(\"data-id\");\n\n            if (id) {\n                record.id = id;\n            }\n\n            if (textChild) {\n                record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n            }\n\n            if (urlField) {\n                record[urlField] = elements(children, \"a\").attr(\"href\");\n            }\n\n            if (imageUrlField) {\n                record[imageUrlField] = elements(children, \"img\").attr(\"src\");\n            }\n\n            if (spriteCssClassField) {\n                className = elements(children, \".k-sprite\").prop(\"className\");\n                record[spriteCssClassField] = className && kendo.trim(className.replace(\"k-sprite\", \"\"));\n            }\n\n            if (list.length) {\n                record.items = inferList(list.eq(0), fields);\n            }\n\n            if (item.attr(\"data-hasChildren\") == \"true\") {\n                record.hasChildren = true;\n            }\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    HierarchicalDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            list = dataSource.list;\n\n        if (data && data._dataSource) {\n            return data._dataSource;\n        }\n\n        if (!data && fields && !dataSource.transport) {\n            if (list) {\n                data = inferList(list, fields);\n            }\n        }\n\n        dataSource.data = data;\n\n        return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n    };\n\n    var Buffer = kendo.Observable.extend({\n        init: function(dataSource, viewSize, disablePrefetch) {\n            kendo.Observable.fn.init.call(this);\n\n            this._prefetching = false;\n            this.dataSource = dataSource;\n            this.prefetch = !disablePrefetch;\n\n            var buffer = this;\n\n            dataSource.bind(\"change\", function() {\n                buffer._change();\n            });\n\n            dataSource.bind(\"reset\", function() {\n                buffer._reset();\n            });\n\n            this._syncWithDataSource();\n\n            this.setViewSize(viewSize);\n        },\n\n        setViewSize: function(viewSize) {\n            this.viewSize = viewSize;\n            this._recalculate();\n        },\n\n        at: function(index)  {\n            var pageSize = this.pageSize,\n                itemPresent = true;\n\n            if (index >= this.total()) {\n                this.trigger(\"endreached\", {index: index });\n                return null;\n            }\n\n            if (!this.useRanges) {\n               return this.dataSource.view()[index];\n            }\n            if (this.useRanges) {\n                // out of range request\n                if (index < this.dataOffset || index >= this.skip + pageSize) {\n                    itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                }\n\n                // prefetch\n                if (index === this.prefetchThreshold) {\n                    this._prefetch();\n                }\n\n                // mid-range jump - prefetchThreshold and nextPageThreshold may be equal, do not change to else if\n                if (index === this.midPageThreshold) {\n                    this.range(this.nextMidRange, true);\n                }\n                // next range jump\n                else if (index === this.nextPageThreshold) {\n                    this.range(this.nextFullRange);\n                }\n                // pull-back\n                else if (index === this.pullBackThreshold) {\n                    if (this.offset === this.skip) { // from full range to mid range\n                        this.range(this.previousMidRange);\n                    } else { // from mid range to full range\n                        this.range(this.previousFullRange);\n                    }\n                }\n\n                if (itemPresent) {\n                    return this.dataSource.at(index - this.dataOffset);\n                } else {\n                    this.trigger(\"endreached\", { index: index });\n                    return null;\n                }\n            }\n        },\n\n        indexOf: function(item) {\n            return this.dataSource.data().indexOf(item) + this.dataOffset;\n        },\n\n        total: function() {\n            return parseInt(this.dataSource.total(), 10);\n        },\n\n        next: function() {\n            var buffer = this,\n                pageSize = buffer.pageSize,\n                offset = buffer.skip - buffer.viewSize + pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n\n            this.offset = offset;\n            this.dataSource.prefetch(pageSkip, pageSize, function() {\n                buffer._goToRange(offset, true);\n            });\n        },\n\n        range: function(offset, nextRange) {\n            if (this.offset === offset) {\n                return true;\n            }\n\n            var buffer = this,\n                pageSize = this.pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize,\n                dataSource = this.dataSource;\n\n            if (nextRange) {\n                pageSkip += pageSize;\n            }\n\n            if (dataSource.inRange(offset, pageSize)) {\n                this.offset = offset;\n                this._recalculate();\n                this._goToRange(offset);\n                return true;\n            } else if (this.prefetch) {\n                dataSource.prefetch(pageSkip, pageSize, function() {\n                    buffer.offset = offset;\n                    buffer._recalculate();\n                    buffer._goToRange(offset, true);\n                });\n                return false;\n            }\n\n            return true;\n        },\n\n        syncDataSource: function() {\n            var offset = this.offset;\n            this.offset = null;\n            this.range(offset);\n        },\n\n        destroy: function() {\n            this.unbind();\n        },\n\n        _prefetch: function() {\n            var buffer = this,\n                pageSize = this.pageSize,\n                prefetchOffset = this.skip + pageSize,\n                dataSource = this.dataSource;\n\n            if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                this._prefetching = true;\n                this.trigger(\"prefetching\", { skip: prefetchOffset, take: pageSize });\n\n                dataSource.prefetch(prefetchOffset, pageSize, function() {\n                    buffer._prefetching = false;\n                    buffer.trigger(\"prefetched\", { skip: prefetchOffset, take: pageSize });\n                });\n            }\n        },\n\n        _goToRange: function(offset, expanding) {\n            if (this.offset !== offset) {\n                return;\n            }\n\n            this.dataOffset = offset;\n            this._expanding = expanding;\n            this.dataSource.range(offset, this.pageSize);\n            this.dataSource.enableRequestsInProgress();\n        },\n\n        _reset: function() {\n            this._syncPending = true;\n        },\n\n        _change: function() {\n            var dataSource = this.dataSource;\n\n            this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n\n            if (this._syncPending) {\n                this._syncWithDataSource();\n                this._recalculate();\n                this._syncPending = false;\n                this.trigger(\"reset\", { offset: this.offset });\n            }\n\n            this.trigger(\"resize\");\n\n            if (this._expanding) {\n                this.trigger(\"expand\");\n            }\n\n            delete this._expanding;\n        },\n\n        _syncWithDataSource: function() {\n            var dataSource = this.dataSource;\n\n            this._firstItemUid = dataSource.firstItemUid();\n            this.dataOffset = this.offset = dataSource.skip() || 0;\n            this.pageSize = dataSource.pageSize();\n            this.useRanges = dataSource.options.serverPaging;\n        },\n\n        _recalculate: function() {\n            var pageSize = this.pageSize,\n                offset = this.offset,\n                viewSize = this.viewSize,\n                skip = Math.ceil(offset / pageSize) * pageSize;\n\n            this.skip = skip;\n            this.midPageThreshold = skip + pageSize - 1;\n            this.nextPageThreshold = skip + viewSize - 1;\n            this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n            this.pullBackThreshold = this.offset - 1;\n\n            this.nextMidRange = skip + pageSize - viewSize;\n            this.nextFullRange = skip;\n            this.previousMidRange = offset - viewSize;\n            this.previousFullRange = skip - pageSize;\n        }\n    });\n\n    var BatchBuffer = kendo.Observable.extend({\n        init: function(dataSource, batchSize) {\n            var batchBuffer = this;\n\n            kendo.Observable.fn.init.call(batchBuffer);\n\n            this.dataSource = dataSource;\n            this.batchSize = batchSize;\n            this._total = 0;\n\n            this.buffer = new Buffer(dataSource, batchSize * 3);\n\n            this.buffer.bind({\n                \"endreached\": function (e) {\n                    batchBuffer.trigger(\"endreached\", { index: e.index });\n                },\n                \"prefetching\": function (e) {\n                    batchBuffer.trigger(\"prefetching\", { skip: e.skip, take: e.take });\n                },\n                \"prefetched\": function (e) {\n                    batchBuffer.trigger(\"prefetched\", { skip: e.skip, take: e.take });\n                },\n                \"reset\": function () {\n                    batchBuffer._total = 0;\n                    batchBuffer.trigger(\"reset\");\n                },\n                \"resize\": function () {\n                    batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                    batchBuffer.trigger(\"resize\", { total: batchBuffer.total(), offset: this.offset });\n                }\n            });\n        },\n\n        syncDataSource: function() {\n            this.buffer.syncDataSource();\n        },\n\n        at: function(index) {\n            var buffer = this.buffer,\n                skip = index * this.batchSize,\n                take = this.batchSize,\n                view = [],\n                item;\n\n            if (buffer.offset > skip) {\n                buffer.at(buffer.offset - 1);\n            }\n\n            for (var i = 0; i < take; i++) {\n                item = buffer.at(skip + i);\n\n                if (item === null) {\n                    break;\n                }\n\n                view.push(item);\n            }\n\n            return view;\n        },\n\n        total: function() {\n            return this._total;\n        },\n\n        destroy: function() {\n            this.buffer.destroy();\n            this.unbind();\n        }\n    });\n\n    extend(true, kendo.data, {\n        readers: {\n            json: DataReader\n        },\n        Query: Query,\n        DataSource: DataSource,\n        HierarchicalDataSource: HierarchicalDataSource,\n        Node: Node,\n        Comparer: Comparer,\n        ObservableObject: ObservableObject,\n        ObservableArray: ObservableArray,\n        LazyObservableArray: LazyObservableArray,\n        LocalTransport: LocalTransport,\n        RemoteTransport: RemoteTransport,\n        Cache: Cache,\n        DataReader: DataReader,\n        Model: Model,\n        Buffer: Buffer,\n        BatchBuffer: BatchBuffer\n    });\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","features","$","window","kendo","jQuery","undefined","extend","isPlainObject","isEmptyObject","isArray","Array","grep","ajax","map","each","noop","isFunction","Observable","Class","STRING","FUNCTION","ASCENDING","CREATE","READ","UPDATE","DESTROY","CHANGE","SYNC","GET","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","crud","identity","o","getter","stringify","math","Math","push","join","pop","splice","shift","slice","unshift","toString","stableSort","support","dateRegExp","objectKeys","ObservableArray","init","array","type","that","this","ObservableObject","fn","call","length","wrapAll","at","index","toJSON","serializeFunctions","idx","value","json","parent","source","target","wrap","object","observable","Model","bind","e","trigger","field","node","items","action","arguments","result","apply","omitChangeEvent","sort","howMany","item","i","len","concat","children","unbind","indexOf","forEach","callback","thisArg","context","reduce","reduceRight","filter","find","every","some","remove","empty","Symbol","iterator","prototype","LazyObservableArray","data","events","parentFn","_events","_parent","eventHandler","prefix","event","key","_notifyChange","ownKeys","ignoreObjectKeys","props","keys","filteredObjectKeys","Object","getOwnPropertyNames","prop","getPrototypeOf","member","_handlers","getTime","charAt","uid","guid","shouldSerialize","hasOwnProperty","f","get","_set","composite","paths","split","path","obj","set","setter","isSetPrevented","current","change","isObservableArray","isDataSource","DataSource","equal","x","y","xtype","ytype","parsers","number","toLowerCase","parseFloat","date","parseDate","boolean","string","default","defaultValues","Date","getFieldByName","fieldName","defaults","_initializers","dirty","dirtyFields","idField","_defaultId","_parse","fields","parse","editable","accept","isNew","Comparer","base","options","model","proto","originalName","functionFields","nullable","defaultValue","selector","compare","a","b","localeCompare","create","dir","combine","comparers","StableComparer","asc","valueA","valueB","__position","desc","operators","quote","str","replace","JSON","textOp","impl","ignore","accentFoldingFiltering","toLocaleLowerCase","operator","op","exec","getMatchRegexp","pattern","rx","esc","ch","eq","neq","gt","gte","lt","lte","startswith","doesnotstartwith","endswith","n","doesnotendwith","contains","doesnotcontain","matches","substring","doesnotmatch","isempty","isnotempty","isnull","isnotnull","isnullorempty","isnotnullorempty","Query","normalizeSort","descriptor","descriptors","d","sortFields","sorts","sortObject","filterExpr","expression","expressions","logic","and","or","expr","fieldFunctions","operatorFunctions","filters","match","ignoreCase","operatorMap","==","equals","isequalto","equalto","!=","ne","notequals","isnotequalto","notequalto","notequal","<","islessthan","lessthan","less","<=","le","islessthanorequalto","lessthanequal",">","isgreaterthan","greaterthan","greater",">=","isgreaterthanorequalto","greaterthanequal","ge","notsubstringof","normalizeOperator","normalizeFilter","compareDescriptor","f1","f2","normalizeDescriptor","fieldComparer","compareFilters","expr1","expr2","filters1","filters2","normalizeAggregate","normalizeGroup","skipItemSorting","aggregates","normalizeGroupWithoutCompare","anyGroupDescriptorHasCompare","groupDescriptors","groupValueComparer","calculateAggregate","accumulator","state","aggr","functionName","aggregate","functions","accessor","toArray","range","count","skip","take","select","order","inPlace","orderBy","orderByDescending","comparer","compiled","predicate","Function","group","allData","groupPaging","groupAllData","hasSubgroups","itemCount","subgroupCount","groupBy","sorted","_sortForGrouping","groupValue","currentValue","_sortGroups","groups","sum","isNumber","average","max","isDate","min","val","isNaN","process","customGroupSort","query","groupDescriptorsWithoutCompare","normalizedSort","groupDescriptorsWithoutSort","total","filterCallback","flatGroups","groupDescriptor","LocalTransport","read","success","update","destroy","RemoteTransport","parameterMap","url","cache","Cache","add","submit","option","setup","error","parameters","operation","_store","clear","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","setters","convertRecords","convertGroup","wrapDataAccess","originalFunction","converter","wrapDataAccessBase","store","inmemory","DataReader","schema","modelBase","dataFunction","_dataAccessFunction","groupsFunction","serializeFunction","serialize","serializeGetters","fromName","from","_wrapDataAccessBase","errors","fillLastGroup","originalGroup","newGroup","currOriginal","currentNew","mergeGroups","dest","indexFunction","groupsLength","indexFn","groupIndex","itemIndex","flattenGroups","wrapGroupItems","eachGroupItems","func","replaceInRanges","ranges","replaceInRange","replaceWithObservable","view","serverGrouping","viewIndex","removeModel","dataItem","indexOfPristineModel","indexOfModel","fieldNameFromModel","convertFilterDescriptorsField","convertDescriptorsField","_map","_prefetch","_data","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","_sortFields","_filter","_group","_aggregate","_total","_groupPaging","_groupsState","_shouldDetachObservableParents","transport","Transport","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","offlineStorage","_storage","getItem","localStorage","setItem","reader","readers","_detachObservableParents","_observe","_online","serverSorting","serverPaging","serverFiltering","serverAggregates","batch","inPlaceSort","clone","online","sync","Deferred","resolve","promise","offlineData","_isServerGrouped","_isServerGroupPaged","_isGroupPaged","_push","_readData","_flatData","useRanges","getByUid","_getByUid","dataItems","_storeData","_addRange","_process","_observeView","flatView","insert","_createNewModel","_wrapInEmptyGroup","_insertModelInRange","pushInsert","rangeSpan","_getCurrentRangeSpan","pushed","autoSync","pristine","last","pristineData","_updatePristineForModel","_removeItems","removePristine","shouldRemovePristine","destroyed","found","_eachItem","_removePristineForModel","pushMove","_moveItems","moved","hasGroups","_removeModelFromRanges","created","updated","promises","_sendSubmit","_send","when","then","_accept","_syncEnd","_change","cancelChanges","_cancelModel","_changesCanceled","_markOfflineUpdatesAsDirty","__state__","hasChanges","models","response","serverGroup","_handleCustomErrors","values","_executeOnPristineForModel","deepExtend","_eachPristineItem","_pristineForModel","_modelCanceled","_submit","status","reject","deferred","_promise","method","converted","params","_params","_queueRequest","isPrevented","args","_dequeueRequest","_readAggregates","replaceSubset","_serverGroupsTotal","_aggregateResult","itemIds","_skip","endless","j","_changeHandler","updatePristine","start","end","timestamp","_timeStamp","outerStart","outerEnd","_sortRanges","_groupsFlat","_appendToGroupsFlat","_updateOuterRangesLength","_getGroupByUid","xhr","errorThrown","_requestInProgress","_pending","_shouldWrap","arrayType","_updateTotalForAction","parseInt","handler","first","_calculateAggregates","_take","currentRangeStart","_clearEmptyGroups","_queryProcess","dataToAggregate","_setView","_setFilterTotal","_mergeState","_currentRangeStart","remote","moreItemsCount","_hasExpandedSubGroups","_findGroupedRange","parents","itemsLength","groupCount","itemsToSkip","taken","_fetchGroupItems","_fetchingGroupItems","skipped","includeParents","excludeHeader","currentItems","_expandedSubGroupItemsCount","includeCurrentItems","subGroup","endSpecified","temp","groupItemsSkip","firstItem","lastItem","groupItemCount","expandedSubGroupItemsCount","getGroupItems","notFetched","floor","round","subgroups","_composeItemsFilter","findSubgroups","clearTimeout","_timeout","setTimeout","_groupItemsSuccessHandler","totalField","totalCount","_updateRangePristineData","countAdded","_currentRequestTimeStamp","_skipRequestsInProgress","indexOfCurrentGroup","g","rangesLength","currentGroup","dataLength","indexes","currIdx","_containsSubGroup","_cloneGroup","subgroup","currentSubGroup","filterTotal","setDefaultValue","fetch","_query","done","next","totalPages","prev","_pageableQueryOptions","getGroupsFlat","groupsTotal","includeExpanded","_calculateGroupsTotal","itemsField","ignoreState","_groupsTotal","countGroupRange","_emptyAggregates","ceil","inRange","_findRange","lastRange","firstItemUid","enableRequestsInProgress","pageSkip","size","_processRangeData","_originalPageSkip","_originalSize","_adjustPageSkip","_groupRangeExists","_rangeExists","prefetch","skipIdx","takeIdx","startIndex","endIndex","rangeData","rangeEnd","processed","flatData","groupMapOptions","prevRangeEnd","isGroupPaged","startField","endField","currentDataLength","_mergeGroups","_getRangesMismatch","mismatch","prevGroup","eventData","_omitPrefetch","paging","sorting","filtering","_prefetchSuccessHandler","force","_multiplePrefetch","prevRange","_getPrevRange","_getNextRange","availableItemsCount","_removeModelFromRange","_updateRangesLength","mismatchFound","mismatchLength","lengthDifference","rangeLength","abs","inferSelect","firstField","secondField","optgroup","parentNode","disabled","label","text","attributes","specified","inferTable","table","tbody","tBodies","rows","fieldIndex","fieldCount","cells","cell","nodeName","innerHTML","dataSource","transportOptions","transports","schemas","logToConsole","Node","hasChildren","childrenField","childrenOptions","hasChildrenObject","_childrenOptions","_initChildren","_loaded","HierarchicalDataSource","collection","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","_matchFilter","dataMethod","_attachBubbleHandlers","_hierarchicalFilter","_markHierarchicalQuery","_updateHierarchicalFilter","_find","inferList","list","textField","urlField","spriteCssClassField","imageUrlField","textChild","className","elements","tagName","firstChild","attr","nodeType","nodeValue","trim","_dataSource","Buffer","viewSize","disablePrefetch","_prefetching","buffer","_reset","_syncWithDataSource","setViewSize","_recalculate","itemPresent","dataOffset","prefetchThreshold","midPageThreshold","nextMidRange","nextPageThreshold","nextFullRange","pullBackThreshold","offset","previousMidRange","previousFullRange","_goToRange","nextRange","syncDataSource","prefetchOffset","expanding","_expanding","_syncPending","_firstItemUid","BatchBuffer","batchSize","batchBuffer","endreached","prefetching","prefetched","reset","resize","amd","a1","a2","a3"],"mappings":"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"}