{"version":3,"sources":["kendo.datetimepicker.js"],"names":["f","define","$","undefined","lastTimeOption","interval","date","Date","setMinutes","preventDefault","e","normalize","options","timeFormat","patterns","kendo","getCulture","culture","calendars","standard","parseFormats","length","format","extractFormat","g","t","DateView","unshift","inArray","push","window","TimeView","html","parse","parseDate","support","activeElement","_activeElement","_extractFormat","calendar","isInRange","restrictValue","isEqualDatePart","getMilliseconds","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","UP","mouseAndTouchPresent","applyEventMap","slice","DISABLED","READONLY","FOCUSED","HOVER","STATEDISABLED","HOVEREVENTS","MOUSEDOWN","MONTH","SPAN","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_OWNS","ARIA_DISABLED","ARIA_READONLY","DATE","MIN","MAX","dateViewParams","view","timeViewParams","extend","SINGLE_POPUP_TEMPLATE","STATE_SELECTED","DateTimePicker","init","element","disabled","initialValue","that","this","componentType","fn","call","disableDates","min","attr","max","_specifiedRange","_initialOptions","_wrapper","singlePopup","_popup","_views","_icons","_reset","_template","setAttribute","type","addClass","role","aria-expanded","autocomplete","_midnight","_calculateMidnight","is","parents","enable","readonly","value","val","_createDateInput","_old","_update","_oldText","_applyCssClasses","notify","name","dates","height","footer","start","depth","animation","month","ARIATemplate","dateButtonText","timeButtonText","dateInput","weekNumber","messages","set","cancel","hour","minute","second","millisecond","now","time","today","size","fillMode","rounded","events","componentTypes","classic","timeView","list","modern","setOptions","currentValue","_value","dateView","_current","_dateIcon","off","remove","_timeIcon","_editable","_dateInput","toString","_updateARIA","dateIcon","timeIcon","wrapper","disable","removeClass","on","_toggleHover","removeAttribute","proxy","_keydown","_change","current","getToday","close","toggle","_focusElement","eventType","touch","match","trigger","destroy","popup","_form","_resetHandler","open","popupHovered","_calendar","ul","find","bind","_hovered","_switchToTimeView","_switchToDateView","setTimeout","_option","visible","secondView","dateChanged","valueUpdated","textFormatted","oldValue","_typing","option","minDateEqual","maxDateEqual","timeViewOptions","maxSet","getTime","dataBind","currentTarget","toggleClass","rebind","old","skip","formattedValue","isSameType","String","grep","d","isDateViewVisible","stopPropagation","stopImmediatePropagation","altKey","keyCode","keys","DOWN","move","ENTER","div","msMin","timeDiv","omitPopup","id","dateDiv","anchor","change","_applyDateValue","_currentlySelected","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","_toggleIcons","_dateViewID","validateDate","_applyTimeValue","_timeSelected","_adjustListWidth","_updateTitle","_timeViewID","active","_optionID","useValueToRender","specifiedRange","adjustedDate","msValue","msMax","setHours","_parse","icons","renderButton","icon","shape","insertAfter","hide","wrap","parent","style","cssText","css","width","className","formId","form","closest","disabledDate","optionsValue","defaultValue","_ariaTemplate","template","DateInput","_updateAria","appendTo","document","body","append","buttonSize","getValidCssClass","Popup","isRtl","activate","addTranslate","applyValue","_updateRanges","sender","_groupChangeClick","_cancelClickHandler","_setClickHandler","button","index","eq","_updateCurrentlySelected","getHours","getMinutes","setSeconds","getSeconds","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.datetimepicker.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.datetimepicker', [\n        'kendo.datepicker',\n        'kendo.timepicker',\n        'kendo.html.button'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'datetimepicker',\n        name: 'DateTimePicker',\n        category: 'web',\n        description: 'The DateTimePicker allows the end user to select a value from a calendar or a time drop-down list.',\n        depends: [\n            'datepicker',\n            'timepicker'\n        ]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, TimeView = kendo.TimeView, html = kendo.html, parse = kendo.parseDate, support = kendo.support, activeElement = kendo._activeElement, extractFormat = kendo._extractFormat, calendar = kendo.calendar, isInRange = calendar.isInRange, restrictValue = calendar.restrictValue, isEqualDatePart = calendar.isEqualDatePart, getMilliseconds = TimeView.getMilliseconds, ui = kendo.ui, Widget = ui.Widget, OPEN = 'open', CLOSE = 'close', CHANGE = 'change', ns = '.kendoDateTimePicker', CLICK = 'click' + ns, UP = support.mouseAndTouchPresent ? kendo.applyEventMap('up', ns.slice(1)) : CLICK, DISABLED = 'disabled', READONLY = 'readonly', FOCUSED = 'k-focus', HOVER = 'k-hover', STATEDISABLED = 'k-disabled', HOVEREVENTS = 'mouseenter' + ns + ' mouseleave' + ns, MOUSEDOWN = 'mousedown' + ns, MONTH = 'month', SPAN = '<span/>', ARIA_ACTIVEDESCENDANT = 'aria-activedescendant', ARIA_EXPANDED = 'aria-expanded', ARIA_HIDDEN = 'aria-hidden', ARIA_OWNS = 'aria-owns', ARIA_DISABLED = 'aria-disabled', ARIA_READONLY = 'aria-readonly', DATE = Date, MIN = new DATE(1800, 0, 1), MAX = new DATE(2099, 11, 31), dateViewParams = { view: 'date' }, timeViewParams = { view: 'time' }, extend = $.extend, SINGLE_POPUP_TEMPLATE = '<div class=\"k-date-tab k-datetime-wrap\">' + '<div class=\"k-datetime-buttongroup\">' + '<div class=\"k-button-group k-button-group-stretched\">' + '<button class=\"k-button #=buttonSize# k-rounded-md k-button-solid k-button-solid-base k-selected k-group-start\">' + '<span class=\"k-button-text\">#=messages.date#</span>' + '</button>' + '<button class=\"k-button #=buttonSize# k-rounded-md k-button-solid k-button-solid-base k-group-end\">' + '<span class=\"k-button-text\">#=messages.time#</span>' + '</button>' + '</div>' + '</div>' + '<div class=\"k-datetime-selector\">' + '<div class=\"k-datetime-calendar-wrap\">' + '</div>' + '<div class=\"k-datetime-time-wrap\">' + '</div>' + '</div>' + '<div class=\"k-datetime-footer k-action-buttons\">' + '<button class=\"k-button #=buttonSize# k-rounded-md k-button-solid k-button-solid-base k-time-cancel\" title=\"Cancel\" aria-label=\"Cancel\">' + '<span class=\"k-button-text\">#=messages.cancel#</span>' + '</button>' + '<button class=\"k-time-accept k-button #=buttonSize# k-rounded-md k-button-solid k-button-solid-primary\" title=\"Set\" aria-label=\"Set\">' + '<span class=\"k-button-text\">#=messages.set#</span>' + '</button>' + '</div>' + '</div>', STATE_SELECTED = 'k-selected';\n        var DateTimePicker = Widget.extend({\n            init: function (element, options) {\n                var that = this, disabled, initialValue;\n                options = options || {};\n                options.componentType = options.componentType || 'classic';\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n                options.disableDates = kendo.calendar.disabled(options.disableDates);\n                options.min = parse(element.attr('min')) || parse(options.min);\n                options.max = parse(element.attr('max')) || parse(options.max);\n                if (+options.max != +MAX || +options.min != +MIN) {\n                    this._specifiedRange = true;\n                }\n                normalize(options);\n                that._initialOptions = extend({}, options);\n                that._wrapper();\n                if (options.singlePopup) {\n                    that._popup();\n                }\n                that._views();\n                that._icons();\n                that._reset();\n                that._template();\n                try {\n                    element[0].setAttribute('type', 'text');\n                } catch (e) {\n                    element[0].type = 'text';\n                }\n                element.addClass('k-input-inner').attr({\n                    'role': 'combobox',\n                    'aria-expanded': false,\n                    'autocomplete': 'off'\n                });\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                disabled = element.is('[disabled]') || $(that.element).parents('fieldset').is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is('[readonly]'));\n                }\n                initialValue = parse(options.value || that.element.val(), options.parseFormats, options.culture);\n                that._createDateInput(options);\n                that._old = that._update(initialValue || that.element.val());\n                that._oldText = element.val();\n                that._applyCssClasses();\n                kendo.notify(that);\n            },\n            options: {\n                name: 'DateTimePicker',\n                value: null,\n                format: '',\n                timeFormat: '',\n                culture: '',\n                parseFormats: [],\n                dates: [],\n                disableDates: null,\n                min: new DATE(MIN),\n                max: new DATE(MAX),\n                interval: 30,\n                height: 200,\n                footer: '',\n                start: MONTH,\n                depth: MONTH,\n                animation: {},\n                month: {},\n                ARIATemplate: 'Current focused #=data.valueType# is #=data.text#',\n                dateButtonText: 'Open the date view',\n                timeButtonText: 'Open the time view',\n                dateInput: false,\n                weekNumber: false,\n                messages: {\n                    set: 'Set',\n                    cancel: 'Cancel',\n                    hour: 'hour',\n                    minute: 'minute',\n                    second: 'second',\n                    millisecond: 'millisecond',\n                    now: 'Now',\n                    date: 'Date',\n                    time: 'Time',\n                    today: 'Today'\n                },\n                componentType: 'classic',\n                size: 'medium',\n                fillMode: 'solid',\n                rounded: 'medium'\n            },\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE\n            ],\n            componentTypes: {\n                'classic': {\n                    singlePopup: false,\n                    timeView: { list: 'list' }\n                },\n                'modern': {\n                    singlePopup: true,\n                    timeView: { list: 'scroll' }\n                }\n            },\n            setOptions: function (options) {\n                var that = this, value = that._value, min, max, currentValue;\n                Widget.fn.setOptions.call(that, options);\n                options = that.options;\n                options.min = min = parse(options.min);\n                options.max = max = parse(options.max);\n                normalize(options);\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                currentValue = options.value || that._value || that.dateView._current;\n                if (min && !isEqualDatePart(min, currentValue)) {\n                    min = new DATE(MIN);\n                }\n                if (max && !isEqualDatePart(max, currentValue)) {\n                    max = new DATE(MAX);\n                }\n                that._dateIcon.off(ns);\n                that._dateIcon.remove();\n                that._timeIcon.off(ns);\n                that._timeIcon.remove();\n                that.dateView.setOptions(options);\n                that.timeView.setOptions(extend({}, options, {\n                    format: options.timeFormat,\n                    min: min,\n                    max: max\n                }));\n                that._icons();\n                that._editable(options);\n                that._createDateInput(options);\n                if (!that._dateInput) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n                if (value) {\n                    that._updateARIA(value);\n                }\n            },\n            _editable: function (options) {\n                var that = this, element = that.element.off(ns), dateIcon = that._dateIcon.off(ns), timeIcon = that._timeIcon.off(ns), wrapper = that.wrapper.off(ns), readonly = options.readonly, disable = options.disable;\n                if (!readonly && !disable) {\n                    wrapper.removeClass(STATEDISABLED).on(HOVEREVENTS, that._toggleHover);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY, false);\n                        element[0].removeAttribute(ARIA_DISABLED, false);\n                        element[0].removeAttribute(ARIA_READONLY, false);\n                    }\n                    element.on('keydown' + ns, $.proxy(that._keydown, that)).on('focus' + ns, function () {\n                        that.wrapper.addClass(FOCUSED);\n                    }).on('focusout' + ns, function () {\n                        that.wrapper.removeClass(FOCUSED);\n                        if (element.val() !== that._oldText) {\n                            that._change(element.val());\n                            if (!element.val()) {\n                                that.dateView.current(kendo.calendar.getToday());\n                            }\n                        }\n                        if (that.options.singlePopup) {\n                            return;\n                        }\n                        that.close('date');\n                        that.close('time');\n                    });\n                    dateIcon.on(MOUSEDOWN, preventDefault).on(UP, function (e) {\n                        that.toggle('date');\n                        that._focusElement(e.type);\n                    });\n                    timeIcon.on(MOUSEDOWN, preventDefault).on(UP, function (e) {\n                        that.toggle('time');\n                        that._focusElement(e.type);\n                    });\n                } else {\n                    wrapper.addClass(disable ? STATEDISABLED : '').removeClass(disable ? '' : STATEDISABLED);\n                    element.attr(DISABLED, disable).attr(READONLY, readonly).attr(ARIA_DISABLED, disable).attr(ARIA_READONLY, readonly);\n                }\n            },\n            _focusElement: function (eventType) {\n                var element = this.element;\n                if ((!support.touch || support.mouseAndTouchPresent && !(eventType || '').match(/touch/i)) && element[0] !== activeElement()) {\n                    element.trigger('focus');\n                }\n            },\n            readonly: function (readonly) {\n                this._editable({\n                    readonly: readonly === undefined ? true : readonly,\n                    disable: false\n                });\n            },\n            enable: function (enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined ? true : enable)\n                });\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                that.dateView.destroy();\n                that.timeView.destroy();\n                if (that.options.singlePopup) {\n                    that.popup.element.off(ns);\n                    that.popup.destroy();\n                }\n                that.element.off(ns);\n                that._dateIcon.off(ns);\n                that._timeIcon.off(ns);\n                that.wrapper.off(ns);\n                if (that._form) {\n                    that._form.off('reset', that._resetHandler);\n                }\n            },\n            close: function (view) {\n                if (this.options.singlePopup) {\n                    this.popup.close();\n                } else {\n                    if (view !== 'time') {\n                        view = 'date';\n                    }\n                    this[view + 'View'].close();\n                }\n            },\n            open: function (view) {\n                var that = this;\n                var popupHovered;\n                if (that.options.singlePopup) {\n                    that.dateView._calendar();\n                    if (that.timeView.ul.find('li').length < 1) {\n                        that.timeView.bind();\n                    }\n                    popupHovered = that.popup._hovered;\n                    that.popup._hovered = true;\n                    that.popup.open();\n                    if (view === 'time') {\n                        that._switchToTimeView();\n                    } else {\n                        that._switchToDateView();\n                    }\n                    this._dateIcon.toggle(view !== 'time');\n                    this._timeIcon.toggle(view === 'time');\n                    setTimeout(function () {\n                        that.popup._hovered = popupHovered;\n                    }, 1);\n                } else {\n                    if (view !== 'time') {\n                        view = 'date';\n                    }\n                    this[view + 'View'].open();\n                }\n            },\n            min: function (value) {\n                return this._option('min', value);\n            },\n            max: function (value) {\n                return this._option('max', value);\n            },\n            toggle: function (view) {\n                if (this.options.singlePopup) {\n                    if (this.popup.visible()) {\n                        this.close();\n                    } else {\n                        this.open(view);\n                    }\n                } else {\n                    var secondView = 'timeView';\n                    if (view !== 'time') {\n                        view = 'date';\n                    } else {\n                        secondView = 'dateView';\n                    }\n                    this[view + 'View'].toggle();\n                    this[secondView].close();\n                }\n            },\n            value: function (value) {\n                var that = this;\n                if (value === undefined) {\n                    return that._value;\n                }\n                that._old = that._update(value);\n                if (that._old === null) {\n                    if (that._dateInput) {\n                        that._dateInput.value(that._old);\n                    } else {\n                        that.element.val('');\n                    }\n                }\n                that._oldText = that.element.val();\n            },\n            _change: function (value) {\n                var that = this, oldValue = that.element.val(), dateChanged;\n                value = that._update(value);\n                dateChanged = +that._old != +value;\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n                    that.trigger(CHANGE);\n                }\n                that._typing = false;\n            },\n            _option: function (option, value) {\n                var that = this;\n                var options = that.options;\n                var timeView = that.timeView;\n                var timeViewOptions = timeView.options;\n                var current = that._value || that._old;\n                var minDateEqual;\n                var maxDateEqual;\n                if (value === undefined) {\n                    return options[option];\n                }\n                value = parse(value, options.parseFormats, options.culture);\n                timeViewOptions.maxSet = false;\n                if (!value) {\n                    return;\n                }\n                if (options.min.getTime() === options.max.getTime()) {\n                    timeViewOptions.dates = [];\n                }\n                options[option] = new DATE(value.getTime());\n                that.dateView[option](value);\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                if (current) {\n                    minDateEqual = isEqualDatePart(options.min, current);\n                    maxDateEqual = isEqualDatePart(options.max, current);\n                }\n                if (minDateEqual || maxDateEqual) {\n                    timeViewOptions[option] = value;\n                    if (minDateEqual && !maxDateEqual) {\n                        timeViewOptions.max = lastTimeOption(options.interval);\n                    }\n                    if (maxDateEqual) {\n                        if (that._midnight) {\n                            timeView.dataBind([MAX]);\n                            return;\n                        } else if (!minDateEqual) {\n                            timeViewOptions.min = MIN;\n                            timeViewOptions.maxSet = true;\n                        }\n                    }\n                } else {\n                    timeViewOptions.max = MAX;\n                    timeViewOptions.min = MIN;\n                }\n                timeView.bind();\n            },\n            _toggleHover: function (e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === 'mouseenter');\n            },\n            _update: function (value) {\n                var that = this, options = that.options, min = options.min, max = options.max, dates = options.dates, timeView = that.timeView, current = that._value, date = parse(value, options.parseFormats, options.culture), isSameType = date === null && current === null || date instanceof Date && current instanceof Date, rebind, timeViewOptions, old, skip, formattedValue;\n                if (options.disableDates && options.disableDates(date)) {\n                    date = null;\n                    if (!that._old && !that.element.val()) {\n                        value = null;\n                    }\n                }\n                if (+date === +current && isSameType) {\n                    formattedValue = kendo.toString(date, options.format, options.culture);\n                    if (formattedValue !== value) {\n                        that.element.val(date === null ? value : formattedValue);\n                        if (value instanceof String) {\n                            that.element.trigger(CHANGE);\n                        }\n                    }\n                    return date;\n                }\n                if (date !== null && isEqualDatePart(date, min)) {\n                    date = restrictValue(date, min, max);\n                } else if (!isInRange(date, min, max)) {\n                    date = null;\n                }\n                that._value = date;\n                timeView.value(date);\n                that.dateView.value(date);\n                if (date) {\n                    old = that._old;\n                    timeViewOptions = timeView.options;\n                    timeViewOptions.maxSet = false;\n                    if (dates[0]) {\n                        dates = $.grep(dates, function (d) {\n                            return isEqualDatePart(date, d);\n                        });\n                        if (dates[0]) {\n                            timeView.dataBind(dates);\n                            skip = true;\n                        }\n                    }\n                    if (!skip) {\n                        if (isEqualDatePart(date, min)) {\n                            timeViewOptions.min = min;\n                            timeViewOptions.max = lastTimeOption(options.interval);\n                            rebind = true;\n                        }\n                        if (isEqualDatePart(date, max)) {\n                            if (that._midnight) {\n                                timeView.dataBind([MAX]);\n                                skip = true;\n                            } else {\n                                timeViewOptions.max = max;\n                                timeViewOptions.maxSet = true;\n                                if (!rebind) {\n                                    timeViewOptions.min = MIN;\n                                }\n                                rebind = true;\n                            }\n                        }\n                    }\n                    if (!skip && (!old && rebind || old && !isEqualDatePart(old, date))) {\n                        if (!rebind) {\n                            timeViewOptions.max = MAX;\n                            timeViewOptions.min = MIN;\n                        }\n                        timeView.bind();\n                    }\n                }\n                if (that._dateInput) {\n                    if (date) {\n                        that._dateInput.value(date);\n                    }\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                that._updateARIA(date);\n                return date;\n            },\n            _keydown: function (e) {\n                var that = this, dateView = that.dateView, timeView = that.timeView, value = that.element.val(), isDateViewVisible = that.options.singlePopup ? that.popup.visible() : dateView.popup.visible();\n                var stopPropagation = that._dateInput && e.stopImmediatePropagation;\n                if (e.altKey && e.keyCode === kendo.keys.DOWN) {\n                    that.toggle(isDateViewVisible ? 'time' : 'date');\n                } else if (isDateViewVisible) {\n                    dateView.move(e);\n                    that._updateARIA(dateView._current);\n                } else if (!that.options.singlePopup && timeView.popup.visible()) {\n                    timeView.move(e);\n                } else if (e.keyCode === kendo.keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                    stopPropagation = false;\n                }\n                if (stopPropagation) {\n                    e.stopImmediatePropagation();\n                }\n            },\n            _views: function () {\n                var that = this, element = that.element, options = that.options, id = element.attr('id'), dateView, timeView, div, ul, msMin, date, timeDiv, omitPopup, timeViewOptions;\n                if (options.singlePopup) {\n                    options.dateDiv = that.popup.element.find('.k-datetime-calendar-wrap');\n                    timeDiv = that.popup.element.find('.k-datetime-time-wrap');\n                    options.omitPopup = omitPopup = true;\n                    timeViewOptions = options.timeView;\n                }\n                that.dateView = dateView = new kendo.DateView(extend({}, options, {\n                    id: id,\n                    anchor: that.wrapper,\n                    change: function () {\n                        var value = that._applyDateValue();\n                        if (options.singlePopup) {\n                            if (!that.timeView._currentlySelected) {\n                                that.timeView._currentlySelected = new Date();\n                            }\n                            that.timeView._currentlySelected.setFullYear(value.getFullYear());\n                            that.timeView._currentlySelected.setMonth(value.getMonth());\n                            that.timeView._currentlySelected.setDate(value.getDate());\n                            that._switchToTimeView();\n                            that._toggleIcons();\n                        } else {\n                            that._change(value);\n                            that.close('date');\n                        }\n                    },\n                    close: function (e) {\n                        if (that.trigger(CLOSE, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            div.attr(ARIA_HIDDEN, true);\n                            if (!that.options.singlePopup && !timeView.popup.visible()) {\n                                if (element && element.length) {\n                                    element[0].removeAttribute(ARIA_OWNS);\n                                }\n                            }\n                        }\n                    },\n                    open: function (e) {\n                        if (that.trigger(OPEN, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n                                that.dateView[date ? 'current' : 'value'](date);\n                            }\n                            div.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true).attr(ARIA_OWNS, dateView._dateViewID);\n                            that._updateARIA(date);\n                        }\n                    }\n                }));\n                div = dateView.div;\n                msMin = options.min.getTime();\n                that.timeView = timeView = new TimeView({\n                    id: id,\n                    value: options.value,\n                    size: options.size,\n                    anchor: that.wrapper,\n                    animation: options.animation,\n                    format: options.timeFormat,\n                    culture: options.culture,\n                    height: options.componentType === 'modern' ? null : options.height,\n                    interval: options.interval,\n                    min: options.componentType === 'modern' ? options.min : new DATE(MIN),\n                    max: options.componentType === 'modern' ? options.max : new DATE(MAX),\n                    dates: msMin === options.max.getTime() ? [new Date(msMin)] : [],\n                    parseFormats: options.parseFormats,\n                    validateDate: true,\n                    change: function (value, trigger) {\n                        value = that._applyTimeValue(value);\n                        if (trigger) {\n                            that._timeSelected = true;\n                            that._change(value);\n                        } else {\n                            element.val(kendo.toString(value, options.format, options.culture));\n                            dateView.value(value);\n                            that._updateARIA(value);\n                        }\n                    },\n                    close: function (e) {\n                        if (that.trigger(CLOSE, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            ul.attr(ARIA_HIDDEN, true);\n                            element.attr(ARIA_EXPANDED, false);\n                            if (!dateView.popup.visible()) {\n                                if (element && element.length) {\n                                    element[0].removeAttribute(ARIA_OWNS);\n                                }\n                            }\n                        }\n                    },\n                    open: function (e) {\n                        if (that.options.componentType !== 'modern') {\n                            timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n                        if (that.trigger(OPEN, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n                                that.timeView.value(date);\n                            }\n                            ul.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true).attr(ARIA_OWNS, timeView._timeViewID);\n                            timeView.options.active(timeView.current());\n                        }\n                    },\n                    active: function (current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    popup: options.popup,\n                    useValueToRender: true,\n                    specifiedRange: that._specifiedRange,\n                    omitPopup: omitPopup,\n                    timeDiv: timeDiv,\n                    timeView: timeViewOptions,\n                    messages: that.options.messages\n                });\n                ul = timeView.ul;\n            },\n            _applyDateValue: function () {\n                var that = this;\n                var options = that.options;\n                var dateView = that.dateView;\n                var value = dateView.calendar.value();\n                var msValue = +value;\n                var msMin = +options.min;\n                var msMax = +options.max;\n                var current, adjustedDate;\n                if (msValue === msMin || msValue === msMax) {\n                    current = msValue === msMin ? msMin : msMax;\n                    current = new DATE(that._value || current);\n                    current.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n                    if (isInRange(current, msMin, msMax)) {\n                        value = current;\n                    }\n                }\n                if (that._value) {\n                    adjustedDate = kendo.date.setHours(new Date(value), that._value);\n                    if (isInRange(adjustedDate, msMin, msMax)) {\n                        value = adjustedDate;\n                    }\n                }\n                return value;\n            },\n            _applyTimeValue: function (value) {\n                var timeView = this.timeView;\n                var options = this.options;\n                value = timeView._parse(value);\n                if (value < options.min) {\n                    value = new DATE(+options.min);\n                    timeView.options.min = value;\n                } else if (value > options.max) {\n                    value = new DATE(+options.max);\n                    timeView.options.max = value;\n                }\n                return value;\n            },\n            _icons: function () {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var icons;\n                icons = that.wrapper.find('button.k-input-button');\n                if (!icons[0]) {\n                    that._dateIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-select k-input-button\" aria-label=\"' + options.dateButtonText + '\"></button>', {\n                        icon: 'calendar',\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: null,\n                        rounded: null\n                    })).insertAfter(element);\n                    that._timeIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-select k-input-button\" aria-label=\"' + options.timeButtonText + '\"></button>', {\n                        icon: 'clock',\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: null,\n                        rounded: null\n                    })).insertAfter(element);\n                }\n                that._dateIcon.attr('aria-controls', that.dateView._dateViewID);\n                that._timeIcon.attr('aria-controls', that.timeView._timeViewID);\n                if (options.singlePopup) {\n                    that._timeIcon.hide();\n                }\n            },\n            _wrapper: function () {\n                var that = this, element = that.element, wrapper;\n                wrapper = element.parents('.k-datetimepicker');\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n                wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    width: '100%',\n                    height: element[0].style.height\n                });\n                that.wrapper = wrapper.addClass('k-datetimepicker k-input').addClass(element[0].className).removeClass('input-validation-error');\n            },\n            _reset: function () {\n                var that = this, element = that.element, formId = element.attr('form'), form = formId ? $('#' + formId) : element.closest('form'), options = that.options, disabledDate = options.disableDates, parseFormats = options.parseFormats.length ? options.parseFormats : null, optionsValue = that._initialOptions.value, initialValue = element[0].defaultValue;\n                if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                    optionsValue = null;\n                }\n                if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                    element.attr('value', kendo.toString(optionsValue, options.format, options.culture));\n                }\n                if (form[0]) {\n                    that._resetHandler = function () {\n                        that.value(optionsValue || element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n                    that._form = form.on('reset', that._resetHandler);\n                }\n            },\n            _template: function () {\n                this._ariaTemplate = $.proxy(kendo.template(this.options.ARIATemplate), this);\n            },\n            _createDateInput: function (options) {\n                if (this._dateInput) {\n                    this._dateInput.destroy();\n                    this._dateInput = null;\n                }\n                if (options.dateInput) {\n                    this._dateInput = new ui.DateInput(this.element, {\n                        culture: options.culture,\n                        format: options.format,\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        min: options.min,\n                        max: options.max,\n                        interval: options.interval\n                    });\n                }\n            },\n            _calculateMidnight: function (min, max) {\n                return getMilliseconds(min) + getMilliseconds(max) === 0;\n            },\n            _updateARIA: function (date) {\n                var that = this;\n                var calendar = that.dateView.calendar;\n                if (that.element && that.element.length) {\n                    that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                }\n                if (calendar) {\n                    that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                }\n            },\n            _popup: function () {\n                var that = this;\n                var options = that.options;\n                var div = $('<div></div>').attr(ARIA_HIDDEN, 'true').addClass('k-datetime-container k-group k-reset').appendTo(document.body);\n                div.append(kendo.template(SINGLE_POPUP_TEMPLATE)(extend({}, that.options, { buttonSize: kendo.getValidCssClass('k-button-', 'size', that.options.size) })));\n                that.popup = new ui.Popup(div, extend(options.popup, options, {\n                    name: 'Popup',\n                    isRtl: kendo.support.isRtl(that.wrapper),\n                    anchor: that.wrapper,\n                    activate: function () {\n                        if (that.options.timeView && that.options.timeView.list === 'scroll') {\n                            that.timeView.addTranslate();\n                            that.timeView.applyValue(that._value);\n                            that.timeView._updateRanges();\n                        }\n                    },\n                    open: function (e) {\n                        if (that.trigger(OPEN, {\n                                view: this.element.find('.k-date-tab').length ? 'date' : 'time',\n                                sender: that\n                            })) {\n                            e.preventDefault();\n                        }\n                        that.timeView._updateTitle();\n                    }\n                }));\n                div.on(CLICK + ns, '.k-datetime-buttongroup .k-button', $.proxy(that._groupChangeClick, that));\n                div.on(CLICK + ns, '.k-datetime-footer button.k-time-cancel', $.proxy(that._cancelClickHandler, that));\n                div.on(CLICK + ns, '.k-datetime-footer button.k-time-accept', $.proxy(that._setClickHandler, that));\n            },\n            _groupChangeClick: function (e) {\n                preventDefault(e);\n                var button = $(e.currentTarget);\n                var index = button.index();\n                if (index) {\n                    this._switchToTimeView();\n                } else {\n                    this._switchToDateView();\n                }\n                this._toggleIcons();\n            },\n            _switchToDateView: function () {\n                this.popup.element.find('.k-group-start, .k-group-end').removeClass(STATE_SELECTED).eq(0).addClass(STATE_SELECTED);\n                this.popup.element.find('.k-datetime-wrap').removeClass('k-time-tab').addClass('k-date-tab');\n            },\n            _switchToTimeView: function () {\n                this.timeView.addTranslate();\n                this.timeView.applyValue(this._value);\n                this.timeView._updateRanges();\n                this.popup.element.find('.k-group-start, .k-group-end').removeClass(STATE_SELECTED).eq(1).addClass(STATE_SELECTED);\n                this.popup.element.find('.k-datetime-wrap').removeClass('k-date-tab').addClass('k-time-tab');\n            },\n            _toggleIcons: function () {\n                this._dateIcon.toggle();\n                this._timeIcon.toggle();\n            },\n            _cancelClickHandler: function (e) {\n                preventDefault(e);\n                if (this._value) {\n                    this.value(this._value);\n                    this.dateView.value(this._value);\n                }\n                this.popup.close();\n            },\n            _setClickHandler: function (e) {\n                preventDefault(e);\n                var value = this._applyDateValue();\n                var time;\n                value = value || new Date();\n                time = this.timeView._currentlySelected || value;\n                this.timeView._updateCurrentlySelected();\n                value.setHours(time.getHours());\n                value.setMinutes(time.getMinutes());\n                value.setSeconds(time.getSeconds());\n                value = this._applyTimeValue(value);\n                this._change(value);\n                this.popup.close();\n            }\n        });\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n        function normalize(options) {\n            var patterns = kendo.getCulture(options.culture).calendars.standard.patterns, parseFormats = !options.parseFormats.length, timeFormat;\n            options.format = extractFormat(options.format || patterns.g);\n            options.timeFormat = timeFormat = extractFormat(options.timeFormat || patterns.t);\n            kendo.DateView.normalize(options);\n            if (parseFormats) {\n                options.parseFormats.unshift('yyyy-MM-ddTHH:mm:ss');\n            }\n            if ($.inArray(timeFormat, options.parseFormats) === -1) {\n                options.parseFormats.push(timeFormat);\n            }\n        }\n        kendo.cssProperties.registerPrefix('DateTimePicker', 'k-input-');\n        kendo.cssProperties.registerValues('DateTimePicker', [{\n                prop: 'rounded',\n                values: kendo.cssProperties.roundedValues.concat([[\n                        'full',\n                        'full'\n                    ]])\n            }]);\n        ui.plugin(DateTimePicker);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}