{"version":3,"sources":["kendo.html.input.js"],"names":["f","define","$","undefined","kendo","window","HTMLBase","html","renderCheckBox","element","options","arguments","isPlainObject","HTMLCheckBox","renderRadioButton","HTMLRadioButton","HTMLInput","extend","init","that","this","fn","call","_wrapper","_addClasses","label","labelPosition","encoded","elementId","id","wrapper","addClass","inputClass","prop","type","guid","labelEl","labelClass","text","after","wrapperHtml","outerHTML","name","rounded","size","stylingOptions","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","jQuery","amd","a1","a2","a3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,oBAAqB,mBAAoBD,IAClD,WAmHE,MA1GC,UAAUE,EAAGC,GAAb,GACOC,GAAQC,OAAOD,MAAOE,EAAWF,EAAMG,KAAKD,SAC5CE,EAAiB,SAAUC,EAASC,GAKpC,OAJIC,UAAU,KAAOR,GAAaD,EAAEU,cAAcD,UAAU,OACxDD,EAAUD,EACVA,EAAUP,EAAE,cAET,GAAIW,GAAaJ,EAASC,GAASH,QAE1CO,EAAoB,SAAUL,EAASC,GAKvC,OAJIC,UAAU,KAAOR,GAAaD,EAAEU,cAAcD,UAAU,OACxDD,EAAUD,EACVA,EAAUP,EAAE,cAET,GAAIa,GAAgBN,EAASC,GAASH,QAE7CS,EAAYV,EAASW,QACrBC,KAAM,SAAUT,EAASC,GACrB,GAAIS,GAAOC,IACXd,GAASe,GAAGH,KAAKI,KAAKH,EAAMV,EAASC,GACrCS,EAAKI,WACLJ,EAAKK,eAETd,SACIe,MAAO,KACPC,cAAe,QACfC,SAAS,GAEbJ,SAAU,WACN,GAAIJ,GAAOC,KAAMX,EAAUU,EAAKV,QAAQ,GAAIC,EAAUS,EAAKT,QAASkB,EAAYnB,EAAQoB,EACxFV,GAAKW,QAAUX,EAAKV,QAAQsB,SAASrB,EAAQsB,YAAYC,KAAK,OAAQvB,EAAQwB,OACzEN,GAAelB,EAAQe,QACxBhB,EAAQoB,GAAKD,EAAYxB,EAAM+B,QAE7BzB,EAAQe,QACVN,EAAKiB,QAAUlC,EAAE,eAAkB0B,EAAY,YAAgBlB,EAAQ2B,WAAa,MAChF3B,EAAQiB,QACRR,EAAKiB,QAAQE,KAAK5B,EAAQe,OAE1BN,EAAKiB,QAAQ7B,KAAKG,EAAQe,OAE9BN,EAAKV,QAAQC,EAAQgB,eAAeP,EAAKiB,WAGjD7B,KAAM,WACF,GAAIY,GAAOC,KAAMmB,EAAuC,UAA/BpB,EAAKT,QAAQgB,cAA2Bc,EAAclC,EAASe,GAAGd,KAAKe,KAAKH,EACrG,OAAKA,GAAKiB,QAGNG,EACOC,EAAcrB,EAAKiB,QAAQ,GAAGK,UAElCtB,EAAKiB,QAAQ,GAAGK,UAAYD,EALxBA,KAQf3B,EAAeG,EAAUC,QACzBC,KAAM,SAAUT,EAASC,GACrB,GAAIS,GAAOC,IACXJ,GAAUK,GAAGH,KAAKI,KAAKH,EAAMV,EAASC,GACtCS,EAAKK,eAETd,SACIgC,KAAM,eACNV,WAAY,aACZK,WAAY,mBACZH,KAAM,WACNS,QAAS,SACTC,KAAM,SACNC,gBACI,OACA,cAIR9B,EAAkBC,EAAUC,QAC5BC,KAAM,SAAUT,EAASC,GACrB,GAAIS,GAAOC,IACXJ,GAAUK,GAAGH,KAAKI,KAAKH,EAAMV,EAASC,GACtCS,EAAKK,eAETd,SACIgC,KAAM,kBACNV,WAAY,UACZK,WAAY,gBACZH,KAAM,QACNU,KAAM,SACNC,gBAAiB,UAGzB3C,GAAEe,OAAOb,EAAMG,MACXC,eAAgBA,EAChBM,kBAAmBA,EACnBE,UAAWA,EACXH,aAAcA,EACdE,gBAAiBA,IAErBX,EAAM0C,cAAcC,eAAe,eAAgB,eACnD3C,EAAM0C,cAAcE,eAAe,iBAC3Bf,KAAM,UACNgB,OAAQ7C,EAAM0C,cAAcI,cAAcC,SAClC,OACA,aAGhB/C,EAAM0C,cAAcC,eAAe,kBAAmB,aACxD1C,OAAOD,MAAMgD,QACR/C,OAAOD,OACE,kBAAVH,SAAwBA,OAAOoD,IAAMpD,OAAS,SAAUqD,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.html.input.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.html.input', ['kendo.html.base'], f);\n}(function () {\n    var __meta__ = {\n        id: 'html.input',\n        name: 'Html.Input',\n        category: 'web',\n        description: 'HTML rendering utility for Kendo UI for jQuery.',\n        depends: ['html.base'],\n        features: []\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, HTMLBase = kendo.html.HTMLBase;\n        var renderCheckBox = function (element, options) {\n            if (arguments[0] === undefined || $.isPlainObject(arguments[0])) {\n                options = element;\n                element = $('<input />');\n            }\n            return new HTMLCheckBox(element, options).html();\n        };\n        var renderRadioButton = function (element, options) {\n            if (arguments[0] === undefined || $.isPlainObject(arguments[0])) {\n                options = element;\n                element = $('<input />');\n            }\n            return new HTMLRadioButton(element, options).html();\n        };\n        var HTMLInput = HTMLBase.extend({\n            init: function (element, options) {\n                var that = this;\n                HTMLBase.fn.init.call(that, element, options);\n                that._wrapper();\n                that._addClasses();\n            },\n            options: {\n                label: null,\n                labelPosition: 'after',\n                encoded: true\n            },\n            _wrapper: function () {\n                var that = this, element = that.element[0], options = that.options, elementId = element.id;\n                that.wrapper = that.element.addClass(options.inputClass).prop('type', options.type);\n                if (!elementId && !!options.label) {\n                    element.id = elementId = kendo.guid();\n                }\n                if (!!options.label) {\n                    that.labelEl = $('<label for=\\'' + elementId + '\\' class=\\'' + options.labelClass + '\\'>');\n                    if (options.encoded) {\n                        that.labelEl.text(options.label);\n                    } else {\n                        that.labelEl.html(options.label);\n                    }\n                    that.element[options.labelPosition](that.labelEl);\n                }\n            },\n            html: function () {\n                var that = this, after = that.options.labelPosition === 'after', wrapperHtml = HTMLBase.fn.html.call(that);\n                if (!that.labelEl) {\n                    return wrapperHtml;\n                }\n                if (after) {\n                    return wrapperHtml + that.labelEl[0].outerHTML;\n                }\n                return that.labelEl[0].outerHTML + wrapperHtml;\n            }\n        });\n        var HTMLCheckBox = HTMLInput.extend({\n            init: function (element, options) {\n                var that = this;\n                HTMLInput.fn.init.call(that, element, options);\n                that._addClasses();\n            },\n            options: {\n                name: 'HTMLCheckBox',\n                inputClass: 'k-checkbox',\n                labelClass: 'k-checkbox-label',\n                type: 'checkbox',\n                rounded: 'medium',\n                size: 'medium',\n                stylingOptions: [\n                    'size',\n                    'rounded'\n                ]\n            }\n        });\n        var HTMLRadioButton = HTMLInput.extend({\n            init: function (element, options) {\n                var that = this;\n                HTMLInput.fn.init.call(that, element, options);\n                that._addClasses();\n            },\n            options: {\n                name: 'HTMLRadioButton',\n                inputClass: 'k-radio',\n                labelClass: 'k-radio-label',\n                type: 'radio',\n                size: 'medium',\n                stylingOptions: ['size']\n            }\n        });\n        $.extend(kendo.html, {\n            renderCheckBox: renderCheckBox,\n            renderRadioButton: renderRadioButton,\n            HTMLInput: HTMLInput,\n            HTMLCheckBox: HTMLCheckBox,\n            HTMLRadioButton: HTMLRadioButton\n        });\n        kendo.cssProperties.registerPrefix('HTMLCheckBox', 'k-checkbox-');\n        kendo.cssProperties.registerValues('HTMLCheckBox', [{\n                prop: 'rounded',\n                values: kendo.cssProperties.roundedValues.concat([[\n                        'full',\n                        'full'\n                    ]])\n            }]);\n        kendo.cssProperties.registerPrefix('HTMLRadioButton', 'k-radio-');\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}